openapi: 3.0.3
info:
  title: Api Documentation
  description: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
  version: '1.0'
servers:
  #- url: http://localhost:8081/products
  #- url: http://localhost:8080
  - url: http://localhost:30117
    description: Inferred Url
tags:
  - name: backend-controller
    description: Backend Controller
  - name: basic-error-controller
    description: Basic Error Controller
  - name: cart-controller
    description: Cart Controller
  - name: checkout-controller
    description: Checkout Controller
  - name: customer-controller
    description: Customer Controller
  - name: distillery-controller
    description: Distillery Controller
  - name: frontend-controller
    description: Frontend Controller
  - name: orders-controller
    description: Orders Controller
  - name: product-controller
    description: Product Controller
  - name: region-controller
    description: Region Controller
  - name: showcase-controller
    description: Showcase Controller
  - name: storage-controller
    description: Storage Controller
paths:
  /admin:
    get:
      tags:
        - backend-controller
      summary: index
      operationId: indexUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/:
    get:
      tags:
        - backend-controller
      summary: index
      operationId: indexUsingGET_1
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/index:
    get:
      tags:
        - backend-controller
      summary: index
      operationId: indexUsingGET_2
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPUT
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPOST
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingDELETE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingOPTIONS
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    head:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingHEAD
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingPATCH
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    trace:
      tags:
        - basic-error-controller
      summary: error
      operationId: errorUsingTRACE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /cart:
    get:
      tags:
        - cart-controller
      summary: getCart
      operationId: getCartUsingGET
      parameters:
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - cart-controller
      summary: updateCartByAjax
      operationId: updateCartByAjaxUsingPUT
      parameters:
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemDTOReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - cart-controller
      summary: updateCartByForm
      operationId: updateCartByFormUsingPOST
      parameters:
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /cart/clear:
    post:
      tags:
        - cart-controller
      summary: clearCart
      operationId: clearCartUsingPOST
      parameters:
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /cart/delivery/{delivery}:
    put:
      tags:
        - cart-controller
      summary: setDelivery
      operationId: setDeliveryUsingPUT
      parameters:
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: delivery
          in: path
          description: delivery
          required: true
          style: simple
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartDTO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /checkout/confirmation:
    get:
      tags:
        - checkout-controller
      summary: getGratitude
      operationId: getGratitudeUsingGET
      parameters:
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /checkout/details:
    get:
      tags:
        - checkout-controller
      summary: details
      operationId: detailsUsingGET
      parameters:
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - checkout-controller
      summary: changeContacts
      operationId: changeContactsUsingPOST
      parameters:
        - name: address
          in: query
          required: false
          style: form
          schema:
            maximum: 100
            minimum: 0
            maxLength: 100
            minLength: 0
            pattern: ^[^#$%^*()']*$
            type: string
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: phone
          in: query
          required: false
          style: form
          schema:
            maximum: 20
            minimum: 0
            maxLength: 20
            minLength: 0
            pattern: ^\+[1-9][0-9]?[\s]*\(?\d{3}\)?[-\s]?\d{3}[-\s]?\d{2}[-\s]?\d{2}$
            type: string
        - name: changeContacts
          in: query
          description: changeContacts
          required: true
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /checkout/payment:
    get:
      tags:
        - checkout-controller
      summary: getPayment
      operationId: getPaymentUsingGET
      parameters:
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - checkout-controller
      summary: postPayment
      operationId: postPaymentUsingPOST
      parameters:
        - name: ccNumber
          in: query
          required: false
          style: form
          schema:
            pattern: \b(?:\d[ -]*?){13,16}\b
            type: string
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /customer/new:
    get:
      tags:
        - customer-controller
      summary: getRegistrationPage
      operationId: getRegistrationPageUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - customer-controller
      summary: postRegistrationForm
      operationId: postRegistrationFormUsingPOST
      parameters:
        - name: address
          in: query
          required: false
          style: form
          schema:
            maximum: 100
            minimum: 0
            maxLength: 100
            minLength: 0
            pattern: ^[^#$%^*()']*$
            type: string
        - name: cartItems[0].productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: cartItems[0].quantity
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryCost
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: deliveryIncluded
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: email
          in: query
          required: false
          style: form
          schema:
            maximum: 50
            minimum: 0
            maxLength: 50
            minLength: 0
            pattern: ^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]+$
            type: string
        - name: name
          in: query
          required: false
          style: form
          schema:
            maximum: 50
            minimum: 0
            maxLength: 50
            minLength: 0
            pattern: ^[\pL '-]+$
            type: string
        - name: password
          in: query
          required: false
          style: form
          schema:
            maximum: 50
            minimum: 6
            maxLength: 50
            minLength: 6
            pattern: ^[a-zA-Z0-9]+$
            type: string
        - name: phone
          in: query
          required: false
          style: form
          schema:
            maximum: 20
            minimum: 0
            maxLength: 20
            minLength: 0
            pattern: ^\+[1-9][0-9]?[\s]*\(?\d{3}\)?[-\s]?\d{3}[-\s]?\d{2}[-\s]?\d{2}$
            type: string
        - name: productsCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalCost
          in: query
          required: false
          style: form
          schema:
            type: number
            format: double
        - name: totalItems
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: user
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /customer/orders:
    get:
      tags:
        - customer-controller
      summary: orders
      operationId: ordersUsingGET
      parameters:
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/distilleries:
    get:
      tags:
        - distillery-controller
      summary: allDistilleries
      operationId: allDistilleriesUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/distilleries/new:
    get:
      tags:
        - distillery-controller
      summary: newDistillery
      operationId: newDistilleryUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - distillery-controller
      summary: postDistillery
      operationId: postDistilleryUsingPOST
      parameters:
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: region
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: title
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/distilleries/{distilleryId}/delete:
    post:
      tags:
        - distillery-controller
      summary: deleteDistillery
      operationId: deleteDistilleryUsingPOST
      parameters:
        - name: distilleryId
          in: path
          description: distilleryId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/distilleries/{distilleryId}/edit:
    get:
      tags:
        - distillery-controller
      summary: editDistillery
      operationId: editDistilleryUsingGET
      parameters:
        - name: distilleryId
          in: path
          description: distilleryId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - distillery-controller
      summary: putDistillery
      operationId: putDistilleryUsingPOST
      parameters:
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: distilleryId
          in: path
          description: distilleryId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: region
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: title
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /:
    get:
      tags:
        - frontend-controller
      summary: index
      operationId: indexUsingGET_3
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /index:
    get:
      tags:
        - frontend-controller
      summary: index
      operationId: indexUsingGET_4
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /inside:
    get:
      tags:
        - frontend-controller
      summary: whatsInside
      operationId: whatsInsideUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /login:
    get:
      tags:
        - frontend-controller
      summary: login
      operationId: loginUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /rest-api:
    get:
      tags:
        - frontend-controller
      summary: restApi
      operationId: restApiUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/orders:
    get:
      tags:
        - orders-controller
      summary: getOrders
      operationId: getOrdersUsingGET
      parameters:
        - name: direct
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: executed
          in: query
          description: executed
          required: false
          style: form
          schema:
            type: string
        - name: created
          in: query
          description: created
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/orders/{orderId}:
    post:
      tags:
        - orders-controller
      summary: setExecutionStatus
      operationId: setExecutionStatusUsingPOST
      parameters:
        - name: orderId
          in: path
          description: orderId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: executed
          in: query
          description: executed
          required: true
          style: form
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/products:
    get:
      tags:
        - product-controller
      summary: getProducts
      operationId: getProductsUsingGET
      parameters:
        - name: direct
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: dist
          in: query
          description: dist
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/products/new:
    get:
      tags:
        - product-controller
      summary: newProduct
      operationId: newProductUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - product-controller
      summary: postProduct
      operationId: postProductUsingPOST
      parameters:
        - name: age
          in: query
          required: false
          style: form
          schema:
            maximum: 2000
            exclusiveMaximum: false
            type: integer
            format: int32
        - name: alcohol
          in: query
          required: true
          style: form
          schema:
            maximum: 96
            exclusiveMaximum: false
            minimum: 1
            exclusiveMinimum: false
            type: number
            format: float
        - name: available
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: distillery
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: name
          in: query
          required: false
          style: form
          schema:
            pattern: ^[^#$%^&*()']*$
            type: string
        - name: price
          in: query
          required: true
          style: form
          schema:
            type: number
            format: double
        - name: productId
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: volume
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/products/{productId}/delete:
    post:
      tags:
        - product-controller
      summary: deleteProduct
      operationId: deleteProductUsingPOST
      parameters:
        - name: productId
          in: path
          description: productId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/products/{productId}/edit:
    get:
      tags:
        - product-controller
      summary: editProduct
      operationId: editProductUsingGET
      parameters:
        - name: productId
          in: path
          description: productId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - product-controller
      summary: putProduct
      operationId: putProductUsingPOST
      parameters:
        - name: age
          in: query
          required: false
          style: form
          schema:
            maximum: 2000
            exclusiveMaximum: false
            type: integer
            format: int32
        - name: alcohol
          in: query
          required: true
          style: form
          schema:
            maximum: 96
            exclusiveMaximum: false
            minimum: 1
            exclusiveMinimum: false
            type: number
            format: float
        - name: available
          in: query
          required: false
          style: form
          schema:
            type: boolean
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: distillery
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: name
          in: query
          required: false
          style: form
          schema:
            pattern: ^[^#$%^&*()']*$
            type: string
        - name: price
          in: query
          required: true
          style: form
          schema:
            type: number
            format: double
        - name: productId
          in: path
          description: productId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: volume
          in: query
          required: true
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/regions:
    get:
      tags:
        - region-controller
      summary: allRegions
      operationId: allRegionsUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/regions/new:
    get:
      tags:
        - region-controller
      summary: newRegion
      operationId: newRegionUsingGET
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - region-controller
      summary: postRegion
      operationId: postRegionUsingPOST
      parameters:
        - name: color
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: subtitle
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/regions/{regionId}/delete:
    post:
      tags:
        - region-controller
      summary: deleteRegion
      operationId: deleteRegionUsingPOST
      parameters:
        - name: regionId
          in: path
          description: regionId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/regions/{regionId}/edit:
    get:
      tags:
        - region-controller
      summary: editRegion
      operationId: editRegionUsingGET
      parameters:
        - name: regionId
          in: path
          description: regionId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - region-controller
      summary: putRegion
      operationId: putRegionUsingPOST
      parameters:
        - name: color
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: description
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: id
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: regionId
          in: path
          description: regionId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: subtitle
          in: query
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /regions/{regionId}:
    get:
      tags:
        - showcase-controller
      summary: getRegionProducts
      operationId: getRegionProductsUsingGET
      parameters:
        - name: direct
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: regionId
          in: path
          description: regionId
          required: true
          style: simple
          schema:
            type: integer
            format: int64
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: dist
          in: query
          description: dist
          required: false
          style: form
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /admin/storage:
    get:
      tags:
        - storage-controller
      summary: getStorageUnits
      operationId: getStorageUnitsUsingGET
      parameters:
        - name: direct
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: page
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: size
          in: query
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: sort
          in: query
          required: false
          style: form
          schema:
            type: string
        - name: available
          in: query
          description: available
          required: false
          style: form
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - storage-controller
      summary: postStorage
      operationId: postStorageUsingPOST
      parameters:
        - name: productsIds
          in: query
          description: productsIds
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
        - name: availableProductsIds
          in: query
          description: availableProductsIds
          required: false
          style: form
          explode: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
components:
  schemas:
    CartDTO:
      title: CartDTO
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        cartItems:
          type: array
          items:
            $ref: '#/components/schemas/CartItemDTORes'
        deliveryCost:
          type: integer
          format: int32
        deliveryIncluded:
          type: boolean
        empty:
          type: boolean
        productsCost:
          type: number
          format: double
        totalCost:
          type: number
          format: double
        totalItems:
          type: integer
          format: int32
        user:
          type: string
    CartItemDTOReq:
      title: CartItemDTOReq
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    CartItemDTORes:
      title: CartItemDTORes
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
        productId:
          type: integer
          format: int64
        quantity:
          type: integer
          format: int32
    Link:
      title: Link
      type: object
      properties:
        deprecation:
          type: string
        href:
          type: string
        hreflang:
          type: string
        media:
          type: string
        name:
          type: string
        profile:
          type: string
        rel:
          $ref: '#/components/schemas/LinkRelation'
        title:
          type: string
        type:
          type: string
    LinkRelation:
      title: LinkRelation
      type: object
    Links:
      title: Links
      type: object
      properties:
        empty:
          type: boolean
    ModelAndView:
      title: ModelAndView
      type: object
      properties:
        empty:
          type: boolean
        model:
          type: object
        modelMap:
          type: object
          additionalProperties:
            type: object
        reference:
          type: boolean
        status:
          type: string
          enum:
            - ACCEPTED
            - ALREADY_REPORTED
            - BAD_GATEWAY
            - BAD_REQUEST
            - BANDWIDTH_LIMIT_EXCEEDED
            - CHECKPOINT
            - CONFLICT
            - CONTINUE
            - CREATED
            - DESTINATION_LOCKED
            - EXPECTATION_FAILED
            - FAILED_DEPENDENCY
            - FORBIDDEN
            - FOUND
            - GATEWAY_TIMEOUT
            - GONE
            - HTTP_VERSION_NOT_SUPPORTED
            - IM_USED
            - INSUFFICIENT_SPACE_ON_RESOURCE
            - INSUFFICIENT_STORAGE
            - INTERNAL_SERVER_ERROR
            - I_AM_A_TEAPOT
            - LENGTH_REQUIRED
            - LOCKED
            - LOOP_DETECTED
            - METHOD_FAILURE
            - METHOD_NOT_ALLOWED
            - MOVED_PERMANENTLY
            - MOVED_TEMPORARILY
            - MULTIPLE_CHOICES
            - MULTI_STATUS
            - NETWORK_AUTHENTICATION_REQUIRED
            - NON_AUTHORITATIVE_INFORMATION
            - NOT_ACCEPTABLE
            - NOT_EXTENDED
            - NOT_FOUND
            - NOT_IMPLEMENTED
            - NOT_MODIFIED
            - NO_CONTENT
            - OK
            - PARTIAL_CONTENT
            - PAYLOAD_TOO_LARGE
            - PAYMENT_REQUIRED
            - PERMANENT_REDIRECT
            - PRECONDITION_FAILED
            - PRECONDITION_REQUIRED
            - PROCESSING
            - PROXY_AUTHENTICATION_REQUIRED
            - REQUESTED_RANGE_NOT_SATISFIABLE
            - REQUEST_ENTITY_TOO_LARGE
            - REQUEST_HEADER_FIELDS_TOO_LARGE
            - REQUEST_TIMEOUT
            - REQUEST_URI_TOO_LONG
            - RESET_CONTENT
            - SEE_OTHER
            - SERVICE_UNAVAILABLE
            - SWITCHING_PROTOCOLS
            - TEMPORARY_REDIRECT
            - TOO_EARLY
            - TOO_MANY_REQUESTS
            - UNAUTHORIZED
            - UNAVAILABLE_FOR_LEGAL_REASONS
            - UNPROCESSABLE_ENTITY
            - UNSUPPORTED_MEDIA_TYPE
            - UPGRADE_REQUIRED
            - URI_TOO_LONG
            - USE_PROXY
            - VARIANT_ALSO_NEGOTIATES
        view:
          $ref: '#/components/schemas/View'
        viewName:
          type: string
    View:
      title: View
      type: object
      properties:
        contentType:
          type: string
