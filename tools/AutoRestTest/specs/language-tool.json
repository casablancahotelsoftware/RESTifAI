{
  "openapi": "3.0.1",
  "info": {
    "title": "LanguageTool API",
    "description": "Check texts for style and grammar issues with <a href='https://languagetool.org'>LanguageTool</a>. Please consider the following default limitations:<ul><li>your daily request limit depending on <a href='https://languagetool.org/editor/settings/access-tokens'>your plan</a> <li>maximum number of requests per minute: 20 (free) / 80 (Premium) <li>maximum number of characters per minute: 75,000 (free) / 300,000 (Premium) <li>maximum number of characters per request: 20,000 (free) / 60,000 (Premium) <li>for the free version, also consider the <a href='https://dev.languagetool.org/public-http-api'>limitations documented here</a> <li><b>Note:</b> any parameters or outputs not part of this documentation are internal and must not be relied on</ul> Need more generous limits? Just <a href='https://languagetool.org/proofreading-api'>contact us</a>.",
    "version": "1.1.2"
  },
  "servers": [
    {
      "url": "http://localhost:9001/v2"
    }
  ],
  "paths": {
    "/check": {
      "post": {
        "summary": "Check a text",
        "description": "The main feature - check a text with LanguageTool for possible style and grammar issues.",
        "operationId": "checkText",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "language"
                ],
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string",
                    "description": "The text to be checked. This or 'data' is required."
                  },
                  "data": {
                    "type": "string",
                    "description": "The text to be checked, given as a JSON document that specifies what's text and what's markup. This or 'text' is required. Markup will be ignored when looking for errors. Example text: <pre>A &lt;b>test&lt;/b></pre>JSON for the example text: <pre>{\"annotation\":[\n {\"text\": \"A \"},\n {\"markup\": \"&lt;b>\"},\n {\"text\": \"test\"},\n {\"markup\": \"&lt;/b>\"}\n]}</pre> <p>If you have markup that should be interpreted as whitespace, like <tt>&lt;p&gt;</tt> in HTML, you can have it interpreted like this: <pre>{\"markup\": \"&lt;p&gt;\", \"interpretAs\": \"\\n\\n\"}</pre><p>The 'data' feature is not limited to HTML or XML, it can be used for any kind of markup. Entities will need to be expanded in this input."
                  },
                  "language": {
                    "type": "string",
                    "description": "A language code like `en-US`, `de-DE`, `fr`, or `auto` to guess the language automatically (see `preferredVariants` below). For languages with variants (English, German, Portuguese) spell checking will only be activated when you specify the variant, e.g. `en-GB` instead of just `en`."
                  },
                  "username": {
                    "type": "string",
                    "description": "Set to get Premium API access: Your username/email as used to log in at languagetool.org."
                  },
                  "apiKey": {
                    "type": "string",
                    "description": "Set to get Premium API access: <a target='_blank' href='https://languagetool.org/editor/settings/access-tokens'>your API key</a>",
                    "format": "password"
                  },
                  "dicts": {
                    "type": "string",
                    "description": "Comma-separated list of dictionaries to include words from; uses special default dictionary if this is unset"
                  },
                  "motherTongue": {
                    "type": "string",
                    "description": "A language code of the user's native language, enabling false friends checks for some language pairs."
                  },
                  "preferredVariants": {
                    "type": "string",
                    "description": "Comma-separated list of preferred language variants. The language detector used with `language=auto` can detect e.g. English, but it cannot decide whether British English or American English is used. Thus this parameter can be used to specify the preferred variants like `en-GB` and `de-AT`. Only available with `language=auto`. You should set variants for at least German and English, as otherwise the spell checking will not work for those, as no spelling dictionary can be selected for just `en` or `de`."
                  },
                  "enabledRules": {
                    "type": "string",
                    "description": "IDs of rules to be enabled, comma-separated. Note that 'level' still applies, so the rule won't run unless 'level' is set to a level that activates the rule."
                  },
                  "disabledRules": {
                    "type": "string",
                    "description": "IDs of rules to be disabled, comma-separated"
                  },
                  "enabledCategories": {
                    "type": "string",
                    "description": "IDs of categories to be enabled, comma-separated"
                  },
                  "disabledCategories": {
                    "type": "string",
                    "description": "IDs of categories to be disabled, comma-separated"
                  },
                  "enabledOnly": {
                    "type": "boolean",
                    "description": "If true, only the rules and categories whose IDs are specified with `enabledRules` or `enabledCategories` are enabled.",
                    "default": false
                  },
                  "level": {
                    "type": "string",
                    "description": "If set to `picky`, additional rules will be activated, i.e. rules that you might only find useful when checking formal text.",
                    "enum": [
                      "default",
                      "picky"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "the result of checking the text",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "software": {
                      "required": [
                        "apiVersion",
                        "buildDate",
                        "name",
                        "version"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Usually 'LanguageTool'."
                        },
                        "version": {
                          "type": "string",
                          "description": "A version string like '3.3' or '3.4-SNAPSHOT'."
                        },
                        "buildDate": {
                          "type": "string",
                          "description": "Date when the software was built, e.g. '2016-05-25'."
                        },
                        "apiVersion": {
                          "type": "integer",
                          "description": "Version of this API response. We don't expect to make incompatible changes, so this can also be increased for newly added fields."
                        },
                        "status": {
                          "type": "string",
                          "description": "An optional warning, e.g. when the API format is not stable."
                        },
                        "premium": {
                          "type": "boolean",
                          "description": "true if you're using a Premium account with all the premium text checks (since LanguageTool 4.2)"
                        }
                      }
                    },
                    "language": {
                      "required": [
                        "code",
                        "detectedLanguage",
                        "name"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Language name like 'French' or 'English (US)'."
                        },
                        "code": {
                          "type": "string",
                          "description": "ISO 639-1 code like 'en', 'en-US', or 'ca-ES-valencia'"
                        },
                        "detectedLanguage": {
                          "required": [
                            "code",
                            "name"
                          ],
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Language name like 'French' or 'English (US)'."
                            },
                            "code": {
                              "type": "string",
                              "description": "ISO 639-1 code like 'en', 'en-US', or 'ca-ES-valencia'."
                            }
                          },
                          "description": "The automatically detected text language (might be different from the language actually used for checking)."
                        }
                      },
                      "description": "The language used for checking the text."
                    },
                    "matches": {
                      "type": "array",
                      "items": {
                        "required": [
                          "context",
                          "length",
                          "message",
                          "offset",
                          "replacements",
                          "sentence"
                        ],
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "Message about the error displayed to the user."
                          },
                          "shortMessage": {
                            "type": "string",
                            "description": "An optional shorter version of 'message'."
                          },
                          "offset": {
                            "type": "integer",
                            "description": "The 0-based character offset of the error in the text."
                          },
                          "length": {
                            "type": "integer",
                            "description": "The length of the error in characters."
                          },
                          "replacements": {
                            "type": "array",
                            "description": "Replacements that might correct the error. The array can be empty, in this case there is no suggested replacement.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "description": "the replacement string"
                                }
                              }
                            }
                          },
                          "context": {
                            "required": [
                              "length",
                              "offset",
                              "text"
                            ],
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string",
                                "description": "Context of the error, i.e. the error and some text to the left and to the left."
                              },
                              "offset": {
                                "type": "integer",
                                "description": "The 0-based character offset of the error in the context text."
                              },
                              "length": {
                                "type": "integer",
                                "description": "The length of the error in characters in the context."
                              }
                            }
                          },
                          "sentence": {
                            "type": "string",
                            "description": "The sentence the error occurred in (since LanguageTool 4.0 or later)"
                          },
                          "rule": {
                            "required": [
                              "category",
                              "description",
                              "id"
                            ],
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "An rule's identifier that's unique for this language."
                              },
                              "subId": {
                                "type": "string",
                                "description": "An optional sub identifier of the rule, used when several rules are grouped."
                              },
                              "description": {
                                "type": "string"
                              },
                              "urls": {
                                "type": "array",
                                "description": "An optional array of URLs with a more detailed description of the error.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "value": {
                                      "type": "string",
                                      "description": "the URL"
                                    }
                                  }
                                }
                              },
                              "issueType": {
                                "type": "string",
                                "description": "The <a href=\"http://www.w3.org/International/multilingualweb/lt/drafts/its20/its20.html#lqissue-typevalues\">Localization Quality Issue Type</a>. This is not defined for all languages, in which case it will always be 'Uncategorized'."
                              },
                              "category": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "A category's identifier that's unique for this language."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "A short description of the category."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/languages": {
      "get": {
        "summary": "Get a list of supported languages.",
        "operationId": "getSupportedLanguages",
        "responses": {
          "200": {
            "description": "An array of language objects.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "required": [
                      "code",
                      "longCode",
                      "name"
                    ],
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "a language name like 'French' or 'English (Australia)'"
                      },
                      "code": {
                        "type": "string",
                        "description": "a language code like 'en'"
                      },
                      "longCode": {
                        "type": "string",
                        "description": "a language code like 'en-US' or 'ca-ES-valencia'"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {},
  "x-original-swagger-version": "2.0"
}