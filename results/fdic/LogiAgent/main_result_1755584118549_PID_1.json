{"all_cnt": 3, "all_request_sequence": [{"method": "GET", "api": "/institutions", "url": "https://banks.data.fdic.gov/api/institutions", "headers": {"Content-Type": "application/json"}, "params": {"filters": "INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\")", "limit": 10, "sort_by": "INSTITUTION_ID", "sort_order": "ASC"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/institutions' params={'filters': 'INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\")', 'limit': 10, 'sort_by': 'INSTITUTION_ID', 'sort_order': 'ASC'} payload={}", "response_code": 400, "response_data": "{\"errors\":[{\"status\":400,\"links\":{\"about\":{\"href\":\"https://pfabankapi.app.cloud.gov/docs\",\"meta\":{\"section\":\"Filter Syntax\"}}},\"title\":\"Invalid request input, please double check your search query syntax\",\"detail\":\"search_phase_execution_exception: [query_shard_exception] Reason: No mapping found for [INSTITUTION_ID] in order to sort on\",\"source\":{\"parameter\":\"filters\"},\"meta\":{\"timestamp\":\"2025-08-19T06:14:48.633Z\"}}]}"}, {"method": "GET", "api": "/institutions", "url": "https://banks.data.fdic.gov/api/institutions", "headers": {"Content-Type": "application/json"}, "params": {"filters": "INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\")", "limit": 10}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/institutions' params={'filters': 'INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\")', 'limit': 10} payload={}", "response_code": 200, "response_data": "{\"meta\":{\"total\":0,\"parameters\":{\"filters\":\"INDSTATUS:(\\\"AC\\\" OR \\\"IN\\\" OR \\\"CL\\\")\",\"limit\":\"10\"},\"index\":{\"name\":\"institutions_20250815090007\",\"createTimestamp\":\"2025-08-15T11:22:13Z\"}},\"data\":[],\"totals\":{\"count\":0}}"}, {"method": "GET", "api": "/institutions", "url": "https://banks.data.fdic.gov/api/institutions", "headers": {"Content-Type": "application/json"}, "params": {"filters": "STNAME:\"Alabama\" AND INDTYPE:\"Commercial Banks\"", "limit": 5}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/institutions' params={'filters': 'STNAME:\"Alabama\" AND INDTYPE:\"Commercial Banks\"', 'limit': 5} payload={}", "response_code": 200, "response_data": "{\"meta\":{\"total\":0,\"parameters\":{\"filters\":\"STNAME:\\\"Alabama\\\" AND INDTYPE:\\\"Commercial Banks\\\"\",\"limit\":\"5\"},\"index\":{\"name\":\"institutions_20250815090007\",\"createTimestamp\":\"2025-08-15T11:22:13Z\"}},\"data\":[],\"totals\":{\"count\":0}}"}], "right_results": [], "wrong_results": [{"request_info": "GET /institutions with filters=INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\"), sort_by=INSTITUTION_ID, sort_order=ASC, limit=10", "oracle": "Response returns two distinct subsets of institutions: active and recently closed. Each institution data includes unique IDs and status fields correctly indicating current operational state.", "judge_reason": "The API request failed with a 400 status due to invalid sorting on 'INSTITUTION_ID', which is unexpected based on the documentation. This prevents retrieving the required institution data subsets for both active and recently closed statuses. The failure is critical because downstream validation depends on obtaining these institution IDs and statuses. Hence, the actual response does not meet the expected behavior.", "response": "400 Bad Request with error: Invalid request input; no mapping found for 'INSTITUTION_ID' in order to sort on."}, {"request_info": "GET /institutions with filters=INDSTATUS:(\"AC\" OR \"IN\" OR \"CL\"), limit=10", "oracle": "Response returns two distinct subsets of institutions: active and recently closed. Each institution data includes unique IDs and status fields correctly indicating current operational state.", "judge_reason": "The API returned HTTP 200 OK but with an empty data array and total count 0, contrary to expectations. The filter was to include active and recently closed institutions, which are expected to exist. This empty result set prevents continuing the scenario validation and indicates a data or filtering issue. Hence, the response does not meet the expected behavior for this test case.", "response": "200 OK with empty data array, total=0"}, {"request_info": "GET /institutions with filters=STNAME:\"Alabama\" AND INDTYPE:\"Commercial Banks\", limit=5", "oracle": "Response returns two distinct subsets of institutions: active and recently closed. Each institution data includes unique IDs and status fields correctly indicating current operational state.", "judge_reason": "The API query with filters STNAME:\"Alabama\" AND INDTYPE:\"Commercial Banks\" returned HTTP 200 OK with an empty data set and total count of 0. Given the filters are valid and realistic, the empty response indicates a data availability or filtering issue. This prevents retrieving necessary institution info to continue testing and deviates substantially from expectations.", "response": "200 OK with empty data array, total=0"}], "test_scenario_response_message": "1. **Title:** Validate Data Consistency and State Changes Across Institution Status Updates  \n   - **API Endpoint:** GET /institutions  \n   - **Description:** Retrieve a list of financial institutions filtered to include only those marked with an active status as well as those marked as inactive or closed within a recent timeframe. Capture a sample set of institution IDs from both active and inactive categories for deeper analysis.\n   - **Expected Response:** Response returns two distinct subsets of institutions: active and recently closed. Each institution data includes unique IDs and status fields correctly indicating current operational state.\n\n2. **Title:** Cross-Verify Institution Location Data for Active and Recently Closed Institutions  \n   - **API Endpoint:** GET /locations  \n   - **Description:** Query location data for each captured institution ID from step 1, requesting details for both active and inactive/closed institutions to confirm that location records exist and accurately reflect institution status changes.\n   - **Expected Response:** For active institutions, location data includes one or more address records marked as current. For recently closed institutions, location data may be empty or flagged as inactive/closed but still returned without error.\n\n3. **Title:** Retrieve Financial Data and Compare Metrics Against Institution Status  \n   - **API Endpoint:** GET /financials  \n   - **Description:** Fetch financial details for the same institution IDs used in previous steps and verify that financial metrics (such as assets, liabilities, income) are consistent with the institution\u2019s active or inactive status. Check for unexpected financial records for inactive institutions, indicating possible data staleness.\n   - **Expected Response:** Active institutions return up-to-date financial data with plausible figures. Recently closed or inactive institutions return either last reported data flagged as historical or an empty response without errors, avoiding mismatches or stale data.\n\n4. **Title:** Examine Structure Change History Corresponding to Institution Status Transitions  \n   - **API Endpoint:** GET /history  \n   - **Description:** Pull historical structure change events for each institution, especially focusing on those recently marked inactive or closed, to validate that state transitions (e.g., mergers, acquisitions, closure events) are properly recorded and linked.\n   - **Expected Response:** Returned history data includes relevant structure change events tied to institution status changes, with coherent event dates and correct institution IDs. No missing or contradictory events related to closures or status transitions.\n\n5. **Title:** Cross-Check Institution Failure Records Against Closure History  \n   - **API Endpoint:** GET /failures  \n   - **Description:** Query failure records using institution IDs flagged as closed or inactive to detect if closure status corresponds to failure event records, identifying any discrepancies such as closed institutions lacking failure info or failures without matching institution closure data.\n   - **Expected Response:** Failure records exist for institutions marked as failed/closed with consistent institution identifiers and failure dates. For closed but non-failure closures (e.g., mergers), failure record queries return empty results appropriately.\n\n6. **Title:** Aggregate and Validate Consistency of Summary Data with Institution and Financial Status  \n   - **API Endpoint:** GET /summary  \n   - **Description:** Request aggregate financial summary data filtered by the year range covering the institutions\u2019 last active years. Validate that yearly summary aggregates align with institution statuses and financial data previously fetched, ensuring no summary includes data from institutions that were already closed or failed.\n   - **Expected Response:** Aggregate summaries accurately reflect only active institutions\u2019 data for each year, excluding closed or failed entities post-closure year. No data leakage or aggregation mismatches occur.\n\n---\n\n**Summary:**  \nThis scenario tests complex multi-step validation of financial institutions' life cycle data by concurrently handling active and recently closed institutions. It focuses on verifying the consistency and correctness of their status indicators across institutions, physical locations, financial reports, historical structure changes, failure events, and yearly aggregate summaries. The scenario uncovers potential defects such as stale financial data for closed institutions, missing location or history records corresponding to status changes, improper association of failure events, and aggregation errors that might include data from inactive entities. This comprehensive test ensures robust state management, data coherence, and accurate reflection of institution statuses throughout the system.", "usage": {"total_tokens": 74871, "total_cost": 0.0339804}, "unique_endpoints": {"200": ["GET /institutions"], "300": [], "400": ["GET /institutions"], "500": 0}, "total_true_result": 0, "total_false_result": 3}