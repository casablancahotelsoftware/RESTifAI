{
    "info": {
        "name": "fieldsArrayWithNonStringItem_ST",
        "description": "Set `fields` query parameter to an array containing a non-string item, e.g., fields=[123]",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "searchInstitutions",
            "request": {
                "method": "GET",
                "header": [],
                "body": null,
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/institutions?filters=DEP%3A%5B50000%20TO%20%2A%5D&search=NAME%3A%20Bank&fields=[123]&sort_by=DEP&sort_order=DESC&limit=20&offset=0&format=json&download=false&filename=institutions_search_results",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "institutions"
                    ],
                    "query": [
                        {
                            "key": "filters",
                            "value": "DEP%3A%5B50000%20TO%20%2A%5D"
                        },
                        {
                            "key": "search",
                            "value": "NAME%3A%20Bank"
                        },
                        {
                            "key": "fields",
                            "value": "[123]"
                        },
                        {
                            "key": "sort_by",
                            "value": "DEP"
                        },
                        {
                            "key": "sort_order",
                            "value": "DESC"
                        },
                        {
                            "key": "limit",
                            "value": "20"
                        },
                        {
                            "key": "offset",
                            "value": "0"
                        },
                        {
                            "key": "format",
                            "value": "json"
                        },
                        {
                            "key": "download",
                            "value": "false"
                        },
                        {
                            "key": "filename",
                            "value": "institutions_search_results"
                        }
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 4xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(400, 499);",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.filters', 'DEP%3A%5B50000%20TO%20%2A%5D');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.search', 'NAME%3A%20Bank');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.fields', [123]);",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.sort_by', 'DEP');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.sort_order', 'DESC');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.limit', 20);",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.offset', 0);",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.format', 'json');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.download', 'false');",
                            "pm.collectionVariables.set('searchInstitutions.request.query_params.filename', 'institutions_search_results');"
                        ]
                    }
                }
            ]
        },
        {
            "name": "searchLocations",
            "request": {
                "method": "GET",
                "header": [],
                "body": null,
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/locations?filters={{searchLocations.request.query_params.filters}}&fields=LOCID,NAME,ADDRESS,CTY,ST,ZIP,PHONE,CERT&sort_by=CITY&sort_order=ASC&limit=20&offset=0&format=json&download=false&filename=locations_search_results",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "locations"
                    ],
                    "query": [
                        {
                            "key": "filters",
                            "value": "{{searchLocations.request.query_params.filters}}"
                        },
                        {
                            "key": "fields",
                            "value": "LOCID,NAME,ADDRESS,CTY,ST,ZIP,PHONE,CERT"
                        },
                        {
                            "key": "sort_by",
                            "value": "CITY"
                        },
                        {
                            "key": "sort_order",
                            "value": "ASC"
                        },
                        {
                            "key": "limit",
                            "value": "20"
                        },
                        {
                            "key": "offset",
                            "value": "0"
                        },
                        {
                            "key": "format",
                            "value": "json"
                        },
                        {
                            "key": "download",
                            "value": "false"
                        },
                        {
                            "key": "filename",
                            "value": "locations_search_results"
                        }
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 2xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(200, 299);",
                            "});",
                            "",
                            "try {",
                            "",
                            "   /**",
                            "    * Gets a value from a nested object using a flattened key path",
                            "    * @param {Object} obj - The object to extract from",
                            "    * @param {string} path - Flattened key path (e.g., 'users[1].role.id')",
                            "    * @return {*} The extracted value or undefined if not found",
                            "    */",
                            "   function getValueByPath(obj, path) {",
                            "       // Handle array notation by splitting correctly",
                            "       const parts = [];",
                            "       let currentPart = '';",
                            "       let inBracket = false;",
                            "",
                            "       // Parse the path maintaining array indexes",
                            "       for (let i = 0; i < path.length; i++) {",
                            "           const char = path[i];",
                            "           if (char === '.' && !inBracket) {",
                            "               if (currentPart) parts.push(currentPart);",
                            "               currentPart = '';",
                            "           } else if (char === '[') {",
                            "               inBracket = true;",
                            "               parts.push(currentPart);",
                            "               currentPart = '[';",
                            "           } else if (char === ']') {",
                            "               inBracket = false;",
                            "               currentPart += ']';",
                            "               parts.push(currentPart);",
                            "               currentPart = '';",
                            "           } else {",
                            "               currentPart += char;",
                            "           }",
                            "       }",
                            "       if (currentPart) parts.push(currentPart);",
                            "",
                            "       // Navigate through the object",
                            "       let current = obj;",
                            "       for (const part of parts) {",
                            "           if (!current) return undefined;",
                            "",
                            "           if (part.startsWith('[') && part.endsWith(']')) {",
                            "               // Handle array index",
                            "               const index = parseInt(part.substring(1, part.length - 1));",
                            "               if (!Array.isArray(current) || current.length <= index) {",
                            "                   return undefined;",
                            "               }",
                            "               current = current[index];",
                            "           } else {",
                            "               // Handle object property",
                            "               current = current[part];",
                            "           }",
                            "       }",
                            "       return current;",
                            "   }",
                            "",
                            "    // Extract response body values",
                            "    const responseJson = pm.response.json();",
                            "",
                            "    // Store expected body fields",
                            "    const x0 = getValueByPath(responseJson, 'meta.total');",
                            "    if (x0 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.total', x0);",
                            "    }",
                            "    const x1 = getValueByPath(responseJson, 'meta.parameters.filters');",
                            "    if (x1 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.parameters.filters', x1);",
                            "    }",
                            "    const x2 = getValueByPath(responseJson, 'meta.parameters.fields');",
                            "    if (x2 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.parameters.fields', x2);",
                            "    }",
                            "    const x3 = getValueByPath(responseJson, 'meta.parameters.limit');",
                            "    if (x3 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.parameters.limit', x3);",
                            "    }",
                            "    const x4 = getValueByPath(responseJson, 'meta.parameters.offset');",
                            "    if (x4 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.parameters.offset', x4);",
                            "    }",
                            "    const x5 = getValueByPath(responseJson, 'meta.index.name');",
                            "    if (x5 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.index.name', x5);",
                            "    }",
                            "    const x6 = getValueByPath(responseJson, 'meta.index.createTimestamp');",
                            "    if (x6 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.meta.index.createTimestamp', x6);",
                            "    }",
                            "    const x7 = getValueByPath(responseJson, 'data[0].data.ZIP');",
                            "    if (x7 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].data.ZIP', x7);",
                            "    }",
                            "    const x8 = getValueByPath(responseJson, 'data[0].data.ADDRESS');",
                            "    if (x8 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].data.ADDRESS', x8);",
                            "    }",
                            "    const x9 = getValueByPath(responseJson, 'data[0].data.CERT');",
                            "    if (x9 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].data.CERT', x9);",
                            "    }",
                            "    const x10 = getValueByPath(responseJson, 'data[0].data.NAME');",
                            "    if (x10 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].data.NAME', x10);",
                            "    }",
                            "    const x11 = getValueByPath(responseJson, 'data[0].data.ID');",
                            "    if (x11 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].data.ID', x11);",
                            "    }",
                            "    const x12 = getValueByPath(responseJson, 'data[0].score');",
                            "    if (x12 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[0].score', x12);",
                            "    }",
                            "    const x13 = getValueByPath(responseJson, 'data[1].data.ZIP');",
                            "    if (x13 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].data.ZIP', x13);",
                            "    }",
                            "    const x14 = getValueByPath(responseJson, 'data[1].data.ADDRESS');",
                            "    if (x14 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].data.ADDRESS', x14);",
                            "    }",
                            "    const x15 = getValueByPath(responseJson, 'data[1].data.CERT');",
                            "    if (x15 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].data.CERT', x15);",
                            "    }",
                            "    const x16 = getValueByPath(responseJson, 'data[1].data.NAME');",
                            "    if (x16 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].data.NAME', x16);",
                            "    }",
                            "    const x17 = getValueByPath(responseJson, 'data[1].data.ID');",
                            "    if (x17 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].data.ID', x17);",
                            "    }",
                            "    const x18 = getValueByPath(responseJson, 'data[1].score');",
                            "    if (x18 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[1].score', x18);",
                            "    }",
                            "    const x19 = getValueByPath(responseJson, 'data[2].data.ZIP');",
                            "    if (x19 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].data.ZIP', x19);",
                            "    }",
                            "    const x20 = getValueByPath(responseJson, 'data[2].data.ADDRESS');",
                            "    if (x20 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].data.ADDRESS', x20);",
                            "    }",
                            "    const x21 = getValueByPath(responseJson, 'data[2].data.CERT');",
                            "    if (x21 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].data.CERT', x21);",
                            "    }",
                            "    const x22 = getValueByPath(responseJson, 'data[2].data.NAME');",
                            "    if (x22 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].data.NAME', x22);",
                            "    }",
                            "    const x23 = getValueByPath(responseJson, 'data[2].data.ID');",
                            "    if (x23 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].data.ID', x23);",
                            "    }",
                            "    const x24 = getValueByPath(responseJson, 'data[2].score');",
                            "    if (x24 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[2].score', x24);",
                            "    }",
                            "    const x25 = getValueByPath(responseJson, 'data[3].data.ZIP');",
                            "    if (x25 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].data.ZIP', x25);",
                            "    }",
                            "    const x26 = getValueByPath(responseJson, 'data[3].data.ADDRESS');",
                            "    if (x26 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].data.ADDRESS', x26);",
                            "    }",
                            "    const x27 = getValueByPath(responseJson, 'data[3].data.CERT');",
                            "    if (x27 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].data.CERT', x27);",
                            "    }",
                            "    const x28 = getValueByPath(responseJson, 'data[3].data.NAME');",
                            "    if (x28 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].data.NAME', x28);",
                            "    }",
                            "    const x29 = getValueByPath(responseJson, 'data[3].data.ID');",
                            "    if (x29 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].data.ID', x29);",
                            "    }",
                            "    const x30 = getValueByPath(responseJson, 'data[3].score');",
                            "    if (x30 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[3].score', x30);",
                            "    }",
                            "    const x31 = getValueByPath(responseJson, 'data[4].data.ZIP');",
                            "    if (x31 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].data.ZIP', x31);",
                            "    }",
                            "    const x32 = getValueByPath(responseJson, 'data[4].data.ADDRESS');",
                            "    if (x32 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].data.ADDRESS', x32);",
                            "    }",
                            "    const x33 = getValueByPath(responseJson, 'data[4].data.CERT');",
                            "    if (x33 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].data.CERT', x33);",
                            "    }",
                            "    const x34 = getValueByPath(responseJson, 'data[4].data.NAME');",
                            "    if (x34 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].data.NAME', x34);",
                            "    }",
                            "    const x35 = getValueByPath(responseJson, 'data[4].data.ID');",
                            "    if (x35 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].data.ID', x35);",
                            "    }",
                            "    const x36 = getValueByPath(responseJson, 'data[4].score');",
                            "    if (x36 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[4].score', x36);",
                            "    }",
                            "    const x37 = getValueByPath(responseJson, 'data[5].data.ZIP');",
                            "    if (x37 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].data.ZIP', x37);",
                            "    }",
                            "    const x38 = getValueByPath(responseJson, 'data[5].data.ADDRESS');",
                            "    if (x38 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].data.ADDRESS', x38);",
                            "    }",
                            "    const x39 = getValueByPath(responseJson, 'data[5].data.CERT');",
                            "    if (x39 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].data.CERT', x39);",
                            "    }",
                            "    const x40 = getValueByPath(responseJson, 'data[5].data.NAME');",
                            "    if (x40 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].data.NAME', x40);",
                            "    }",
                            "    const x41 = getValueByPath(responseJson, 'data[5].data.ID');",
                            "    if (x41 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].data.ID', x41);",
                            "    }",
                            "    const x42 = getValueByPath(responseJson, 'data[5].score');",
                            "    if (x42 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[5].score', x42);",
                            "    }",
                            "    const x43 = getValueByPath(responseJson, 'data[6].data.ZIP');",
                            "    if (x43 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].data.ZIP', x43);",
                            "    }",
                            "    const x44 = getValueByPath(responseJson, 'data[6].data.ADDRESS');",
                            "    if (x44 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].data.ADDRESS', x44);",
                            "    }",
                            "    const x45 = getValueByPath(responseJson, 'data[6].data.CERT');",
                            "    if (x45 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].data.CERT', x45);",
                            "    }",
                            "    const x46 = getValueByPath(responseJson, 'data[6].data.NAME');",
                            "    if (x46 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].data.NAME', x46);",
                            "    }",
                            "    const x47 = getValueByPath(responseJson, 'data[6].data.ID');",
                            "    if (x47 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].data.ID', x47);",
                            "    }",
                            "    const x48 = getValueByPath(responseJson, 'data[6].score');",
                            "    if (x48 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[6].score', x48);",
                            "    }",
                            "    const x49 = getValueByPath(responseJson, 'data[7].data.ZIP');",
                            "    if (x49 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].data.ZIP', x49);",
                            "    }",
                            "    const x50 = getValueByPath(responseJson, 'data[7].data.ADDRESS');",
                            "    if (x50 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].data.ADDRESS', x50);",
                            "    }",
                            "    const x51 = getValueByPath(responseJson, 'data[7].data.CERT');",
                            "    if (x51 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].data.CERT', x51);",
                            "    }",
                            "    const x52 = getValueByPath(responseJson, 'data[7].data.NAME');",
                            "    if (x52 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].data.NAME', x52);",
                            "    }",
                            "    const x53 = getValueByPath(responseJson, 'data[7].data.ID');",
                            "    if (x53 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].data.ID', x53);",
                            "    }",
                            "    const x54 = getValueByPath(responseJson, 'data[7].score');",
                            "    if (x54 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[7].score', x54);",
                            "    }",
                            "    const x55 = getValueByPath(responseJson, 'data[8].data.ZIP');",
                            "    if (x55 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].data.ZIP', x55);",
                            "    }",
                            "    const x56 = getValueByPath(responseJson, 'data[8].data.ADDRESS');",
                            "    if (x56 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].data.ADDRESS', x56);",
                            "    }",
                            "    const x57 = getValueByPath(responseJson, 'data[8].data.CERT');",
                            "    if (x57 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].data.CERT', x57);",
                            "    }",
                            "    const x58 = getValueByPath(responseJson, 'data[8].data.NAME');",
                            "    if (x58 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].data.NAME', x58);",
                            "    }",
                            "    const x59 = getValueByPath(responseJson, 'data[8].data.ID');",
                            "    if (x59 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].data.ID', x59);",
                            "    }",
                            "    const x60 = getValueByPath(responseJson, 'data[8].score');",
                            "    if (x60 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[8].score', x60);",
                            "    }",
                            "    const x61 = getValueByPath(responseJson, 'data[9].data.ZIP');",
                            "    if (x61 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].data.ZIP', x61);",
                            "    }",
                            "    const x62 = getValueByPath(responseJson, 'data[9].data.ADDRESS');",
                            "    if (x62 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].data.ADDRESS', x62);",
                            "    }",
                            "    const x63 = getValueByPath(responseJson, 'data[9].data.CERT');",
                            "    if (x63 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].data.CERT', x63);",
                            "    }",
                            "    const x64 = getValueByPath(responseJson, 'data[9].data.NAME');",
                            "    if (x64 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].data.NAME', x64);",
                            "    }",
                            "    const x65 = getValueByPath(responseJson, 'data[9].data.ID');",
                            "    if (x65 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].data.ID', x65);",
                            "    }",
                            "    const x66 = getValueByPath(responseJson, 'data[9].score');",
                            "    if (x66 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[9].score', x66);",
                            "    }",
                            "    const x67 = getValueByPath(responseJson, 'data[10].data.ZIP');",
                            "    if (x67 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].data.ZIP', x67);",
                            "    }",
                            "    const x68 = getValueByPath(responseJson, 'data[10].data.ADDRESS');",
                            "    if (x68 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].data.ADDRESS', x68);",
                            "    }",
                            "    const x69 = getValueByPath(responseJson, 'data[10].data.CERT');",
                            "    if (x69 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].data.CERT', x69);",
                            "    }",
                            "    const x70 = getValueByPath(responseJson, 'data[10].data.NAME');",
                            "    if (x70 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].data.NAME', x70);",
                            "    }",
                            "    const x71 = getValueByPath(responseJson, 'data[10].data.ID');",
                            "    if (x71 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].data.ID', x71);",
                            "    }",
                            "    const x72 = getValueByPath(responseJson, 'data[10].score');",
                            "    if (x72 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[10].score', x72);",
                            "    }",
                            "    const x73 = getValueByPath(responseJson, 'data[11].data.ZIP');",
                            "    if (x73 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].data.ZIP', x73);",
                            "    }",
                            "    const x74 = getValueByPath(responseJson, 'data[11].data.ADDRESS');",
                            "    if (x74 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].data.ADDRESS', x74);",
                            "    }",
                            "    const x75 = getValueByPath(responseJson, 'data[11].data.CERT');",
                            "    if (x75 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].data.CERT', x75);",
                            "    }",
                            "    const x76 = getValueByPath(responseJson, 'data[11].data.NAME');",
                            "    if (x76 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].data.NAME', x76);",
                            "    }",
                            "    const x77 = getValueByPath(responseJson, 'data[11].data.ID');",
                            "    if (x77 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].data.ID', x77);",
                            "    }",
                            "    const x78 = getValueByPath(responseJson, 'data[11].score');",
                            "    if (x78 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[11].score', x78);",
                            "    }",
                            "    const x79 = getValueByPath(responseJson, 'data[12].data.ZIP');",
                            "    if (x79 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].data.ZIP', x79);",
                            "    }",
                            "    const x80 = getValueByPath(responseJson, 'data[12].data.ADDRESS');",
                            "    if (x80 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].data.ADDRESS', x80);",
                            "    }",
                            "    const x81 = getValueByPath(responseJson, 'data[12].data.CERT');",
                            "    if (x81 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].data.CERT', x81);",
                            "    }",
                            "    const x82 = getValueByPath(responseJson, 'data[12].data.NAME');",
                            "    if (x82 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].data.NAME', x82);",
                            "    }",
                            "    const x83 = getValueByPath(responseJson, 'data[12].data.ID');",
                            "    if (x83 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].data.ID', x83);",
                            "    }",
                            "    const x84 = getValueByPath(responseJson, 'data[12].score');",
                            "    if (x84 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[12].score', x84);",
                            "    }",
                            "    const x85 = getValueByPath(responseJson, 'data[13].data.ZIP');",
                            "    if (x85 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].data.ZIP', x85);",
                            "    }",
                            "    const x86 = getValueByPath(responseJson, 'data[13].data.ADDRESS');",
                            "    if (x86 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].data.ADDRESS', x86);",
                            "    }",
                            "    const x87 = getValueByPath(responseJson, 'data[13].data.CERT');",
                            "    if (x87 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].data.CERT', x87);",
                            "    }",
                            "    const x88 = getValueByPath(responseJson, 'data[13].data.NAME');",
                            "    if (x88 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].data.NAME', x88);",
                            "    }",
                            "    const x89 = getValueByPath(responseJson, 'data[13].data.ID');",
                            "    if (x89 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].data.ID', x89);",
                            "    }",
                            "    const x90 = getValueByPath(responseJson, 'data[13].score');",
                            "    if (x90 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[13].score', x90);",
                            "    }",
                            "    const x91 = getValueByPath(responseJson, 'data[14].data.ZIP');",
                            "    if (x91 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].data.ZIP', x91);",
                            "    }",
                            "    const x92 = getValueByPath(responseJson, 'data[14].data.ADDRESS');",
                            "    if (x92 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].data.ADDRESS', x92);",
                            "    }",
                            "    const x93 = getValueByPath(responseJson, 'data[14].data.CERT');",
                            "    if (x93 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].data.CERT', x93);",
                            "    }",
                            "    const x94 = getValueByPath(responseJson, 'data[14].data.NAME');",
                            "    if (x94 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].data.NAME', x94);",
                            "    }",
                            "    const x95 = getValueByPath(responseJson, 'data[14].data.ID');",
                            "    if (x95 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].data.ID', x95);",
                            "    }",
                            "    const x96 = getValueByPath(responseJson, 'data[14].score');",
                            "    if (x96 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[14].score', x96);",
                            "    }",
                            "    const x97 = getValueByPath(responseJson, 'data[15].data.ZIP');",
                            "    if (x97 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].data.ZIP', x97);",
                            "    }",
                            "    const x98 = getValueByPath(responseJson, 'data[15].data.ADDRESS');",
                            "    if (x98 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].data.ADDRESS', x98);",
                            "    }",
                            "    const x99 = getValueByPath(responseJson, 'data[15].data.CERT');",
                            "    if (x99 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].data.CERT', x99);",
                            "    }",
                            "    const x100 = getValueByPath(responseJson, 'data[15].data.NAME');",
                            "    if (x100 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].data.NAME', x100);",
                            "    }",
                            "    const x101 = getValueByPath(responseJson, 'data[15].data.ID');",
                            "    if (x101 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].data.ID', x101);",
                            "    }",
                            "    const x102 = getValueByPath(responseJson, 'data[15].score');",
                            "    if (x102 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[15].score', x102);",
                            "    }",
                            "    const x103 = getValueByPath(responseJson, 'data[16].data.ZIP');",
                            "    if (x103 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].data.ZIP', x103);",
                            "    }",
                            "    const x104 = getValueByPath(responseJson, 'data[16].data.ADDRESS');",
                            "    if (x104 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].data.ADDRESS', x104);",
                            "    }",
                            "    const x105 = getValueByPath(responseJson, 'data[16].data.CERT');",
                            "    if (x105 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].data.CERT', x105);",
                            "    }",
                            "    const x106 = getValueByPath(responseJson, 'data[16].data.NAME');",
                            "    if (x106 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].data.NAME', x106);",
                            "    }",
                            "    const x107 = getValueByPath(responseJson, 'data[16].data.ID');",
                            "    if (x107 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].data.ID', x107);",
                            "    }",
                            "    const x108 = getValueByPath(responseJson, 'data[16].score');",
                            "    if (x108 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[16].score', x108);",
                            "    }",
                            "    const x109 = getValueByPath(responseJson, 'data[17].data.ZIP');",
                            "    if (x109 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].data.ZIP', x109);",
                            "    }",
                            "    const x110 = getValueByPath(responseJson, 'data[17].data.ADDRESS');",
                            "    if (x110 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].data.ADDRESS', x110);",
                            "    }",
                            "    const x111 = getValueByPath(responseJson, 'data[17].data.CERT');",
                            "    if (x111 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].data.CERT', x111);",
                            "    }",
                            "    const x112 = getValueByPath(responseJson, 'data[17].data.NAME');",
                            "    if (x112 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].data.NAME', x112);",
                            "    }",
                            "    const x113 = getValueByPath(responseJson, 'data[17].data.ID');",
                            "    if (x113 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].data.ID', x113);",
                            "    }",
                            "    const x114 = getValueByPath(responseJson, 'data[17].score');",
                            "    if (x114 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[17].score', x114);",
                            "    }",
                            "    const x115 = getValueByPath(responseJson, 'data[18].data.ZIP');",
                            "    if (x115 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].data.ZIP', x115);",
                            "    }",
                            "    const x116 = getValueByPath(responseJson, 'data[18].data.ADDRESS');",
                            "    if (x116 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].data.ADDRESS', x116);",
                            "    }",
                            "    const x117 = getValueByPath(responseJson, 'data[18].data.CERT');",
                            "    if (x117 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].data.CERT', x117);",
                            "    }",
                            "    const x118 = getValueByPath(responseJson, 'data[18].data.NAME');",
                            "    if (x118 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].data.NAME', x118);",
                            "    }",
                            "    const x119 = getValueByPath(responseJson, 'data[18].data.ID');",
                            "    if (x119 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].data.ID', x119);",
                            "    }",
                            "    const x120 = getValueByPath(responseJson, 'data[18].score');",
                            "    if (x120 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[18].score', x120);",
                            "    }",
                            "    const x121 = getValueByPath(responseJson, 'data[19].data.ZIP');",
                            "    if (x121 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].data.ZIP', x121);",
                            "    }",
                            "    const x122 = getValueByPath(responseJson, 'data[19].data.ADDRESS');",
                            "    if (x122 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].data.ADDRESS', x122);",
                            "    }",
                            "    const x123 = getValueByPath(responseJson, 'data[19].data.CERT');",
                            "    if (x123 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].data.CERT', x123);",
                            "    }",
                            "    const x124 = getValueByPath(responseJson, 'data[19].data.NAME');",
                            "    if (x124 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].data.NAME', x124);",
                            "    }",
                            "    const x125 = getValueByPath(responseJson, 'data[19].data.ID');",
                            "    if (x125 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].data.ID', x125);",
                            "    }",
                            "    const x126 = getValueByPath(responseJson, 'data[19].score');",
                            "    if (x126 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.data[19].score', x126);",
                            "    }",
                            "    const x127 = getValueByPath(responseJson, 'totals.count');",
                            "    if (x127 !== undefined) {",
                            "        pm.collectionVariables.set('searchLocations.response.body.totals.count', x127);",
                            "    }",
                            "",
                            "    // Store response headers",
                            "    pm.response.headers.each(function(header) {",
                            "        pm.collectionVariables.set('searchLocations.response.headers.', header.value);",
                            "    });",
                            "",
                            "    // Store response cookies",
                            "    pm.response.cookies.each(function(cookie) {",
                            "        pm.collectionVariables.set('searchLocations.response.cookies.', cookie.value);",
                            "    });",
                            "",
                            "    // Store status code",
                            "    pm.collectionVariables.set('searchLocations.response.status_code', pm.response.code);",
                            "} catch (error) {",
                            "    console.error('Failed to process response:', error.message);",
                            "}"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('searchLocations.request.query_params.filters', pm.collectionVariables.get('searchInstitutions.response.body.data[0].data.CERT'));",
                            "pm.collectionVariables.set('searchLocations.request.query_params.fields', 'LOCID,NAME,ADDRESS,CTY,ST,ZIP,PHONE,CERT');",
                            "pm.collectionVariables.set('searchLocations.request.query_params.sort_by', 'CITY');",
                            "pm.collectionVariables.set('searchLocations.request.query_params.sort_order', 'ASC');",
                            "pm.collectionVariables.set('searchLocations.request.query_params.limit', 20);",
                            "pm.collectionVariables.set('searchLocations.request.query_params.offset', 0);",
                            "pm.collectionVariables.set('searchLocations.request.query_params.format', 'json');",
                            "pm.collectionVariables.set('searchLocations.request.query_params.download', 'false');",
                            "pm.collectionVariables.set('searchLocations.request.query_params.filename', 'locations_search_results');"
                        ]
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.environment.set('baseUrl', 'https://banks.data.fdic.gov/api');"
                ]
            }
        }
    ]
}