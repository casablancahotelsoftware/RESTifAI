{
  "test_name": "fieldsInvalidOnEmptyDatabase_FU",
  "description": "Set the `fields` query parameter to request a field that is logically invalid when the database is empty, e.g., fields=\"id,name,status\" where status cannot be retrieved if no records exist.",
  "test_suite": "TestV2all",
  "base_url": "http://localhost:9002/rest",
  "operations": [
    "v2All"
  ],
  "values_to_create_a_successful_request": "v2All.request.query_params.fields: id,name,description,createdAt,updatedAt,status\nv2All.response.headers.Content-Type: application/json;charset=utf-8\nv2All.response.headers.Content-Length: 751\nv2All.response.headers.Date: Mon, 18 Aug 2025 11:49:43 GMT\nv2All.response.headers.Keep-Alive: timeout=60\nv2All.response.headers.Connection: keep-alive\nv2All.response.status_code: 200",
  "relevant_endpoints": [
    "#### v2All\n- Method: GET\n- Path: /v2/all\n- Parameters:\n  - name: fields\n  - in: query\n  - required: False\n  - description: None\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'Successful response'}, 'default': {'description': 'Other responses'}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "v2All",
      "request_id": "3da92ab5-6834-4bb7-89b9-585562cdf70c",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "v2",
            "all"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "fields",
              "value": "id,name,status"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Content-Type": "application/json;charset=utf-8",
          "Content-Length": "751",
          "Date": "Mon, 18 Aug 2025 11:53:27 GMT",
          "Keep-Alive": "timeout=60",
          "Connection": "keep-alive"
        },
        "body": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
        ]
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:1)"
          }
        }
      ]
    }
  ]
}