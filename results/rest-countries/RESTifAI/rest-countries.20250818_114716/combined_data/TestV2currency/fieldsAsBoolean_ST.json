{
  "test_name": "fieldsAsBoolean_ST",
  "description": "Add an invalid query parameter `fields` as a boolean instead of a string, e.g., fields=true",
  "test_suite": "TestV2currency",
  "base_url": "http://localhost:9002/rest",
  "operations": [
    "v2All",
    "v2Currency"
  ],
  "values_to_create_a_successful_request": "v2All.request.query_params.fields: currencies\nv2All.response.body[0].currencies[0].code: AFN\nv2All.response.body[0].currencies[0].name: Afghan afghani\nv2All.response.body[0].currencies[0].symbol: \u060b\nv2All.response.body[1].currencies[0].code: EUR\nv2All.response.body[1].currencies[0].name: Euro\nv2All.response.body[1].currencies[0].symbol: \u20ac\nv2All.response.body[2].currencies[0].code: ALL\nv2All.response.body[2].currencies[0].name: Albanian lek\nv2All.response.body[2].currencies[0].symbol: L\nv2All.response.body[3].currencies[0].code: DZD\nv2All.response.body[3].currencies[0].name: Algerian dinar\nv2All.response.body[3].currencies[0].symbol: \u062f.\u062c\nv2All.response.body[4].currencies[0].code: USD\nv2All.response.body[4].currencies[0].name: United State Dollar\nv2All.response.body[4].currencies[0].symbol: $\nv2All.response.body[5].currencies[0].code: EUR\nv2All.response.body[5].currencies[0].name: Euro\nv2All.response.body[5].currencies[0].symbol: \u20ac\nv2All.response.body[6].currencies[0].code: AOA\nv2All.response.body[6].currencies[0].name: Angolan kwanza\nv2All.response.body[6].currencies[0].symbol: Kz\nv2All.response.body[7].currencies[0].code: XCD\nv2All.response.body[7].currencies[0].name: East Caribbean dollar\nv2All.response.body[7].currencies[0].symbol: $\nv2All.response.body[8].currencies[0].code: AUD\nv2All.response.body[8].currencies[0].name: Australian dollar\nv2All.response.body[8].currencies[0].symbol: $\nv2All.response.body[8].currencies[1].code: GBP\nv2All.response.body[8].currencies[1].name: British pound\nv2All.response.body[8].currencies[1].symbol: \u00a3\nv2All.response.body[9].currencies[0].code: XCD\nv2All.response.body[9].currencies[0].name: East Caribbean dollar\nv2All.response.body[9].currencies[0].symbol: $\nv2All.response.headers.Content-Type: application/json;charset=utf-8\nv2All.response.headers.Transfer-Encoding: chunked\nv2All.response.headers.Date: Mon, 18 Aug 2025 11:50:26 GMT\nv2All.response.headers.Keep-Alive: timeout=60\nv2All.response.headers.Connection: keep-alive\nv2All.response.status_code: 200\nv2Currency.request.path_params.currency: AFN\nv2Currency.request.query_params.fields: currencies\nv2Currency.response.body[0].currencies[0].code: AFN\nv2Currency.response.body[0].currencies[0].name: Afghan afghani\nv2Currency.response.body[0].currencies[0].symbol: \u060b\nv2Currency.response.headers.Content-Type: application/json;charset=utf-8\nv2Currency.response.headers.Content-Length: 71\nv2Currency.response.headers.Date: Mon, 18 Aug 2025 11:50:28 GMT\nv2Currency.response.headers.Keep-Alive: timeout=60\nv2Currency.response.headers.Connection: keep-alive\nv2Currency.response.status_code: 200",
  "relevant_endpoints": [
    "#### v2All\n- Method: GET\n- Path: /v2/all\n- Parameters:\n  - name: fields\n  - in: query\n  - required: False\n  - description: None\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'Successful response'}, 'default': {'description': 'Other responses'}}\n",
    "#### v2Currency\n- Method: GET\n- Path: /v2/currency/{currency}\n- Parameters:\n  - name: fields\n  - in: query\n  - required: False\n  - description: None\n  - type: string\n  - name: currency\n  - in: path\n  - required: True\n  - description: None\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'Successful response'}, 'default': {'description': 'Other responses'}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "v2All",
      "request_id": "5972ef37-0b62-4919-ba31-19fb4efcdb03",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "v2",
            "all"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "fields",
              "value": "True"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Content-Type": "application/json;charset=utf-8",
          "Content-Length": "751",
          "Date": "Mon, 18 Aug 2025 11:55:27 GMT",
          "Keep-Alive": "timeout=60",
          "Connection": "keep-alive"
        },
        "body": [
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {},
          {}
        ]
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:1)"
          }
        }
      ]
    },
    {
      "request_name": "v2Currency",
      "request_id": "f9f9e6df-085f-41bf-89f2-a04e1cff36f0",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "v2",
            "currency",
            ":currency"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "fields",
              "value": "currencies"
            }
          ],
          "variable": [
            {
              "key": "currency",
              "value": "AFN",
              "type": "any"
            }
          ]
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Content-Type": "application/json;charset=utf-8",
          "Content-Length": "71",
          "Date": "Mon, 18 Aug 2025 11:55:27 GMT",
          "Keep-Alive": "timeout=60",
          "Connection": "keep-alive"
        },
        "body": [
          {
            "currencies": [
              {
                "code": "AFN",
                "name": "Afghan afghani",
                "symbol": ""
              }
            ]
          }
        ]
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    }
  ]
}