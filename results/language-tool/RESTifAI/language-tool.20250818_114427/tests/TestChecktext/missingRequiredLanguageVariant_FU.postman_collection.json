{
    "info": {
        "name": "missingRequiredLanguageVariant_FU",
        "description": "Set the `language` parameter to a valid base language code without variant when a variant is required, e.g., 'en' instead of 'en-US' or 'en-GB', to test rejection due to missing required language variant.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "getSupportedLanguages",
            "request": {
                "method": "GET",
                "header": [],
                "body": null,
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/languages",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "languages"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 2xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(200, 299);",
                            "});",
                            "",
                            "try {",
                            "",
                            "    // Store response headers",
                            "    pm.response.headers.each(function(header) {",
                            "        pm.collectionVariables.set('getSupportedLanguages.response.headers.', header.value);",
                            "    });",
                            "",
                            "    // Store response cookies",
                            "    pm.response.cookies.each(function(cookie) {",
                            "        pm.collectionVariables.set('getSupportedLanguages.response.cookies.', cookie.value);",
                            "    });",
                            "",
                            "    // Store status code",
                            "    pm.collectionVariables.set('getSupportedLanguages.response.status_code', pm.response.code);",
                            "} catch (error) {",
                            "    console.error('Failed to process response:', error.message);",
                            "}"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": []
                    }
                }
            ]
        },
        {
            "name": "checkText",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "multipart/form-data"
                    }
                ],
                "body": {
                    "mode": "urlencoded",
                    "urlencoded": [
                        {
                            "key": "language",
                            "value": "en",
                            "type": "text"
                        },
                        {
                            "key": "text",
                            "value": "This is a sample text to check for spelling and grammar errors.",
                            "type": "text"
                        }
                    ]
                },
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/check",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "check"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 4xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(400, 499);",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('checkText.request.headers.Content-Type', 'multipart/form-data');",
                            "pm.collectionVariables.set('checkText.request.body.language', 'en');",
                            "pm.collectionVariables.set('checkText.request.body.text', 'This is a sample text to check for spelling and grammar errors.');"
                        ]
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.environment.set('baseUrl', 'http://localhost:9001/v2');"
                ]
            }
        }
    ]
}