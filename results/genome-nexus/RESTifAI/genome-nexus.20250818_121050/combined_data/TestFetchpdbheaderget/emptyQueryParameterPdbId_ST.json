{
  "test_name": "emptyQueryParameterPdbId_ST",
  "description": "Include a query parameter `pdbId` with an empty string value, violating the required non-empty path parameter usage, e.g., pdbId=\"\"",
  "test_suite": "TestFetchpdbheaderget",
  "base_url": "http://localhost:9000/",
  "operations": [
    "fetchPdbHeaderPOST",
    "fetchPdbHeaderGET"
  ],
  "values_to_create_a_successful_request": "fetchPdbHeaderPOST.request.headers.Content-Type: application/json\nfetchPdbHeaderPOST.request.body.[0]: 1a37\nfetchPdbHeaderPOST.response.body[0].pdbId: 1a37\nfetchPdbHeaderPOST.response.body[0].title: 14-3-3 protein zeta bound to ps-raf259 peptide\nfetchPdbHeaderPOST.response.body[0].compound.1.other_details: complexed with phosphoserine-containing peptide derived from raf\nfetchPdbHeaderPOST.response.body[0].compound.1.chain[0]: a\nfetchPdbHeaderPOST.response.body[0].compound.1.chain[1]: b\nfetchPdbHeaderPOST.response.body[0].compound.1.engineered: yes\nfetchPdbHeaderPOST.response.body[0].compound.1.molecule: 14-3-3 protein zeta\nfetchPdbHeaderPOST.response.body[0].compound.1.mol_id: 1\nfetchPdbHeaderPOST.response.body[0].compound.2.chain[0]: p\nfetchPdbHeaderPOST.response.body[0].compound.2.chain[1]: q\nfetchPdbHeaderPOST.response.body[0].compound.2.molecule: ps-raf259 peptide lsqrqrst(sep)tpnvhm\nfetchPdbHeaderPOST.response.body[0].compound.2.mol_id: 2\nfetchPdbHeaderPOST.response.body[0].source.1.organism_scientific: bos taurus\nfetchPdbHeaderPOST.response.body[0].source.1.organism_common: cattle\nfetchPdbHeaderPOST.response.body[0].source.1.organism_taxid: 9913\nfetchPdbHeaderPOST.response.body[0].source.1.expression_system_taxid: 562\nfetchPdbHeaderPOST.response.body[0].source.1.expression_system: escherichia coli\nfetchPdbHeaderPOST.response.body[0].source.1.mol_id: 1\nfetchPdbHeaderPOST.response.headers.Vary: accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding\nfetchPdbHeaderPOST.response.headers.Content-Encoding: gzip\nfetchPdbHeaderPOST.response.headers.Content-Type: application/json\nfetchPdbHeaderPOST.response.headers.Transfer-Encoding: chunked\nfetchPdbHeaderPOST.response.headers.Date: Mon, 18 Aug 2025 12:21:55 GMT\nfetchPdbHeaderPOST.response.status_code: 200\nfetchPdbHeaderGET.request.path_params.pdbId: 1a37\nfetchPdbHeaderGET.response.body.pdbId: 1a37\nfetchPdbHeaderGET.response.body.title: 14-3-3 protein zeta bound to ps-raf259 peptide\nfetchPdbHeaderGET.response.body.compound.1.other_details: complexed with phosphoserine-containing peptide derived from raf\nfetchPdbHeaderGET.response.body.compound.1.chain[0]: a\nfetchPdbHeaderGET.response.body.compound.1.chain[1]: b\nfetchPdbHeaderGET.response.body.compound.1.engineered: yes\nfetchPdbHeaderGET.response.body.compound.1.molecule: 14-3-3 protein zeta\nfetchPdbHeaderGET.response.body.compound.1.mol_id: 1\nfetchPdbHeaderGET.response.body.compound.2.chain[0]: p\nfetchPdbHeaderGET.response.body.compound.2.chain[1]: q\nfetchPdbHeaderGET.response.body.compound.2.molecule: ps-raf259 peptide lsqrqrst(sep)tpnvhm\nfetchPdbHeaderGET.response.body.compound.2.mol_id: 2\nfetchPdbHeaderGET.response.body.source.1.organism_scientific: bos taurus\nfetchPdbHeaderGET.response.body.source.1.organism_common: cattle\nfetchPdbHeaderGET.response.body.source.1.organism_taxid: 9913\nfetchPdbHeaderGET.response.body.source.1.expression_system_taxid: 562\nfetchPdbHeaderGET.response.body.source.1.expression_system: escherichia coli\nfetchPdbHeaderGET.response.body.source.1.mol_id: 1\nfetchPdbHeaderGET.response.headers.Vary: accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding\nfetchPdbHeaderGET.response.headers.Content-Encoding: gzip\nfetchPdbHeaderGET.response.headers.Content-Type: application/json\nfetchPdbHeaderGET.response.headers.Transfer-Encoding: chunked\nfetchPdbHeaderGET.response.headers.Date: Mon, 18 Aug 2025 12:21:55 GMT\nfetchPdbHeaderGET.response.status_code: 200",
  "relevant_endpoints": [
    "#### fetchPdbHeaderPOST\n- Method: POST\n- Path: /pdb/header\n- Parameters:\nNone\n- Request Body Schema:\n{'application/json': {'schema': {'type': 'array', 'items': {'type': 'string'}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'required': ['pdbId', 'title'], 'type': 'object', 'properties': {'compound': {'type': 'object', 'properties': {}}, 'pdbId': {'type': 'string', 'description': 'PDB id'}, 'source': {'type': 'object', 'properties': {}}, 'title': {'type': 'string', 'description': 'PDB description'}}}}}}}}\n",
    "#### fetchPdbHeaderGET\n- Method: GET\n- Path: /pdb/header/{pdbId}\n- Parameters:\n  - name: pdbId\n  - in: path\n  - required: True\n  - description: PDB id, for example 1a37\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'required': ['pdbId', 'title'], 'type': 'object', 'properties': {'compound': {'type': 'object', 'properties': {}}, 'pdbId': {'type': 'string', 'description': 'PDB id'}, 'source': {'type': 'object', 'properties': {}}, 'title': {'type': 'string', 'description': 'PDB description'}}}}}}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "fetchPdbHeaderPOST",
      "request_id": "81b2bc78-3742-48df-8051-27393057e4b2",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "pdb",
            "header"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": [
          "1a37"
        ]
      },
      "response_data": {
        "headers": {
          "Vary": "accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Transfer-Encoding": "chunked",
          "Date": "Mon, 18 Aug 2025 12:31:27 GMT"
        },
        "body": [
          {
            "pdbId": "1a37",
            "title": "14-3-3 protein zeta bound to ps-raf259 peptide",
            "compound": {
              "1": {
                "other_details": "complexed with phosphoserine-containing peptide derived from raf",
                "chain": [
                  "a",
                  "b"
                ],
                "engineered": "yes",
                "molecule": "14-3-3 protein zeta",
                "mol_id": "1"
              },
              "2": {
                "chain": [
                  "p",
                  "q"
                ],
                "molecule": "ps-raf259 peptide lsqrqrst(sep)tpnvhm",
                "mol_id": "2"
              }
            },
            "source": {
              "1": {
                "organism_scientific": "bos taurus",
                "organism_common": "cattle",
                "organism_taxid": "9913",
                "expression_system_taxid": "562",
                "expression_system": "escherichia coli",
                "mol_id": "1"
              }
            }
          }
        ]
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "fetchPdbHeaderGET",
      "request_id": "85d8e1d2-2c5e-4db1-bc90-77d65fe932fe",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "pdb",
            "header",
            ""
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Allow": "POST",
          "Vary": "accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding",
          "Accept-Ranges": "bytes",
          "Last-Modified": "Mon, 18 Aug 2025 11:39:43 GMT",
          "Content-Encoding": "gzip",
          "Content-Type": "text/html;charset=UTF-8",
          "Content-Language": "en",
          "Transfer-Encoding": "chunked",
          "Date": "Mon, 18 Aug 2025 12:31:27 GMT"
        },
        "body": "<!doctype html><html lang=\"en\"><head><script src=\"https://kit.fontawesome.com/6be4547409.js\" crossorigin=\"anonymous\"></script><script async src=\"https://www.googletagmanager.com/gtag/js?id=G-SYL8VKMYQB\"></script><script>function gtag(){dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag(\"js\",new Date),gtag(\"config\",\"G-SYL8VKMYQB\")</script><meta charset=\"utf-8\"/><link rel=\"icon\" href=\"/favicon.ico\"/><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"/><meta name=\"theme-color\" content=\"#000000\"/><link rel=\"manifest\" href=\"/manifest.json\"/><title>Genome Nexus</title><link href=\"/static/css/2.f375d12b.chunk.css\" rel=\"stylesheet\"><link href=\"/static/css/main.d41d2d4a.chunk.css\" rel=\"stylesheet\"></head><body><noscript>You need to enable JavaScript to run this app.</noscript><div id=\"root\"></div><script>!function(e){function r(r){for(var n,f,l=r[0],i=r[1],a=r[2],c=0,s=[];c<l.length;c++)f=l[c],Object.prototype.hasOwnProperty.call(o,f)&&o[f]&&s.push(o[f][0]),o[f]=0;for(n in i)Object.prototype.hasOwnProperty.call(i,n)&&(e[n]=i[n]);for(p&&p(r);s.length;)s.shift()();return u.push.apply(u,a||[]),t()}function t(){for(var e,r=0;r<u.length;r++){for(var t=u[r],n=!0,l=1;l<t.length;l++){var i=t[l];0!==o[i]&&(n=!1)}n&&(u.splice(r--,1),e=f(f.s=t[0]))}return e}var n={},o={1:0},u=[];function f(r){if(n[r])return n[r].exports;var t=n[r]={i:r,l:!1,exports:{}};return e[r].call(t.exports,t,t.exports,f),t.l=!0,t.exports}f.m=e,f.c=n,f.d=function(e,r,t){f.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},f.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},f.t=function(e,r){if(1&r&&(e=f(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(f.r(t),Object.defineProperty(t,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var n in e)f.d(t,n,function(r){return e[r]}.bind(null,n));return t},f.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return f.d(r,\"a\",r),r},f.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},f.p=\"/\";var l=this[\"webpackJsonpgenome-nexus-frontend\"]=this[\"webpackJsonpgenome-nexus-frontend\"]||[],i=l.push.bind(l);l.push=r,l=l.slice();for(var a=0;a<l.length;a++)r(l[a]);var p=i;t()}([])</script><script src=\"/static/js/2.2bcfcb60.chunk.js\"></script><script src=\"/static/js/main.dd8cff1d.chunk.js\"></script></body></html>"
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:2)"
          }
        }
      ]
    }
  ]
}