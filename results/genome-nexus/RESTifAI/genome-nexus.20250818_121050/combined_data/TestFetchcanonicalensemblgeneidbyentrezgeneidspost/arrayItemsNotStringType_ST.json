{
  "test_name": "arrayItemsNotStringType_ST",
  "description": "Request body is an array of integers instead of strings, e.g., [7157, 1956]",
  "test_suite": "TestFetchcanonicalensemblgeneidbyentrezgeneidspost",
  "base_url": "http://localhost:9000/",
  "operations": [
    "fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST"
  ],
  "values_to_create_a_successful_request": "fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.request.headers.Content-Type: application/json\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.request.body.[0]: 7157\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.request.body.[1]: 1956\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.request.body.[2]: 672\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.request.body.[3]: 1029\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[0].geneId: ENSG00000141510\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[0].hugoSymbol: TP53\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[0].synonyms[0]: p53\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[0].synonyms[1]: LFS1\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[0].entrezGeneId: 7157\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].geneId: ENSG00000146648\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].hugoSymbol: EGFR\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].synonyms[0]: ERBB1\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].synonyms[1]: ERRP\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].previousSymbols[0]: ERBB\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[1].entrezGeneId: 1956\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].geneId: ENSG00000012048\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].hugoSymbol: BRCA1\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].synonyms[0]: RNF53\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].synonyms[1]: BRCC1\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].synonyms[2]: PPP1R53\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].synonyms[3]: FANCS\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[2].entrezGeneId: 672\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].geneId: ENSG00000147889\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].hugoSymbol: CDKN2A\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[0]: CDK4I\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[1]: p16\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[2]: INK4a\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[3]: MTS1\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[4]: CMM2\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[5]: ARF\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[6]: p19\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[7]: p14\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[8]: INK4\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[9]: p16INK4a\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[10]: p19Arf\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[11]: p14ARF\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].synonyms[12]: P16-INK4A\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].previousSymbols[0]: CDKN2\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].previousSymbols[1]: MLM\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.body[3].entrezGeneId: 1029\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.headers.Vary: accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.headers.Content-Encoding: gzip\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.headers.Content-Type: application/json\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.headers.Transfer-Encoding: chunked\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.headers.Date: Mon, 18 Aug 2025 12:15:49 GMT\nfetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST.response.status_code: 200",
  "relevant_endpoints": [
    "#### fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST\n- Method: POST\n- Path: /ensembl/canonical-gene/entrez\n- Parameters:\nNone\n- Request Body Schema:\n{'application/json': {'schema': {'type': 'array', 'items': {'type': 'string'}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'type': 'array', 'items': {'required': ['geneId', 'hugoSymbol'], 'type': 'object', 'properties': {'geneId': {'type': 'string', 'description': 'Ensembl gene id'}, 'hugoSymbol': {'type': 'string', 'description': 'Approved Hugo symbol'}, 'synonyms': {'type': 'array', 'description': 'Hugo symbol synonyms', 'items': {'type': 'string'}}, 'previousSymbols': {'type': 'array', 'description': 'Previous Hugo symbols', 'items': {'type': 'string'}}, 'entrezGeneId': {'type': 'string', 'description': 'Entrez Gene Id'}}}}}}}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "fetchCanonicalEnsemblGeneIdByEntrezGeneIdsPOST",
      "request_id": "f67d5d11-7768-4615-9807-5566cc4e93ce",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "ensembl",
            "canonical-gene",
            "entrez"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": [
          7157,
          1956,
          "672",
          "1029"
        ]
      },
      "response_data": {
        "headers": {
          "Vary": "accept-encoding,origin,access-control-request-headers,access-control-request-method,accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Transfer-Encoding": "chunked",
          "Date": "Mon, 18 Aug 2025 12:25:08 GMT"
        },
        "body": [
          {
            "geneId": "ENSG00000141510",
            "hugoSymbol": "TP53",
            "synonyms": [
              "p53",
              "LFS1"
            ],
            "entrezGeneId": "7157"
          },
          {
            "geneId": "ENSG00000146648",
            "hugoSymbol": "EGFR",
            "synonyms": [
              "ERBB1",
              "ERRP"
            ],
            "previousSymbols": [
              "ERBB"
            ],
            "entrezGeneId": "1956"
          },
          {
            "geneId": "ENSG00000012048",
            "hugoSymbol": "BRCA1",
            "synonyms": [
              "RNF53",
              "BRCC1",
              "PPP1R53",
              "FANCS"
            ],
            "entrezGeneId": "672"
          },
          {
            "geneId": "ENSG00000147889",
            "hugoSymbol": "CDKN2A",
            "synonyms": [
              "CDK4I",
              "p16",
              "INK4a",
              "MTS1",
              "CMM2",
              "ARF",
              "p19",
              "p14",
              "INK4",
              "p16INK4a",
              "p19Arf",
              "p14ARF",
              "P16-INK4A"
            ],
            "previousSymbols": [
              "CDKN2",
              "MLM"
            ],
            "entrezGeneId": "1029"
          }
        ]
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:1)"
          }
        }
      ]
    }
  ]
}