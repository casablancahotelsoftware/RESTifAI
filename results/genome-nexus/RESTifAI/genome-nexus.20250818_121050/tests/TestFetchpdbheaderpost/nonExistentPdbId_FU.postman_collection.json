{
    "info": {
        "name": "nonExistentPdbId_FU",
        "description": "Send a fetchPdbHeaderPOST request with a valid PDB ID that does not exist in the database, e.g., ['ZZZZ'], to test handling of non-existent PDB entries.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "fetchVariantAnnotationPOST",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "[\n  \"NM_000546.5:c.215C>G\",\n  \"ENST00000367770.8:p.R175H\",\n  \"chr17:g.7579472C>G\"\n]",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/annotation?isoformOverrideSource=uniprot&token=%7B%22source1%22%3A%22put-your-token1-here%22%2C%22source2%22%3A%22put-your-token2-here%22%7D&fields=hotspots",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "annotation"
                    ],
                    "query": [
                        {
                            "key": "isoformOverrideSource",
                            "value": "uniprot"
                        },
                        {
                            "key": "token",
                            "value": "%7B%22source1%22%3A%22put-your-token1-here%22%2C%22source2%22%3A%22put-your-token2-here%22%7D"
                        },
                        {
                            "key": "fields",
                            "value": "hotspots"
                        }
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 2xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(200, 299);",
                            "});",
                            "",
                            "try {",
                            "",
                            "    // Store response headers",
                            "    pm.response.headers.each(function(header) {",
                            "        pm.collectionVariables.set('fetchVariantAnnotationPOST.response.headers.', header.value);",
                            "    });",
                            "",
                            "    // Store response cookies",
                            "    pm.response.cookies.each(function(cookie) {",
                            "        pm.collectionVariables.set('fetchVariantAnnotationPOST.response.cookies.', cookie.value);",
                            "    });",
                            "",
                            "    // Store status code",
                            "    pm.collectionVariables.set('fetchVariantAnnotationPOST.response.status_code', pm.response.code);",
                            "} catch (error) {",
                            "    console.error('Failed to process response:', error.message);",
                            "}"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.query_params.isoformOverrideSource', 'uniprot');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.query_params.token', '%7B%22source1%22%3A%22put-your-token1-here%22%2C%22source2%22%3A%22put-your-token2-here%22%7D');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.query_params.fields', 'hotspots');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.headers.Content-Type', 'application/json');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.body.[0]', 'NM_000546.5:c.215C>G');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.body.[1]', 'ENST00000367770.8:p.R175H');",
                            "pm.collectionVariables.set('fetchVariantAnnotationPOST.request.body.[2]', 'chr17:g.7579472C>G');"
                        ]
                    }
                }
            ]
        },
        {
            "name": "fetchPdbHeaderPOST",
            "request": {
                "method": "POST",
                "header": [
                    {
                        "key": "Content-Type",
                        "value": "application/json"
                    }
                ],
                "body": {
                    "mode": "raw",
                    "raw": "[\n  \"ZZZZ\"\n]",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/pdb/header",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "pdb",
                        "header"
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 4xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(400, 499);",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('fetchPdbHeaderPOST.request.headers.Content-Type', 'application/json');",
                            "pm.collectionVariables.set('fetchPdbHeaderPOST.request.body.[0]', 'ZZZZ');"
                        ]
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.environment.set('baseUrl', 'http://localhost:9000');"
                ]
            }
        }
    ]
}