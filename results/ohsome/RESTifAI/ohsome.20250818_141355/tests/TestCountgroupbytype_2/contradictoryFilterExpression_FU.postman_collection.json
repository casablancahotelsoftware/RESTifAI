{
    "info": {
        "name": "contradictoryFilterExpression_FU",
        "description": "Set the `filter` parameter to a contradictory filter expression, e.g., 'osm_type=node and osm_type=way', which logically cannot be true simultaneously and should cause a 4xx error.",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
        {
            "name": "countGroupByType_2",
            "request": {
                "method": "GET",
                "header": [],
                "body": null,
                "cookies": [],
                "url": {
                    "raw": "{{baseUrl}}/users/count/groupBy/type?bboxes=12.4923,41.8902,12.4964,41.8922|13.3615,38.1157,13.3655,38.1177&contributionType=creation,deletion&filter=osm_type%3Dnode%20and%20osm_type%3Dway&format=json&showMetadata=true&time=2023-01-01T00:00:00Z/2023-12-31T23:59:59Z&timeout=30",
                    "host": [
                        "{{baseUrl}}"
                    ],
                    "path": [
                        "users",
                        "count",
                        "groupBy",
                        "type"
                    ],
                    "query": [
                        {
                            "key": "bboxes",
                            "value": "12.4923,41.8902,12.4964,41.8922|13.3615,38.1157,13.3655,38.1177"
                        },
                        {
                            "key": "contributionType",
                            "value": "creation,deletion"
                        },
                        {
                            "key": "filter",
                            "value": "osm_type%3Dnode%20and%20osm_type%3Dway"
                        },
                        {
                            "key": "format",
                            "value": "json"
                        },
                        {
                            "key": "showMetadata",
                            "value": "true"
                        },
                        {
                            "key": "time",
                            "value": "2023-01-01T00:00:00Z/2023-12-31T23:59:59Z"
                        },
                        {
                            "key": "timeout",
                            "value": "30"
                        }
                    ]
                }
            },
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.test('Response status code is 4xx', function () {",
                            "    pm.expect(pm.response.code || pm.response.status).to.be.within(400, 499);",
                            "});"
                        ]
                    }
                },
                {
                    "listen": "prerequest",
                    "script": {
                        "type": "text/javascript",
                        "exec": [
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.bboxes', '12.4923,41.8902,12.4964,41.8922|13.3615,38.1157,13.3655,38.1177');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.contributionType', 'creation,deletion');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.filter', 'osm_type%3Dnode%20and%20osm_type%3Dway');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.format', 'json');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.showMetadata', 'true');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.time', '2023-01-01T00:00:00Z/2023-12-31T23:59:59Z');",
                            "pm.collectionVariables.set('countGroupByType_2.request.query_params.timeout', 30);"
                        ]
                    }
                }
            ]
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [
                    "pm.environment.set('baseUrl', 'https://api.ohsome.org/v1');"
                ]
            }
        }
    ]
}