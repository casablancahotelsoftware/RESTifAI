{
  "test_name": "invalidFormatValue_ST",
  "description": "Set the `format` parameter to an unsupported value 'xml' which is not allowed (allowed: geojson, csv, json)",
  "test_suite": "TestPerimeterratiogroupbyboundary",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "count",
    "perimeter",
    "perimeterRatio",
    "perimeterRatioGroupByBoundary"
  ],
  "values_to_create_a_successful_request": "count.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\ncount.request.query_params.filter: type:way and building=*\ncount.request.query_params.format: json\ncount.request.query_params.showMetadata: false\ncount.request.query_params.time: 2023-01-01T00:00:00Z/2024-01-01T00:00:00Z\ncount.response.body.attribution.url: https://ohsome.org/copyrights\ncount.response.body.attribution.text: \u00a9 OpenStreetMap contributors\ncount.response.body.apiVersion: 1.10.4\ncount.response.body.result[0].timestamp: 2023-01-01T00:00:00Z\ncount.response.body.result[0].value: 20.0\ncount.response.body.result[1].timestamp: 2024-01-01T00:00:00Z\ncount.response.body.result[1].value: 20.0\ncount.response.headers.Date: Mon, 18 Aug 2025 16:07:14 GMT\ncount.response.headers.Server: Apache/2.4.58 (Ubuntu)\ncount.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\ncount.response.headers.Access-Control-Allow-Origin: *\ncount.response.headers.Access-Control-Allow-Methods: POST, GET\ncount.response.headers.Access-Control-Max-Age: 3600\ncount.response.headers.Access-Control-Allow-Credentials: true\ncount.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\ncount.response.headers.Cache-Control: no-transform, public, max-age=31556926\ncount.response.headers.vary: accept-encoding\ncount.response.headers.Content-Encoding: gzip\ncount.response.headers.Content-Type: application/json\ncount.response.headers.Keep-Alive: timeout=5, max=100\ncount.response.headers.Connection: Keep-Alive\ncount.response.headers.Transfer-Encoding: chunked\ncount.response.status_code: 200\nperimeter.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\nperimeter.request.query_params.filter: type:way and building=*\nperimeter.request.query_params.format: json\nperimeter.request.query_params.showMetadata: false\nperimeter.request.query_params.time: 2023-01-01T00:00:00Z/2024-01-01T00:00:00Z\nperimeter.response.body.attribution.url: https://ohsome.org/copyrights\nperimeter.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeter.response.body.apiVersion: 1.10.4\nperimeter.response.body.result[0].timestamp: 2023-01-01T00:00:00Z\nperimeter.response.body.result[0].value: 2072.67\nperimeter.response.body.result[1].timestamp: 2024-01-01T00:00:00Z\nperimeter.response.body.result[1].value: 2079.49\nperimeter.response.headers.Date: Mon, 18 Aug 2025 16:07:16 GMT\nperimeter.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeter.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeter.response.headers.Access-Control-Allow-Origin: *\nperimeter.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeter.response.headers.Access-Control-Max-Age: 3600\nperimeter.response.headers.Access-Control-Allow-Credentials: true\nperimeter.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeter.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeter.response.headers.vary: accept-encoding\nperimeter.response.headers.Content-Encoding: gzip\nperimeter.response.headers.Content-Type: application/json\nperimeter.response.headers.Keep-Alive: timeout=5, max=100\nperimeter.response.headers.Connection: Keep-Alive\nperimeter.response.headers.Transfer-Encoding: chunked\nperimeter.response.status_code: 200\nperimeterRatio.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\nperimeterRatio.request.query_params.filter: type:way and building=*\nperimeterRatio.request.query_params.filter2: type:way and building=house\nperimeterRatio.request.query_params.format: json\nperimeterRatio.request.query_params.showMetadata: false\nperimeterRatio.request.query_params.time: 2023-01-01T00:00:00Z/2024-01-01T00:00:00Z\nperimeterRatio.response.body.attribution.url: https://ohsome.org/copyrights\nperimeterRatio.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeterRatio.response.body.apiVersion: 1.10.4\nperimeterRatio.response.body.ratioResult[0].timestamp: 2023-01-01T00:00:00Z\nperimeterRatio.response.body.ratioResult[0].value: 2072.67\nperimeterRatio.response.body.ratioResult[0].value2: 0.0\nperimeterRatio.response.body.ratioResult[0].ratio: 0.0\nperimeterRatio.response.body.ratioResult[1].timestamp: 2024-01-01T00:00:00Z\nperimeterRatio.response.body.ratioResult[1].value: 2079.49\nperimeterRatio.response.body.ratioResult[1].value2: 0.0\nperimeterRatio.response.body.ratioResult[1].ratio: 0.0\nperimeterRatio.response.headers.Date: Mon, 18 Aug 2025 16:07:18 GMT\nperimeterRatio.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeterRatio.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeterRatio.response.headers.Access-Control-Allow-Origin: *\nperimeterRatio.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeterRatio.response.headers.Access-Control-Max-Age: 3600\nperimeterRatio.response.headers.Access-Control-Allow-Credentials: true\nperimeterRatio.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeterRatio.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeterRatio.response.headers.vary: accept-encoding\nperimeterRatio.response.headers.Content-Encoding: gzip\nperimeterRatio.response.headers.Content-Type: application/json\nperimeterRatio.response.headers.Keep-Alive: timeout=5, max=100\nperimeterRatio.response.headers.Connection: Keep-Alive\nperimeterRatio.response.headers.Transfer-Encoding: chunked\nperimeterRatio.response.status_code: 200\nperimeterRatioGroupByBoundary.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\nperimeterRatioGroupByBoundary.request.query_params.filter: type:way and building=*\nperimeterRatioGroupByBoundary.request.query_params.filter2: type:way and building=house\nperimeterRatioGroupByBoundary.request.query_params.format: geojson\nperimeterRatioGroupByBoundary.request.query_params.showMetadata: false\nperimeterRatioGroupByBoundary.request.query_params.time: 2023-01-01T00:00:00Z/2024-01-01T00:00:00Z\nperimeterRatioGroupByBoundary.request.query_params.timeout: 60\nperimeterRatioGroupByBoundary.response.body.attribution.url: https://ohsome.org/copyrights\nperimeterRatioGroupByBoundary.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeterRatioGroupByBoundary.response.body.apiVersion: 1.10.4\nperimeterRatioGroupByBoundary.response.body.type: FeatureCollection\nperimeterRatioGroupByBoundary.response.body.features[0].type: Feature\nperimeterRatioGroupByBoundary.response.body.features[0].properties.groupByBoundaryId: boundary1\nperimeterRatioGroupByBoundary.response.body.features[0].properties.value2: 0.0\nperimeterRatioGroupByBoundary.response.body.features[0].properties.value: 2072.67\nperimeterRatioGroupByBoundary.response.body.features[0].properties.timestamp: 2023-01-01T00:00:00Z\nperimeterRatioGroupByBoundary.response.body.features[0].properties.ratio: 0.0\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.type: Polygon\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][0]: 12.4964\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][0]: 12.4964\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][1]: 41.892199999999995\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][1]: 41.892199999999995\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[0].id: boundary1@2023-01-01T00:00:00Z\nperimeterRatioGroupByBoundary.response.body.features[1].type: Feature\nperimeterRatioGroupByBoundary.response.body.features[1].properties.groupByBoundaryId: boundary1\nperimeterRatioGroupByBoundary.response.body.features[1].properties.value2: 0.0\nperimeterRatioGroupByBoundary.response.body.features[1].properties.value: 2079.49\nperimeterRatioGroupByBoundary.response.body.features[1].properties.timestamp: 2024-01-01T00:00:00Z\nperimeterRatioGroupByBoundary.response.body.features[1].properties.ratio: 0.0\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.type: Polygon\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][0]: 12.4964\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][0]: 12.4964\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][1]: 41.892199999999995\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][1]: 41.892199999999995\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][0]: 12.4923\nperimeterRatioGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][1]: 41.8902\nperimeterRatioGroupByBoundary.response.body.features[1].id: boundary1@2024-01-01T00:00:00Z\nperimeterRatioGroupByBoundary.response.headers.Date: Mon, 18 Aug 2025 16:07:22 GMT\nperimeterRatioGroupByBoundary.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeterRatioGroupByBoundary.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeterRatioGroupByBoundary.response.headers.Access-Control-Allow-Origin: *\nperimeterRatioGroupByBoundary.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeterRatioGroupByBoundary.response.headers.Access-Control-Max-Age: 3600\nperimeterRatioGroupByBoundary.response.headers.Access-Control-Allow-Credentials: true\nperimeterRatioGroupByBoundary.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeterRatioGroupByBoundary.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeterRatioGroupByBoundary.response.headers.vary: accept-encoding\nperimeterRatioGroupByBoundary.response.headers.Content-Encoding: gzip\nperimeterRatioGroupByBoundary.response.headers.Content-Type: application/json\nperimeterRatioGroupByBoundary.response.headers.Keep-Alive: timeout=5, max=100\nperimeterRatioGroupByBoundary.response.headers.Connection: Keep-Alive\nperimeterRatioGroupByBoundary.response.headers.Transfer-Encoding: chunked\nperimeterRatioGroupByBoundary.response.status_code: 200",
  "relevant_endpoints": [
    "#### count\n- Method: GET\n- Path: /elements/count\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeter\n- Method: GET\n- Path: /elements/perimeter\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeterRatio\n- Method: GET\n- Path: /elements/perimeter/ratio\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: geometry:polygon and building=*\n  - name: filter2\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: geometry:polygon and building=house\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'RatioResponse', 'required': ['apiVersion', 'attribution', 'ratioResult'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'ratioResult': {'type': 'array', 'description': 'ElementsResult for /ratio requests', 'items': {'title': 'RatioResult', 'required': ['ratio', 'timestamp', 'value', 'value2'], 'type': 'object', 'properties': {'ratio': {'type': 'number', 'description': 'Ratio of value2/value', 'format': 'double'}, 'timestamp': {'type': 'string', 'description': 'Timestamp in the format YYYY-MM-DDThh:mm:ssZ'}, 'value': {'type': 'number', 'description': 'Value corresponding to the initial filter parameters', 'format': 'double'}, 'value2': {'type': 'number', 'description': 'Value corresponding to the second (2) filter parameters', 'format': 'double'}}}}}}}, 'text/csv': {'schema': {'title': 'RatioResponse', 'required': ['apiVersion', 'attribution', 'ratioResult'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'ratioResult': {'type': 'array', 'description': 'ElementsResult for /ratio requests', 'items': {'title': 'RatioResult', 'required': ['ratio', 'timestamp', 'value', 'value2'], 'type': 'object', 'properties': {'ratio': {'type': 'number', 'description': 'Ratio of value2/value', 'format': 'double'}, 'timestamp': {'type': 'string', 'description': 'Timestamp in the format YYYY-MM-DDThh:mm:ssZ'}, 'value': {'type': 'number', 'description': 'Value corresponding to the initial filter parameters', 'format': 'double'}, 'value2': {'type': 'number', 'description': 'Value corresponding to the second (2) filter parameters', 'format': 'double'}}}}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeterRatioGroupByBoundary\n- Method: GET\n- Path: /elements/perimeter/ratio/groupBy/boundary\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: geometry:polygon and building=*\n  - name: filter2\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: geometry:polygon and building=house\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'RatioGroupByBoundaryResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByBoundaryResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByBoundaryResult': {'type': 'array', 'description': 'RatioGroupByResult array holding the respective objects with their timestamp-value-value2-ratio values', 'items': {'title': 'RatioGroupByResult', 'required': ['groupByObject', 'ratioResult'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'ratioResult': {'type': 'array', 'description': 'RatioResult array holding timestamp, whole and part values', 'items': {'title': 'RatioResult', 'required': ['ratio', 'timestamp', 'value', 'value2'], 'type': 'object', 'properties': {'ratio': {'type': 'number', 'description': 'Ratio of value2/value', 'format': 'double'}, 'timestamp': {'type': 'string', 'description': 'Timestamp in the format YYYY-MM-DDThh:mm:ssZ'}, 'value': {'type': 'number', 'description': 'Value corresponding to the initial filter parameters', 'format': 'double'}, 'value2': {'type': 'number', 'description': 'Value corresponding to the second (2) filter parameters', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'RatioGroupByBoundaryResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByBoundaryResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByBoundaryResult': {'type': 'array', 'description': 'RatioGroupByResult array holding the respective objects with their timestamp-value-value2-ratio values', 'items': {'title': 'RatioGroupByResult', 'required': ['groupByObject', 'ratioResult'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'ratioResult': {'type': 'array', 'description': 'RatioResult array holding timestamp, whole and part values', 'items': {'title': 'RatioResult', 'required': ['ratio', 'timestamp', 'value', 'value2'], 'type': 'object', 'properties': {'ratio': {'type': 'number', 'description': 'Ratio of value2/value', 'format': 'double'}, 'timestamp': {'type': 'string', 'description': 'Timestamp in the format YYYY-MM-DDThh:mm:ssZ'}, 'value': {'type': 'number', 'description': 'Value corresponding to the initial filter parameters', 'format': 'double'}, 'value2': {'type': 'number', 'description': 'Value corresponding to the second (2) filter parameters', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": true,
  "test_results": [
    {
      "request_name": "count",
      "request_id": "bb6e9c2e-fee1-4d56-a1ad-baa87c890c3b",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "count"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20building%3D%2A"
            },
            {
              "key": "format",
              "value": "xml"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:50:04 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T17:50:04.861391209",
          "status": 400,
          "message": "The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'.",
          "requestUrl": "https://api.ohsome.org/v1/elements/count?bboxes=12.4923,41.8902,12.4964,41.8922&filter=type%3Away%20and%20building%3D%2A&format=xml&showMetadata=false&time=2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeter",
      "request_id": "0564ee27-0e81-4fe0-9640-03088e838589",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "perimeter"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20building%3D%2A"
            },
            {
              "key": "format",
              "value": "xml"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:50:04 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T17:50:04.961707667",
          "status": 400,
          "message": "The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'.",
          "requestUrl": "https://api.ohsome.org/v1/elements/perimeter?bboxes=12.4923,41.8902,12.4964,41.8922&filter=type%3Away%20and%20building%3D%2A&format=xml&showMetadata=false&time=2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeterRatio",
      "request_id": "b326e517-e47e-41e6-83ca-180fb3d0d3ce",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "perimeter",
            "ratio"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20building%3D%2A"
            },
            {
              "key": "filter2",
              "value": "type%3Away%20and%20building%3Dhouse"
            },
            {
              "key": "format",
              "value": "xml"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:50:05 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T17:50:05.047437888",
          "status": 400,
          "message": "The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'.",
          "requestUrl": "https://api.ohsome.org/v1/elements/perimeter/ratio?bboxes=12.4923,41.8902,12.4964,41.8922&filter=type%3Away%20and%20building%3D%2A&filter2=type%3Away%20and%20building%3Dhouse&format=xml&showMetadata=false&time=2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeterRatioGroupByBoundary",
      "request_id": "03ccb53e-f885-4853-a6fc-8a3bac454542",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "perimeter",
            "ratio",
            "groupBy",
            "boundary"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20building%3D%2A"
            },
            {
              "key": "filter2",
              "value": "type%3Away%20and%20building%3Dhouse"
            },
            {
              "key": "format",
              "value": "xml"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2024-01-01T00:00:00Z"
            },
            {
              "key": "timeout",
              "value": "60"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:50:05 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T17:50:05.138804638",
          "status": 400,
          "message": "The given 'format' parameter is invalid. Please choose between 'geojson'(only available for /groupBy/boundary and data extraction requests), 'json', or 'csv'.",
          "requestUrl": "https://api.ohsome.org/v1/elements/perimeter/ratio/groupBy/boundary?bboxes=12.4923,41.8902,12.4964,41.8922&filter=type%3Away%20and%20building%3D%2A&filter2=type%3Away%20and%20building%3Dhouse&format=xml&showMetadata=false&time=2023-01-01T00:00:00Z/2024-01-01T00:00:00Z&timeout=60"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    }
  ]
}