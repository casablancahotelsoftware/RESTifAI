{
  "test_name": "invalidShowMetadataValue_ST",
  "description": "Set the `showMetadata` query parameter to a non-boolean string 'yes' instead of 'true' or 'false'",
  "test_suite": "TestAreadensitygroupbyboundary",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "areaDensityGroupByBoundary"
  ],
  "values_to_create_a_successful_request": "areaDensityGroupByBoundary.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922|13.3614,38.1157,13.3655,38.1177\nareaDensityGroupByBoundary.request.query_params.filter: type=building and geometry=Polygon and tag=residential\nareaDensityGroupByBoundary.request.query_params.format: geojson\nareaDensityGroupByBoundary.request.query_params.showMetadata: true\nareaDensityGroupByBoundary.request.query_params.time: 2024-06-01T00:00:00Z\nareaDensityGroupByBoundary.request.query_params.timeout: 30\nareaDensityGroupByBoundary.response.body.attribution.url: https://ohsome.org/copyrights\nareaDensityGroupByBoundary.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nareaDensityGroupByBoundary.response.body.apiVersion: 1.10.4\nareaDensityGroupByBoundary.response.body.metadata.executionTime: 3749\nareaDensityGroupByBoundary.response.body.metadata.description: Density of selected items (area of items in square meters divided by the area in square kilometers).\nareaDensityGroupByBoundary.response.body.metadata.requestUrl: https://api.ohsome.org/v1/elements/area/density/groupBy/boundary?bboxes=12.4923%2C41.8902%2C12.4964%2C41.8922%7C13.3614%2C38.1157%2C13.3655%2C38.1177&filter=type%3Dbuilding+and+geometry%3DPolygon+and+tag%3Dresidential&format=geojson&showMetadata=true&time=2024-06-01T00%3A00%3A00Z&timeout=30\nareaDensityGroupByBoundary.response.body.type: FeatureCollection\nareaDensityGroupByBoundary.response.body.features[0].type: Feature\nareaDensityGroupByBoundary.response.body.features[0].properties.groupByBoundaryId: boundary1\nareaDensityGroupByBoundary.response.body.features[0].properties.value: 0.0\nareaDensityGroupByBoundary.response.body.features[0].properties.timestamp: 2024-06-01T00:00:00Z\nareaDensityGroupByBoundary.response.body.features[0].geometry.type: Polygon\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][0]: 12.4923\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][1]: 41.8902\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][0]: 12.4964\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][1]: 41.8902\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][0]: 12.4964\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][1]: 41.892199999999995\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][0]: 12.4923\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][1]: 41.892199999999995\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][0]: 12.4923\nareaDensityGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][1]: 41.8902\nareaDensityGroupByBoundary.response.body.features[0].id: boundary1@2024-06-01T00:00:00Z\nareaDensityGroupByBoundary.response.body.features[1].type: Feature\nareaDensityGroupByBoundary.response.body.features[1].properties.groupByBoundaryId: boundary2\nareaDensityGroupByBoundary.response.body.features[1].properties.value: 0.0\nareaDensityGroupByBoundary.response.body.features[1].properties.timestamp: 2024-06-01T00:00:00Z\nareaDensityGroupByBoundary.response.body.features[1].geometry.type: Polygon\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][0]: 13.3614\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][1]: 38.1157\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][0]: 13.365499999999999\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][1]: 38.1157\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][0]: 13.365499999999999\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][1]: 38.1177\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][0]: 13.3614\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][1]: 38.1177\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][0]: 13.3614\nareaDensityGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][1]: 38.1157\nareaDensityGroupByBoundary.response.body.features[1].id: boundary2@2024-06-01T00:00:00Z\nareaDensityGroupByBoundary.response.headers.Date: Mon, 18 Aug 2025 14:54:18 GMT\nareaDensityGroupByBoundary.response.headers.Server: Apache/2.4.58 (Ubuntu)\nareaDensityGroupByBoundary.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nareaDensityGroupByBoundary.response.headers.Access-Control-Allow-Origin: *\nareaDensityGroupByBoundary.response.headers.Access-Control-Allow-Methods: POST, GET\nareaDensityGroupByBoundary.response.headers.Access-Control-Max-Age: 3600\nareaDensityGroupByBoundary.response.headers.Access-Control-Allow-Credentials: true\nareaDensityGroupByBoundary.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nareaDensityGroupByBoundary.response.headers.Cache-Control: no-transform, public, max-age=31556926\nareaDensityGroupByBoundary.response.headers.vary: accept-encoding\nareaDensityGroupByBoundary.response.headers.Content-Encoding: gzip\nareaDensityGroupByBoundary.response.headers.Content-Type: application/json\nareaDensityGroupByBoundary.response.headers.Keep-Alive: timeout=5, max=100\nareaDensityGroupByBoundary.response.headers.Connection: Keep-Alive\nareaDensityGroupByBoundary.response.headers.Transfer-Encoding: chunked\nareaDensityGroupByBoundary.response.status_code: 200",
  "relevant_endpoints": [
    "#### areaDensityGroupByBoundary\n- Method: GET\n- Path: /elements/area/density/groupBy/boundary\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "areaDensityGroupByBoundary",
      "request_id": "7b5d00ed-c395-4cb5-afc4-56dd89032b6c",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area",
            "density",
            "groupBy",
            "boundary"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922|13.3614,38.1157,13.3655,38.1177"
            },
            {
              "key": "filter",
              "value": "type%3Dbuilding%20and%20geometry%3DPolygon%20and%20tag%3Dresidential"
            },
            {
              "key": "format",
              "value": "geojson"
            },
            {
              "key": "showMetadata",
              "value": "yes"
            },
            {
              "key": "time",
              "value": "2024-06-01T00:00:00Z"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 16:23:24 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=100",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "metadata": {
            "executionTime": 3153,
            "description": "Density of selected items (area of items in square meters divided by the area in square kilometers).",
            "requestUrl": "https://api.ohsome.org/v1/elements/area/density/groupBy/boundary?bboxes=12.4923,41.8902,12.4964,41.8922|13.3614,38.1157,13.3655,38.1177&filter=type%3Dbuilding%20and%20geometry%3DPolygon%20and%20tag%3Dresidential&format=geojson&showMetadata=yes&time=2024-06-01T00:00:00Z&timeout=30"
          },
          "type": "FeatureCollection",
          "features": [
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 0.0,
                "timestamp": "2024-06-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      12.4923,
                      41.8902
                    ],
                    [
                      12.4964,
                      41.8902
                    ],
                    [
                      12.4964,
                      41.892199999999995
                    ],
                    [
                      12.4923,
                      41.892199999999995
                    ],
                    [
                      12.4923,
                      41.8902
                    ]
                  ]
                ]
              },
              "id": "boundary1@2024-06-01T00:00:00Z"
            },
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary2",
                "value": 0.0,
                "timestamp": "2024-06-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      13.3614,
                      38.1157
                    ],
                    [
                      13.365499999999999,
                      38.1157
                    ],
                    [
                      13.365499999999999,
                      38.1177
                    ],
                    [
                      13.3614,
                      38.1177
                    ],
                    [
                      13.3614,
                      38.1157
                    ]
                  ]
                ]
              },
              "id": "boundary2@2024-06-01T00:00:00Z"
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:1)"
          }
        }
      ]
    }
  ]
}