{
  "test_name": "invalidShowMetadataValue_ST",
  "description": "Change the `showMetadata` parameter to a string other than 'true' or 'false', e.g., 'yes'",
  "test_suite": "TestLengthdensitygroupbyboundary_1",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "area_1",
    "length_1",
    "lengthDensity_1",
    "lengthDensityGroupByBoundary_1"
  ],
  "values_to_create_a_successful_request": "area_1.request.headers.Content-Type: application/x-www-form-urlencoded\narea_1.request.body.bboxes: 8.67,49.39,8.71,49.42\narea_1.request.body.filter: type:way and natural=*\narea_1.request.body.format: json\narea_1.request.body.showMetadata: false\narea_1.request.body.time: 2014-01-01/2017-01-01/P1Y\narea_1.request.body.timeout: 30\narea_1.response.body.attribution.url: https://ohsome.org/copyrights\narea_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\narea_1.response.body.apiVersion: 1.10.4\narea_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\narea_1.response.body.result[0].value: 41331.72\narea_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\narea_1.response.body.result[1].value: 40089.27\narea_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\narea_1.response.body.result[2].value: 41007.36\narea_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\narea_1.response.body.result[3].value: 41027.95\narea_1.response.headers.Date: Mon, 18 Aug 2025 15:34:47 GMT\narea_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\narea_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\narea_1.response.headers.Access-Control-Allow-Origin: *\narea_1.response.headers.Access-Control-Allow-Methods: POST, GET\narea_1.response.headers.Access-Control-Max-Age: 3600\narea_1.response.headers.Access-Control-Allow-Credentials: true\narea_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\narea_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\narea_1.response.headers.vary: accept-encoding\narea_1.response.headers.Content-Encoding: gzip\narea_1.response.headers.Content-Type: application/json\narea_1.response.headers.Keep-Alive: timeout=5, max=100\narea_1.response.headers.Connection: Keep-Alive\narea_1.response.headers.Transfer-Encoding: chunked\narea_1.response.status_code: 200\nlength_1.request.headers.Content-Type: application/x-www-form-urlencoded\nlength_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nlength_1.request.body.filter: type:way and natural=*\nlength_1.request.body.format: json\nlength_1.request.body.showMetadata: false\nlength_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nlength_1.request.body.timeout: 30\nlength_1.response.body.attribution.url: https://ohsome.org/copyrights\nlength_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nlength_1.response.body.apiVersion: 1.10.4\nlength_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\nlength_1.response.body.result[0].value: 190.09\nlength_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\nlength_1.response.body.result[1].value: 190.09\nlength_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\nlength_1.response.body.result[2].value: 190.09\nlength_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\nlength_1.response.body.result[3].value: 413.02\nlength_1.response.headers.Date: Mon, 18 Aug 2025 15:34:50 GMT\nlength_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nlength_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nlength_1.response.headers.Access-Control-Allow-Origin: *\nlength_1.response.headers.Access-Control-Allow-Methods: POST, GET\nlength_1.response.headers.Access-Control-Max-Age: 3600\nlength_1.response.headers.Access-Control-Allow-Credentials: true\nlength_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nlength_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nlength_1.response.headers.vary: accept-encoding\nlength_1.response.headers.Content-Encoding: gzip\nlength_1.response.headers.Content-Type: application/json\nlength_1.response.headers.Keep-Alive: timeout=5, max=100\nlength_1.response.headers.Connection: Keep-Alive\nlength_1.response.headers.Transfer-Encoding: chunked\nlength_1.response.status_code: 200\nlengthDensity_1.request.headers.Content-Type: application/x-www-form-urlencoded\nlengthDensity_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nlengthDensity_1.request.body.filter: type:way and natural=*\nlengthDensity_1.request.body.format: json\nlengthDensity_1.request.body.showMetadata: false\nlengthDensity_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nlengthDensity_1.request.body.timeout: 30\nlengthDensity_1.response.body.attribution.url: https://ohsome.org/copyrights\nlengthDensity_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nlengthDensity_1.response.body.apiVersion: 1.10.4\nlengthDensity_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\nlengthDensity_1.response.body.result[0].value: 19.62\nlengthDensity_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\nlengthDensity_1.response.body.result[1].value: 19.62\nlengthDensity_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\nlengthDensity_1.response.body.result[2].value: 19.62\nlengthDensity_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\nlengthDensity_1.response.body.result[3].value: 42.64\nlengthDensity_1.response.headers.Date: Mon, 18 Aug 2025 15:34:52 GMT\nlengthDensity_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nlengthDensity_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nlengthDensity_1.response.headers.Access-Control-Allow-Origin: *\nlengthDensity_1.response.headers.Access-Control-Allow-Methods: POST, GET\nlengthDensity_1.response.headers.Access-Control-Max-Age: 3600\nlengthDensity_1.response.headers.Access-Control-Allow-Credentials: true\nlengthDensity_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nlengthDensity_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nlengthDensity_1.response.headers.vary: accept-encoding\nlengthDensity_1.response.headers.Content-Encoding: gzip\nlengthDensity_1.response.headers.Content-Type: application/json\nlengthDensity_1.response.headers.Keep-Alive: timeout=5, max=100\nlengthDensity_1.response.headers.Connection: Keep-Alive\nlengthDensity_1.response.headers.Transfer-Encoding: chunked\nlengthDensity_1.response.status_code: 200\nlengthDensityGroupByBoundary_1.request.headers.Content-Type: application/x-www-form-urlencoded\nlengthDensityGroupByBoundary_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nlengthDensityGroupByBoundary_1.request.body.filter: type:way and natural=*\nlengthDensityGroupByBoundary_1.request.body.format: geojson\nlengthDensityGroupByBoundary_1.request.body.showMetadata: true\nlengthDensityGroupByBoundary_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nlengthDensityGroupByBoundary_1.request.body.timeout: 30\nlengthDensityGroupByBoundary_1.response.body.attribution.url: https://ohsome.org/copyrights\nlengthDensityGroupByBoundary_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nlengthDensityGroupByBoundary_1.response.body.apiVersion: 1.10.4\nlengthDensityGroupByBoundary_1.response.body.metadata.executionTime: 508\nlengthDensityGroupByBoundary_1.response.body.metadata.description: Density of selected items (length of items in meters divided by the area in square kilometers).\nlengthDensityGroupByBoundary_1.response.body.type: FeatureCollection\nlengthDensityGroupByBoundary_1.response.body.features[0].type: Feature\nlengthDensityGroupByBoundary_1.response.body.features[0].properties.groupByBoundaryId: boundary1\nlengthDensityGroupByBoundary_1.response.body.features[0].properties.value: 19.62\nlengthDensityGroupByBoundary_1.response.body.features[0].properties.timestamp: 2014-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.type: Polygon\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][0][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][0][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][1][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][1][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][2][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][2][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][3][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][3][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][4][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[0].geometry.coordinates[0][4][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[0].id: boundary1@2014-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[1].type: Feature\nlengthDensityGroupByBoundary_1.response.body.features[1].properties.groupByBoundaryId: boundary1\nlengthDensityGroupByBoundary_1.response.body.features[1].properties.value: 19.62\nlengthDensityGroupByBoundary_1.response.body.features[1].properties.timestamp: 2015-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.type: Polygon\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][0][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][0][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][1][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][1][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][2][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][2][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][3][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][3][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][4][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[1].geometry.coordinates[0][4][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[1].id: boundary1@2015-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[2].type: Feature\nlengthDensityGroupByBoundary_1.response.body.features[2].properties.groupByBoundaryId: boundary1\nlengthDensityGroupByBoundary_1.response.body.features[2].properties.value: 19.62\nlengthDensityGroupByBoundary_1.response.body.features[2].properties.timestamp: 2016-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.type: Polygon\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][0][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][0][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][1][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][1][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][2][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][2][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][3][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][3][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][4][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[2].geometry.coordinates[0][4][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[2].id: boundary1@2016-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[3].type: Feature\nlengthDensityGroupByBoundary_1.response.body.features[3].properties.groupByBoundaryId: boundary1\nlengthDensityGroupByBoundary_1.response.body.features[3].properties.value: 42.64\nlengthDensityGroupByBoundary_1.response.body.features[3].properties.timestamp: 2017-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.type: Polygon\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][0][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][0][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][1][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][1][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][2][0]: 8.709999999999999\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][2][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][3][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][3][1]: 49.419999999999995\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][4][0]: 8.67\nlengthDensityGroupByBoundary_1.response.body.features[3].geometry.coordinates[0][4][1]: 49.39\nlengthDensityGroupByBoundary_1.response.body.features[3].id: boundary1@2017-01-01T00:00:00Z\nlengthDensityGroupByBoundary_1.response.headers.Date: Mon, 18 Aug 2025 15:34:55 GMT\nlengthDensityGroupByBoundary_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nlengthDensityGroupByBoundary_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nlengthDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Origin: *\nlengthDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Methods: POST, GET\nlengthDensityGroupByBoundary_1.response.headers.Access-Control-Max-Age: 3600\nlengthDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Credentials: true\nlengthDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nlengthDensityGroupByBoundary_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nlengthDensityGroupByBoundary_1.response.headers.vary: accept-encoding\nlengthDensityGroupByBoundary_1.response.headers.Content-Encoding: gzip\nlengthDensityGroupByBoundary_1.response.headers.Content-Type: application/json\nlengthDensityGroupByBoundary_1.response.headers.Keep-Alive: timeout=5, max=100\nlengthDensityGroupByBoundary_1.response.headers.Connection: Keep-Alive\nlengthDensityGroupByBoundary_1.response.headers.Transfer-Encoding: chunked\nlengthDensityGroupByBoundary_1.response.status_code: 200",
  "relevant_endpoints": [
    "#### area_1\n- Method: POST\n- Path: /elements/area\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### length_1\n- Method: POST\n- Path: /elements/length\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### lengthDensity_1\n- Method: POST\n- Path: /elements/length/density\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### lengthDensityGroupByBoundary_1\n- Method: POST\n- Path: /elements/length/density/groupBy/boundary\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "area_1",
      "request_id": "67ff10e9-2e14-4544-bbf1-a2377df09d37",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "area"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:17:37 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=100",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "metadata": {
            "executionTime": 510,
            "description": "Total area of items in square meters."
          },
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 41331.72
            },
            {
              "timestamp": "2015-01-01T00:00:00Z",
              "value": 40089.27
            },
            {
              "timestamp": "2016-01-01T00:00:00Z",
              "value": 41007.36
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 41027.95
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:1)"
          }
        }
      ]
    },
    {
      "request_name": "length_1",
      "request_id": "38cc1f74-a348-4f43-8c07-0e7a31bcaed5",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "length"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:17:37 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=99",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "metadata": {
            "executionTime": 512,
            "description": "Total length of items in meters."
          },
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 190.09
            },
            {
              "timestamp": "2015-01-01T00:00:00Z",
              "value": 190.09
            },
            {
              "timestamp": "2016-01-01T00:00:00Z",
              "value": 190.09
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 413.02
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:2)"
          }
        }
      ]
    },
    {
      "request_name": "lengthDensity_1",
      "request_id": "51656da9-dd27-4420-9933-86ab01751e42",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "length",
            "density"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:17:38 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=98",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "metadata": {
            "executionTime": 510,
            "description": "Density of selected items (length of items in meters divided by the area in square kilometers)."
          },
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 19.62
            },
            {
              "timestamp": "2015-01-01T00:00:00Z",
              "value": 19.62
            },
            {
              "timestamp": "2016-01-01T00:00:00Z",
              "value": 19.62
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 42.64
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:3)"
          }
        }
      ]
    },
    {
      "request_name": "lengthDensityGroupByBoundary_1",
      "request_id": "cfb02beb-6425-4930-973c-77a81975cbd0",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "length",
            "density",
            "groupBy",
            "boundary"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:17:38 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=97",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "metadata": {
            "executionTime": 511,
            "description": "Density of selected items (length of items in meters divided by the area in square kilometers)."
          },
          "type": "FeatureCollection",
          "features": [
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 19.62,
                "timestamp": "2014-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      8.67,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.39
                    ]
                  ]
                ]
              },
              "id": "boundary1@2014-01-01T00:00:00Z"
            },
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 19.62,
                "timestamp": "2015-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      8.67,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.39
                    ]
                  ]
                ]
              },
              "id": "boundary1@2015-01-01T00:00:00Z"
            },
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 19.62,
                "timestamp": "2016-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      8.67,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.39
                    ]
                  ]
                ]
              },
              "id": "boundary1@2016-01-01T00:00:00Z"
            },
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 42.64,
                "timestamp": "2017-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      8.67,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.39
                    ],
                    [
                      8.709999999999999,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.419999999999995
                    ],
                    [
                      8.67,
                      49.39
                    ]
                  ]
                ]
              },
              "id": "boundary1@2017-01-01T00:00:00Z"
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:4)"
          }
        }
      ]
    }
  ]
}