{
  "test_name": "invalidShowMetadataValue_ST",
  "description": "Set the `showMetadata` parameter to an invalid string value not allowed by the boolean string constraint, e.g., 'maybe'",
  "test_suite": "TestCountgroupbytype_1",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "countGroupByType_1"
  ],
  "values_to_create_a_successful_request": "countGroupByType_1.request.headers.Content-Type: application/x-www-form-urlencoded\ncountGroupByType_1.request.body.bboxes: 8.67,49.39,8.71,49.42\ncountGroupByType_1.request.body.filter: geometry:polygon and building=*\ncountGroupByType_1.request.body.format: json\ncountGroupByType_1.request.body.showMetadata: false\ncountGroupByType_1.request.body.time: 2014-01-01/2017-01-01/P1Y\ncountGroupByType_1.request.body.timeout: 30\ncountGroupByType_1.response.body.attribution.url: https://ohsome.org/copyrights\ncountGroupByType_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\ncountGroupByType_1.response.body.apiVersion: 1.10.4\ncountGroupByType_1.response.body.groupByResult[0].groupByObject: node\ncountGroupByType_1.response.body.groupByResult[0].result[0].timestamp: 2014-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[0].result[0].value: 0.0\ncountGroupByType_1.response.body.groupByResult[0].result[1].timestamp: 2015-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[0].result[1].value: 0.0\ncountGroupByType_1.response.body.groupByResult[0].result[2].timestamp: 2016-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[0].result[2].value: 0.0\ncountGroupByType_1.response.body.groupByResult[0].result[3].timestamp: 2017-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[0].result[3].value: 0.0\ncountGroupByType_1.response.body.groupByResult[1].groupByObject: way\ncountGroupByType_1.response.body.groupByResult[1].result[0].timestamp: 2014-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[1].result[0].value: 4689.0\ncountGroupByType_1.response.body.groupByResult[1].result[1].timestamp: 2015-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[1].result[1].value: 5450.0\ncountGroupByType_1.response.body.groupByResult[1].result[2].timestamp: 2016-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[1].result[2].value: 5608.0\ncountGroupByType_1.response.body.groupByResult[1].result[3].timestamp: 2017-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[1].result[3].value: 5978.0\ncountGroupByType_1.response.body.groupByResult[2].groupByObject: relation\ncountGroupByType_1.response.body.groupByResult[2].result[0].timestamp: 2014-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[2].result[0].value: 19.0\ncountGroupByType_1.response.body.groupByResult[2].result[1].timestamp: 2015-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[2].result[1].value: 25.0\ncountGroupByType_1.response.body.groupByResult[2].result[2].timestamp: 2016-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[2].result[2].value: 35.0\ncountGroupByType_1.response.body.groupByResult[2].result[3].timestamp: 2017-01-01T00:00:00Z\ncountGroupByType_1.response.body.groupByResult[2].result[3].value: 37.0\ncountGroupByType_1.response.headers.Date: Mon, 18 Aug 2025 15:27:10 GMT\ncountGroupByType_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\ncountGroupByType_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\ncountGroupByType_1.response.headers.Access-Control-Allow-Origin: *\ncountGroupByType_1.response.headers.Access-Control-Allow-Methods: POST, GET\ncountGroupByType_1.response.headers.Access-Control-Max-Age: 3600\ncountGroupByType_1.response.headers.Access-Control-Allow-Credentials: true\ncountGroupByType_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\ncountGroupByType_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\ncountGroupByType_1.response.headers.vary: accept-encoding\ncountGroupByType_1.response.headers.Content-Encoding: gzip\ncountGroupByType_1.response.headers.Content-Type: application/json\ncountGroupByType_1.response.headers.Keep-Alive: timeout=5, max=100\ncountGroupByType_1.response.headers.Connection: Keep-Alive\ncountGroupByType_1.response.headers.Transfer-Encoding: chunked\ncountGroupByType_1.response.status_code: 200",
  "relevant_endpoints": [
    "#### countGroupByType_1\n- Method: POST\n- Path: /elements/count/groupBy/type\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'geometry:polygon and building=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": true,
  "test_results": [
    {
      "request_name": "countGroupByType_1",
      "request_id": "633fbe8f-836a-467a-acf1-0acd8fb6b9a1",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "count",
            "groupBy",
            "type"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 21:35:58 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T21:35:58.021931402",
          "status": 400,
          "message": "The given parameter showMetadata can only contain the values 'true', 'yes', 'false', or 'no'.",
          "requestUrl": "https://api.ohsome.org/v1/elements/count/groupBy/type"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    }
  ]
}