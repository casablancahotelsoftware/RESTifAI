{
  "test_name": "invalidBboxesFormat_ST",
  "description": "Set the `bboxes` parameter to a string that does not match the required coordinate format, e.g., `bboxes` = 'invalid_coordinates'",
  "test_suite": "TestPerimeterdensitygroupbyboundarygroupbytag_1",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "area_1",
    "contributionsCount_1",
    "perimeter_1",
    "perimeterDensity_1",
    "perimeterDensityGroupByBoundary_1",
    "perimeterDensityGroupByBoundaryGroupByTag_1"
  ],
  "values_to_create_a_successful_request": "area_1.request.headers.Content-Type: application/x-www-form-urlencoded\narea_1.request.body.bboxes: 8.67,49.39,8.71,49.42\narea_1.request.body.filter: type:way and natural=*\narea_1.request.body.format: json\narea_1.request.body.showMetadata: false\narea_1.request.body.time: 2014-01-01/2017-01-01/P1Y\narea_1.request.body.timeout: 30\narea_1.response.body.attribution.url: https://ohsome.org/copyrights\narea_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\narea_1.response.body.apiVersion: 1.10.4\narea_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\narea_1.response.body.result[0].value: 41331.72\narea_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\narea_1.response.body.result[1].value: 40089.27\narea_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\narea_1.response.body.result[2].value: 41007.36\narea_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\narea_1.response.body.result[3].value: 41027.95\narea_1.response.headers.Date: Mon, 18 Aug 2025 15:55:57 GMT\narea_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\narea_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\narea_1.response.headers.Access-Control-Allow-Origin: *\narea_1.response.headers.Access-Control-Allow-Methods: POST, GET\narea_1.response.headers.Access-Control-Max-Age: 3600\narea_1.response.headers.Access-Control-Allow-Credentials: true\narea_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\narea_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\narea_1.response.headers.vary: accept-encoding\narea_1.response.headers.Content-Encoding: gzip\narea_1.response.headers.Content-Type: application/json\narea_1.response.headers.Keep-Alive: timeout=5, max=100\narea_1.response.headers.Connection: Keep-Alive\narea_1.response.headers.Transfer-Encoding: chunked\narea_1.response.status_code: 200\ncontributionsCount_1.request.headers.Content-Type: application/x-www-form-urlencoded\ncontributionsCount_1.request.body.bboxes: 8.67,49.39,8.71,49.42\ncontributionsCount_1.request.body.filter: type:way and natural=*\ncontributionsCount_1.request.body.format: json\ncontributionsCount_1.request.body.showMetadata: false\ncontributionsCount_1.request.body.time: 2014-01-01/2017-01-01/P1Y\ncontributionsCount_1.request.body.timeout: 30\ncontributionsCount_1.request.body.contributionType: creation,deletion,tagChange,geometryChange\ncontributionsCount_1.response.body.attribution.url: https://ohsome.org/copyrights\ncontributionsCount_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\ncontributionsCount_1.response.body.apiVersion: 1.10.4\ncontributionsCount_1.response.body.result[0].fromTimestamp: 2014-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[0].toTimestamp: 2015-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[0].value: 15.0\ncontributionsCount_1.response.body.result[1].fromTimestamp: 2015-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[1].toTimestamp: 2016-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[1].value: 7.0\ncontributionsCount_1.response.body.result[2].fromTimestamp: 2016-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[2].toTimestamp: 2017-01-01T00:00:00Z\ncontributionsCount_1.response.body.result[2].value: 8.0\ncontributionsCount_1.response.headers.Date: Mon, 18 Aug 2025 15:55:59 GMT\ncontributionsCount_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\ncontributionsCount_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\ncontributionsCount_1.response.headers.Access-Control-Allow-Origin: *\ncontributionsCount_1.response.headers.Access-Control-Allow-Methods: POST, GET\ncontributionsCount_1.response.headers.Access-Control-Max-Age: 3600\ncontributionsCount_1.response.headers.Access-Control-Allow-Credentials: true\ncontributionsCount_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\ncontributionsCount_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\ncontributionsCount_1.response.headers.vary: accept-encoding\ncontributionsCount_1.response.headers.Content-Encoding: gzip\ncontributionsCount_1.response.headers.Content-Type: application/json\ncontributionsCount_1.response.headers.Keep-Alive: timeout=5, max=100\ncontributionsCount_1.response.headers.Connection: Keep-Alive\ncontributionsCount_1.response.headers.Transfer-Encoding: chunked\ncontributionsCount_1.response.status_code: 200\nperimeter_1.request.headers.Content-Type: application/x-www-form-urlencoded\nperimeter_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nperimeter_1.request.body.filter: type:way and natural=*\nperimeter_1.request.body.format: json\nperimeter_1.request.body.showMetadata: false\nperimeter_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nperimeter_1.request.body.timeout: 30\nperimeter_1.response.body.attribution.url: https://ohsome.org/copyrights\nperimeter_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeter_1.response.body.apiVersion: 1.10.4\nperimeter_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\nperimeter_1.response.body.result[0].value: 8723.64\nperimeter_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\nperimeter_1.response.body.result[1].value: 8559.64\nperimeter_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\nperimeter_1.response.body.result[2].value: 8697.61\nperimeter_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\nperimeter_1.response.body.result[3].value: 8694.75\nperimeter_1.response.headers.Date: Mon, 18 Aug 2025 15:56:01 GMT\nperimeter_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeter_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeter_1.response.headers.Access-Control-Allow-Origin: *\nperimeter_1.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeter_1.response.headers.Access-Control-Max-Age: 3600\nperimeter_1.response.headers.Access-Control-Allow-Credentials: true\nperimeter_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeter_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeter_1.response.headers.vary: accept-encoding\nperimeter_1.response.headers.Content-Encoding: gzip\nperimeter_1.response.headers.Content-Type: application/json\nperimeter_1.response.headers.Keep-Alive: timeout=5, max=100\nperimeter_1.response.headers.Connection: Keep-Alive\nperimeter_1.response.headers.Transfer-Encoding: chunked\nperimeter_1.response.status_code: 200\nperimeterDensity_1.request.headers.Content-Type: application/x-www-form-urlencoded\nperimeterDensity_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nperimeterDensity_1.request.body.filter: type:way and natural=*\nperimeterDensity_1.request.body.format: json\nperimeterDensity_1.request.body.showMetadata: false\nperimeterDensity_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nperimeterDensity_1.request.body.timeout: 30\nperimeterDensity_1.response.body.attribution.url: https://ohsome.org/copyrights\nperimeterDensity_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeterDensity_1.response.body.apiVersion: 1.10.4\nperimeterDensity_1.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\nperimeterDensity_1.response.body.result[0].value: 900.63\nperimeterDensity_1.response.body.result[1].timestamp: 2015-01-01T00:00:00Z\nperimeterDensity_1.response.body.result[1].value: 883.69\nperimeterDensity_1.response.body.result[2].timestamp: 2016-01-01T00:00:00Z\nperimeterDensity_1.response.body.result[2].value: 897.94\nperimeterDensity_1.response.body.result[3].timestamp: 2017-01-01T00:00:00Z\nperimeterDensity_1.response.body.result[3].value: 897.64\nperimeterDensity_1.response.headers.Date: Mon, 18 Aug 2025 15:56:03 GMT\nperimeterDensity_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeterDensity_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeterDensity_1.response.headers.Access-Control-Allow-Origin: *\nperimeterDensity_1.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeterDensity_1.response.headers.Access-Control-Max-Age: 3600\nperimeterDensity_1.response.headers.Access-Control-Allow-Credentials: true\nperimeterDensity_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeterDensity_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeterDensity_1.response.headers.vary: accept-encoding\nperimeterDensity_1.response.headers.Content-Encoding: gzip\nperimeterDensity_1.response.headers.Content-Type: application/json\nperimeterDensity_1.response.headers.Keep-Alive: timeout=5, max=100\nperimeterDensity_1.response.headers.Connection: Keep-Alive\nperimeterDensity_1.response.headers.Transfer-Encoding: chunked\nperimeterDensity_1.response.status_code: 200\nperimeterDensityGroupByBoundary_1.request.headers.Content-Type: application/x-www-form-urlencoded\nperimeterDensityGroupByBoundary_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nperimeterDensityGroupByBoundary_1.request.body.filter: type:way and natural=*\nperimeterDensityGroupByBoundary_1.request.body.format: json\nperimeterDensityGroupByBoundary_1.request.body.showMetadata: false\nperimeterDensityGroupByBoundary_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nperimeterDensityGroupByBoundary_1.request.body.timeout: 30\nperimeterDensityGroupByBoundary_1.response.body.attribution.url: https://ohsome.org/copyrights\nperimeterDensityGroupByBoundary_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeterDensityGroupByBoundary_1.response.body.apiVersion: 1.10.4\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].groupByObject: boundary1\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[0].timestamp: 2014-01-01T00:00:00Z\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[0].value: 900.63\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[1].timestamp: 2015-01-01T00:00:00Z\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[1].value: 883.69\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[2].timestamp: 2016-01-01T00:00:00Z\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[2].value: 897.94\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[3].timestamp: 2017-01-01T00:00:00Z\nperimeterDensityGroupByBoundary_1.response.body.groupByResult[0].result[3].value: 897.64\nperimeterDensityGroupByBoundary_1.response.headers.Date: Mon, 18 Aug 2025 15:56:06 GMT\nperimeterDensityGroupByBoundary_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeterDensityGroupByBoundary_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeterDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Origin: *\nperimeterDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeterDensityGroupByBoundary_1.response.headers.Access-Control-Max-Age: 3600\nperimeterDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Credentials: true\nperimeterDensityGroupByBoundary_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeterDensityGroupByBoundary_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeterDensityGroupByBoundary_1.response.headers.vary: accept-encoding\nperimeterDensityGroupByBoundary_1.response.headers.Content-Encoding: gzip\nperimeterDensityGroupByBoundary_1.response.headers.Content-Type: application/json\nperimeterDensityGroupByBoundary_1.response.headers.Keep-Alive: timeout=5, max=100\nperimeterDensityGroupByBoundary_1.response.headers.Connection: Keep-Alive\nperimeterDensityGroupByBoundary_1.response.headers.Transfer-Encoding: chunked\nperimeterDensityGroupByBoundary_1.response.status_code: 200\nperimeterDensityGroupByBoundaryGroupByTag_1.request.headers.Content-Type: application/x-www-form-urlencoded\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.bboxes: 8.67,49.39,8.71,49.42\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.filter: type:way and natural=*\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.format: json\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.groupByKey: building\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.groupByValues: residential,commercial\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.showMetadata: false\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.time: 2014-01-01/2017-01-01/P1Y\nperimeterDensityGroupByBoundaryGroupByTag_1.request.body.timeout: 30\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.attribution.url: https://ohsome.org/copyrights\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.apiVersion: 1.10.4\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].groupByObject[0]: boundary1\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].groupByObject[1]: remainder\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[0].timestamp: 2014-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[0].value: 900.63\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[1].timestamp: 2015-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[1].value: 883.69\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[2].timestamp: 2016-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[2].value: 897.94\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[3].timestamp: 2017-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[0].result[3].value: 897.64\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].groupByObject[0]: boundary1\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].groupByObject[1]: building=residential\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[0].timestamp: 2014-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[0].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[1].timestamp: 2015-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[1].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[2].timestamp: 2016-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[2].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[3].timestamp: 2017-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[1].result[3].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].groupByObject[0]: boundary1\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].groupByObject[1]: building=commercial\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[0].timestamp: 2014-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[0].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[1].timestamp: 2015-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[1].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[2].timestamp: 2016-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[2].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[3].timestamp: 2017-01-01T00:00:00Z\nperimeterDensityGroupByBoundaryGroupByTag_1.response.body.groupByResult[2].result[3].value: 0.0\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Date: Mon, 18 Aug 2025 15:56:08 GMT\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Access-Control-Allow-Origin: *\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Access-Control-Allow-Methods: POST, GET\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Access-Control-Max-Age: 3600\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Access-Control-Allow-Credentials: true\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.vary: accept-encoding\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Content-Encoding: gzip\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Content-Type: application/json\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Keep-Alive: timeout=5, max=100\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Connection: Keep-Alive\nperimeterDensityGroupByBoundaryGroupByTag_1.response.headers.Transfer-Encoding: chunked\nperimeterDensityGroupByBoundaryGroupByTag_1.response.status_code: 200",
  "relevant_endpoints": [
    "#### contributionsCount_1\n- Method: POST\n- Path: /contributions/count\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'contributionType': {'type': 'string', 'description': \"Filter contributions by contribution type: 'creation', 'deletion', 'tagChange', 'geometryChange' or a combination of them; no default value\"}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### area_1\n- Method: POST\n- Path: /elements/area\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeter_1\n- Method: POST\n- Path: /elements/perimeter\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeterDensity_1\n- Method: POST\n- Path: /elements/perimeter/density\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeterDensityGroupByBoundary_1\n- Method: POST\n- Path: /elements/perimeter/density/groupBy/boundary\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### perimeterDensityGroupByBoundaryGroupByTag_1\n- Method: POST\n- Path: /elements/perimeter/density/groupBy/boundary/groupBy/tag\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'required': ['groupByKey'], 'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'groupByKey': {'type': 'string', 'description': \"OSM key e.g.: 'highway', 'building'; no default value (one groupByKey parameter must be defined)\", 'default': 'building'}, 'groupByValues': {'type': 'string', 'description': \"OSM value(s) e.g.: 'primary', 'residential'; default: no value\"}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": true,
  "test_results": [
    {
      "request_name": "area_1",
      "request_id": "f5278c51-4055-48b6-8790-da8c19ad317f",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "area"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:50 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-19T00:05:50.261096051",
          "status": 400,
          "message": "Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon.",
          "requestUrl": "https://api.ohsome.org/v1/elements/area"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "contributionsCount_1",
      "request_id": "141eeccb-b50c-4e03-802f-2739bc4aefd5",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "contributions",
            "count"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:50 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=100",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "result": [
            {
              "fromTimestamp": "2014-01-01T00:00:00Z",
              "toTimestamp": "2015-01-01T00:00:00Z",
              "value": 15.0
            },
            {
              "fromTimestamp": "2015-01-01T00:00:00Z",
              "toTimestamp": "2016-01-01T00:00:00Z",
              "value": 7.0
            },
            {
              "fromTimestamp": "2016-01-01T00:00:00Z",
              "toTimestamp": "2017-01-01T00:00:00Z",
              "value": 8.0
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeter_1",
      "request_id": "880ab221-7f1c-4ea0-b97e-002878839702",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "perimeter"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:51 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=99",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 8723.64
            },
            {
              "timestamp": "2015-01-01T00:00:00Z",
              "value": 8559.64
            },
            {
              "timestamp": "2016-01-01T00:00:00Z",
              "value": 8697.61
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 8694.75
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeterDensity_1",
      "request_id": "8aabade3-100a-44b8-98f2-788b6c3fd19f",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "perimeter",
            "density"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:51 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=98",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 900.63
            },
            {
              "timestamp": "2015-01-01T00:00:00Z",
              "value": 883.69
            },
            {
              "timestamp": "2016-01-01T00:00:00Z",
              "value": 897.94
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 897.64
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeterDensityGroupByBoundary_1",
      "request_id": "3e739896-263a-4b96-9398-ae43d3fd870e",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "perimeter",
            "density",
            "groupBy",
            "boundary"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:52 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=97",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "groupByResult": [
            {
              "groupByObject": "boundary1",
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 900.63
                },
                {
                  "timestamp": "2015-01-01T00:00:00Z",
                  "value": 883.69
                },
                {
                  "timestamp": "2016-01-01T00:00:00Z",
                  "value": 897.94
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 897.64
                }
              ]
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "perimeterDensityGroupByBoundaryGroupByTag_1",
      "request_id": "c50b1e16-d867-4e18-91a5-636e87c7be79",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "perimeter",
            "density",
            "groupBy",
            "boundary",
            "groupBy",
            "tag"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Tue, 19 Aug 2025 00:05:52 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=96",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "groupByResult": [
            {
              "groupByObject": [
                "boundary1",
                "remainder"
              ],
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 900.63
                },
                {
                  "timestamp": "2015-01-01T00:00:00Z",
                  "value": 883.69
                },
                {
                  "timestamp": "2016-01-01T00:00:00Z",
                  "value": 897.94
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 897.64
                }
              ]
            },
            {
              "groupByObject": [
                "boundary1",
                "building=residential"
              ],
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2015-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2016-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 0.0
                }
              ]
            },
            {
              "groupByObject": [
                "boundary1",
                "building=commercial"
              ],
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2015-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2016-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 0.0
                }
              ]
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    }
  ]
}