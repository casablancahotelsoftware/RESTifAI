{
  "test_name": "invalidBboxesFormat_ST",
  "description": "Set the `bboxes` query parameter to a string with invalid coordinate format, e.g., bboxes='12.4923,41.8902,12.4964' (missing one coordinate).",
  "test_suite": "TestAreadensitygroupbytag",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "area",
    "areaDensity",
    "areaDensityGroupByTag"
  ],
  "values_to_create_a_successful_request": "area.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\narea.request.query_params.filter: type:way and natural=*\narea.request.query_params.format: json\narea.request.query_params.showMetadata: false\narea.request.query_params.time: 2023-01-01T00:00:00Z/2023-12-31T23:59:59Z\narea.request.query_params.timeout: 30\narea.response.body.attribution.url: https://ohsome.org/copyrights\narea.response.body.attribution.text: \u00a9 OpenStreetMap contributors\narea.response.body.apiVersion: 1.10.4\narea.response.body.result[0].timestamp: 2023-01-01T00:00:00Z\narea.response.body.result[0].value: 47.89\narea.response.body.result[1].timestamp: 2023-12-31T23:59:59Z\narea.response.body.result[1].value: 47.89\narea.response.headers.Date: Mon, 18 Aug 2025 14:57:20 GMT\narea.response.headers.Server: Apache/2.4.58 (Ubuntu)\narea.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\narea.response.headers.Access-Control-Allow-Origin: *\narea.response.headers.Access-Control-Allow-Methods: POST, GET\narea.response.headers.Access-Control-Max-Age: 3600\narea.response.headers.Access-Control-Allow-Credentials: true\narea.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\narea.response.headers.Cache-Control: no-transform, public, max-age=31556926\narea.response.headers.vary: accept-encoding\narea.response.headers.Content-Encoding: gzip\narea.response.headers.Content-Type: application/json\narea.response.headers.Keep-Alive: timeout=5, max=100\narea.response.headers.Connection: Keep-Alive\narea.response.headers.Transfer-Encoding: chunked\narea.response.status_code: 200\nareaDensity.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\nareaDensity.request.query_params.filter: type:way and natural=*\nareaDensity.request.query_params.format: json\nareaDensity.request.query_params.showMetadata: false\nareaDensity.request.query_params.time: 2023-01-01T00:00:00Z/2023-12-31T23:59:59Z\nareaDensity.request.query_params.timeout: 30\nareaDensity.response.body.attribution.url: https://ohsome.org/copyrights\nareaDensity.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nareaDensity.response.body.apiVersion: 1.10.4\nareaDensity.response.body.result[0].timestamp: 2023-01-01T00:00:00Z\nareaDensity.response.body.result[0].value: 633.59\nareaDensity.response.body.result[1].timestamp: 2023-12-31T23:59:59Z\nareaDensity.response.body.result[1].value: 633.59\nareaDensity.response.headers.Date: Mon, 18 Aug 2025 14:57:22 GMT\nareaDensity.response.headers.Server: Apache/2.4.58 (Ubuntu)\nareaDensity.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nareaDensity.response.headers.Access-Control-Allow-Origin: *\nareaDensity.response.headers.Access-Control-Allow-Methods: POST, GET\nareaDensity.response.headers.Access-Control-Max-Age: 3600\nareaDensity.response.headers.Access-Control-Allow-Credentials: true\nareaDensity.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nareaDensity.response.headers.Cache-Control: no-transform, public, max-age=31556926\nareaDensity.response.headers.vary: accept-encoding\nareaDensity.response.headers.Content-Encoding: gzip\nareaDensity.response.headers.Content-Type: application/json\nareaDensity.response.headers.Keep-Alive: timeout=5, max=100\nareaDensity.response.headers.Connection: Keep-Alive\nareaDensity.response.headers.Transfer-Encoding: chunked\nareaDensity.response.status_code: 200\nareaDensityGroupByTag.request.query_params.bboxes: 12.4923,41.8902,12.4964,41.8922\nareaDensityGroupByTag.request.query_params.filter: type:way and natural=*\nareaDensityGroupByTag.request.query_params.format: json\nareaDensityGroupByTag.request.query_params.groupByKey: building\nareaDensityGroupByTag.request.query_params.groupByValues: residential,commercial\nareaDensityGroupByTag.request.query_params.showMetadata: false\nareaDensityGroupByTag.request.query_params.time: 2023-01-01T00:00:00Z/2023-12-31T23:59:59Z\nareaDensityGroupByTag.request.query_params.timeout: 30\nareaDensityGroupByTag.response.body.attribution.url: https://ohsome.org/copyrights\nareaDensityGroupByTag.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nareaDensityGroupByTag.response.body.apiVersion: 1.10.4\nareaDensityGroupByTag.response.body.groupByResult[0].groupByObject: remainder\nareaDensityGroupByTag.response.body.groupByResult[0].result[0].timestamp: 2023-01-01T00:00:00Z\nareaDensityGroupByTag.response.body.groupByResult[0].result[0].value: 633.59\nareaDensityGroupByTag.response.body.groupByResult[0].result[1].timestamp: 2023-12-31T23:59:59Z\nareaDensityGroupByTag.response.body.groupByResult[0].result[1].value: 633.59\nareaDensityGroupByTag.response.body.groupByResult[1].groupByObject: building=residential\nareaDensityGroupByTag.response.body.groupByResult[1].result[0].timestamp: 2023-01-01T00:00:00Z\nareaDensityGroupByTag.response.body.groupByResult[1].result[0].value: 0.0\nareaDensityGroupByTag.response.body.groupByResult[1].result[1].timestamp: 2023-12-31T23:59:59Z\nareaDensityGroupByTag.response.body.groupByResult[1].result[1].value: 0.0\nareaDensityGroupByTag.response.body.groupByResult[2].groupByObject: building=commercial\nareaDensityGroupByTag.response.body.groupByResult[2].result[0].timestamp: 2023-01-01T00:00:00Z\nareaDensityGroupByTag.response.body.groupByResult[2].result[0].value: 0.0\nareaDensityGroupByTag.response.body.groupByResult[2].result[1].timestamp: 2023-12-31T23:59:59Z\nareaDensityGroupByTag.response.body.groupByResult[2].result[1].value: 0.0\nareaDensityGroupByTag.response.headers.Date: Mon, 18 Aug 2025 14:57:25 GMT\nareaDensityGroupByTag.response.headers.Server: Apache/2.4.58 (Ubuntu)\nareaDensityGroupByTag.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nareaDensityGroupByTag.response.headers.Access-Control-Allow-Origin: *\nareaDensityGroupByTag.response.headers.Access-Control-Allow-Methods: POST, GET\nareaDensityGroupByTag.response.headers.Access-Control-Max-Age: 3600\nareaDensityGroupByTag.response.headers.Access-Control-Allow-Credentials: true\nareaDensityGroupByTag.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nareaDensityGroupByTag.response.headers.Cache-Control: no-transform, public, max-age=31556926\nareaDensityGroupByTag.response.headers.vary: accept-encoding\nareaDensityGroupByTag.response.headers.Content-Encoding: gzip\nareaDensityGroupByTag.response.headers.Content-Type: application/json\nareaDensityGroupByTag.response.headers.Keep-Alive: timeout=5, max=100\nareaDensityGroupByTag.response.headers.Connection: Keep-Alive\nareaDensityGroupByTag.response.headers.Transfer-Encoding: chunked\nareaDensityGroupByTag.response.status_code: 200",
  "relevant_endpoints": [
    "#### area\n- Method: GET\n- Path: /elements/area\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### areaDensity\n- Method: GET\n- Path: /elements/area/density\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### areaDensityGroupByTag\n- Method: GET\n- Path: /elements/area/density/groupBy/tag\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: groupByKey\n  - in: query\n  - required: True\n  - description: OSM key e.g.: 'highway', 'building'; no default value (one groupByKey parameter must be defined)\n  - type: string\n  - default: building\n  - name: groupByValues\n  - in: query\n  - required: False\n  - description: OSM value(s) e.g.: 'primary', 'residential'; default: no value\n  - type: string\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": true,
  "test_results": [
    {
      "request_name": "area",
      "request_id": "4e007a9c-e56c-49f4-b646-567a8d0ecb3b",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20natural%3D%2A"
            },
            {
              "key": "format",
              "value": "json"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2023-12-31T23:59:59Z"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 16:55:55 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-cache, no-store, must-revalidate",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Connection": "close",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "timestamp": "2025-08-18T16:55:55.98541611",
          "status": 400,
          "message": "Error in processing the boundary parameter. Please remember to follow the format, where you separate every coordinate with a comma, each boundary object with a pipe-sign and add optional custom ids to every first coordinate with a colon.",
          "requestUrl": "https://api.ohsome.org/v1/elements/area?bboxes=12.4923,41.8902,12.4964&filter=type%3Away%20and%20natural%3D%2A&format=json&showMetadata=false&time=2023-01-01T00:00:00Z/2023-12-31T23:59:59Z&timeout=30"
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "areaDensity",
      "request_id": "55296c09-360d-4971-b5fb-069bfb28a4db",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area",
            "density"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20natural%3D%2A"
            },
            {
              "key": "format",
              "value": "json"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2023-12-31T23:59:59Z"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 16:55:55 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=100",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "result": [
            {
              "timestamp": "2023-01-01T00:00:00Z",
              "value": 633.59
            },
            {
              "timestamp": "2023-12-31T23:59:59Z",
              "value": 633.59
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "areaDensityGroupByTag",
      "request_id": "2b4698ea-6af2-4954-9833-b66fe5fd16d0",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area",
            "density",
            "groupBy",
            "tag"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "12.4923,41.8902,12.4964,41.8922"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20natural%3D%2A"
            },
            {
              "key": "format",
              "value": "json"
            },
            {
              "key": "groupByKey",
              "value": "building"
            },
            {
              "key": "groupByValues",
              "value": "residential,commercial"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2023-01-01T00:00:00Z/2023-12-31T23:59:59Z"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 16:55:55 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=99",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "groupByResult": [
            {
              "groupByObject": "remainder",
              "result": [
                {
                  "timestamp": "2023-01-01T00:00:00Z",
                  "value": 633.59
                },
                {
                  "timestamp": "2023-12-31T23:59:59Z",
                  "value": 633.59
                }
              ]
            },
            {
              "groupByObject": "building=residential",
              "result": [
                {
                  "timestamp": "2023-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2023-12-31T23:59:59Z",
                  "value": 0.0
                }
              ]
            },
            {
              "groupByObject": "building=commercial",
              "result": [
                {
                  "timestamp": "2023-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2023-12-31T23:59:59Z",
                  "value": 0.0
                }
              ]
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    }
  ]
}