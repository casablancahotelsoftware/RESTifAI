{
  "test_name": "groupByKeyReservedOSMKey_FU",
  "description": "Set the `groupByKey` parameter to a reserved or system-reserved OSM key that cannot be grouped by, e.g., 'created_by', to test rejection of grouping by non-groupable keys.",
  "test_suite": "TestAreagroupbytag_1",
  "base_url": "https://api.ohsome.org/v1",
  "operations": [
    "area",
    "areaGroupByBoundary",
    "areaGroupByTag_1"
  ],
  "values_to_create_a_successful_request": "area.request.query_params.bboxes: 13.375,52.515,13.405,52.525\narea.request.query_params.filter: type:way and natural=*\narea.request.query_params.format: json\narea.request.query_params.showMetadata: false\narea.request.query_params.time: 2014-01-01/2017-01-01\narea.request.query_params.timeout: 30\narea.response.body.attribution.url: https://ohsome.org/copyrights\narea.response.body.attribution.text: \u00a9 OpenStreetMap contributors\narea.response.body.apiVersion: 1.10.4\narea.response.body.result[0].timestamp: 2014-01-01T00:00:00Z\narea.response.body.result[0].value: 152661.12\narea.response.body.result[1].timestamp: 2017-01-01T00:00:00Z\narea.response.body.result[1].value: 291.23\narea.response.headers.Date: Mon, 18 Aug 2025 15:06:15 GMT\narea.response.headers.Server: Apache/2.4.58 (Ubuntu)\narea.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\narea.response.headers.Access-Control-Allow-Origin: *\narea.response.headers.Access-Control-Allow-Methods: POST, GET\narea.response.headers.Access-Control-Max-Age: 3600\narea.response.headers.Access-Control-Allow-Credentials: true\narea.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\narea.response.headers.Cache-Control: no-transform, public, max-age=31556926\narea.response.headers.vary: accept-encoding\narea.response.headers.Content-Encoding: gzip\narea.response.headers.Content-Type: application/json\narea.response.headers.Keep-Alive: timeout=5, max=100\narea.response.headers.Connection: Keep-Alive\narea.response.headers.Transfer-Encoding: chunked\narea.response.status_code: 200\nareaGroupByBoundary.request.query_params.bboxes: 13.375,52.515,13.405,52.525\nareaGroupByBoundary.request.query_params.filter: type:way and natural=*\nareaGroupByBoundary.request.query_params.format: geojson\nareaGroupByBoundary.request.query_params.showMetadata: false\nareaGroupByBoundary.request.query_params.time: 2014-01-01/2017-01-01\nareaGroupByBoundary.request.query_params.timeout: 30\nareaGroupByBoundary.response.body.attribution.url: https://ohsome.org/copyrights\nareaGroupByBoundary.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nareaGroupByBoundary.response.body.apiVersion: 1.10.4\nareaGroupByBoundary.response.body.type: FeatureCollection\nareaGroupByBoundary.response.body.features[0].type: Feature\nareaGroupByBoundary.response.body.features[0].properties.groupByBoundaryId: boundary1\nareaGroupByBoundary.response.body.features[0].properties.value: 152661.12\nareaGroupByBoundary.response.body.features[0].properties.timestamp: 2014-01-01T00:00:00Z\nareaGroupByBoundary.response.body.features[0].geometry.type: Polygon\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][0]: 13.375\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][0][1]: 52.515\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][0]: 13.405\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][1][1]: 52.515\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][0]: 13.405\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][2][1]: 52.525\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][0]: 13.375\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][3][1]: 52.525\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][0]: 13.375\nareaGroupByBoundary.response.body.features[0].geometry.coordinates[0][4][1]: 52.515\nareaGroupByBoundary.response.body.features[0].id: boundary1@2014-01-01T00:00:00Z\nareaGroupByBoundary.response.body.features[1].type: Feature\nareaGroupByBoundary.response.body.features[1].properties.groupByBoundaryId: boundary1\nareaGroupByBoundary.response.body.features[1].properties.value: 291.23\nareaGroupByBoundary.response.body.features[1].properties.timestamp: 2017-01-01T00:00:00Z\nareaGroupByBoundary.response.body.features[1].geometry.type: Polygon\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][0]: 13.375\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][0][1]: 52.515\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][0]: 13.405\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][1][1]: 52.515\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][0]: 13.405\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][2][1]: 52.525\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][0]: 13.375\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][3][1]: 52.525\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][0]: 13.375\nareaGroupByBoundary.response.body.features[1].geometry.coordinates[0][4][1]: 52.515\nareaGroupByBoundary.response.body.features[1].id: boundary1@2017-01-01T00:00:00Z\nareaGroupByBoundary.response.headers.Date: Mon, 18 Aug 2025 15:06:17 GMT\nareaGroupByBoundary.response.headers.Server: Apache/2.4.58 (Ubuntu)\nareaGroupByBoundary.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nareaGroupByBoundary.response.headers.Access-Control-Allow-Origin: *\nareaGroupByBoundary.response.headers.Access-Control-Allow-Methods: POST, GET\nareaGroupByBoundary.response.headers.Access-Control-Max-Age: 3600\nareaGroupByBoundary.response.headers.Access-Control-Allow-Credentials: true\nareaGroupByBoundary.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nareaGroupByBoundary.response.headers.Cache-Control: no-transform, public, max-age=31556926\nareaGroupByBoundary.response.headers.vary: accept-encoding\nareaGroupByBoundary.response.headers.Content-Encoding: gzip\nareaGroupByBoundary.response.headers.Content-Type: application/json\nareaGroupByBoundary.response.headers.Keep-Alive: timeout=5, max=100\nareaGroupByBoundary.response.headers.Connection: Keep-Alive\nareaGroupByBoundary.response.headers.Transfer-Encoding: chunked\nareaGroupByBoundary.response.status_code: 200\nareaGroupByTag_1.request.headers.Content-Type: application/x-www-form-urlencoded\nareaGroupByTag_1.request.body.bboxes: 13.375,52.515,13.405,52.525\nareaGroupByTag_1.request.body.filter: type:way and natural=*\nareaGroupByTag_1.request.body.format: json\nareaGroupByTag_1.request.body.groupByKey: building\nareaGroupByTag_1.request.body.groupByValues: \nareaGroupByTag_1.request.body.showMetadata: false\nareaGroupByTag_1.request.body.time: 2014-01-01/2017-01-01\nareaGroupByTag_1.request.body.timeout: 30\nareaGroupByTag_1.response.body.attribution.url: https://ohsome.org/copyrights\nareaGroupByTag_1.response.body.attribution.text: \u00a9 OpenStreetMap contributors\nareaGroupByTag_1.response.body.apiVersion: 1.10.4\nareaGroupByTag_1.response.body.groupByResult[0].groupByObject: remainder\nareaGroupByTag_1.response.body.groupByResult[0].result[0].timestamp: 2014-01-01T00:00:00Z\nareaGroupByTag_1.response.body.groupByResult[0].result[0].value: 152661.12\nareaGroupByTag_1.response.body.groupByResult[0].result[1].timestamp: 2017-01-01T00:00:00Z\nareaGroupByTag_1.response.body.groupByResult[0].result[1].value: 291.23\nareaGroupByTag_1.response.body.groupByResult[1].groupByObject: building=\nareaGroupByTag_1.response.body.groupByResult[1].result[0].timestamp: 2014-01-01T00:00:00Z\nareaGroupByTag_1.response.body.groupByResult[1].result[0].value: 0.0\nareaGroupByTag_1.response.body.groupByResult[1].result[1].timestamp: 2017-01-01T00:00:00Z\nareaGroupByTag_1.response.body.groupByResult[1].result[1].value: 0.0\nareaGroupByTag_1.response.headers.Date: Mon, 18 Aug 2025 15:06:19 GMT\nareaGroupByTag_1.response.headers.Server: Apache/2.4.58 (Ubuntu)\nareaGroupByTag_1.response.headers.Strict-Transport-Security: max-age=63072000; includeSubdomains;\nareaGroupByTag_1.response.headers.Access-Control-Allow-Origin: *\nareaGroupByTag_1.response.headers.Access-Control-Allow-Methods: POST, GET\nareaGroupByTag_1.response.headers.Access-Control-Max-Age: 3600\nareaGroupByTag_1.response.headers.Access-Control-Allow-Credentials: true\nareaGroupByTag_1.response.headers.Access-Control-Allow-Headers: Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization\nareaGroupByTag_1.response.headers.Cache-Control: no-transform, public, max-age=31556926\nareaGroupByTag_1.response.headers.vary: accept-encoding\nareaGroupByTag_1.response.headers.Content-Encoding: gzip\nareaGroupByTag_1.response.headers.Content-Type: application/json\nareaGroupByTag_1.response.headers.Keep-Alive: timeout=5, max=100\nareaGroupByTag_1.response.headers.Connection: Keep-Alive\nareaGroupByTag_1.response.headers.Transfer-Encoding: chunked\nareaGroupByTag_1.response.status_code: 200",
  "relevant_endpoints": [
    "#### area\n- Method: GET\n- Path: /elements/area\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'DefaultAggregationResponse', 'required': ['apiVersion', 'attribution', 'features', 'result', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'result': {'type': 'array', 'description': 'ElementsResult holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### areaGroupByBoundary\n- Method: GET\n- Path: /elements/area/groupBy/boundary\n- Parameters:\n  - name: bboxes\n  - in: query\n  - required: False\n  - description: WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - default: 8.67,49.39,8.71,49.42\n  - name: bcircles\n  - in: query\n  - required: False\n  - description: WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: bpolys\n  - in: query\n  - required: False\n  - description: WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)\n  - type: string\n  - name: filter\n  - in: query\n  - required: False\n  - description: Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value\n  - type: string\n  - default: type:way and natural=*\n  - name: format\n  - in: query\n  - required: False\n  - description: Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json\n  - type: string\n  - default: json\n  - name: showMetadata\n  - in: query\n  - required: False\n  - description: Boolean operator 'true' or 'false'; default: 'false'\n  - type: string\n  - name: time\n  - in: query\n  - required: False\n  - description: ISO-8601 conform timestring(s); default: latest timestamp within dataset\n  - type: string\n  - default: 2014-01-01/2017-01-01/P1Y\n  - name: timeout\n  - in: query\n  - required: False\n  - description: Custom timeout in seconds; no default value\n  - type: string\n- Request Body Schema:\nNone\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n",
    "#### areaGroupByTag_1\n- Method: POST\n- Path: /elements/area/groupBy/tag\n- Parameters:\nNone\n- Request Body Schema:\n{'application/x-www-form-urlencoded': {'schema': {'required': ['groupByKey'], 'type': 'object', 'properties': {'bboxes': {'type': 'string', 'description': 'WGS84 coordinates in the following format: id1:lon1,lat1,lon2,lat2|id2:lon1,lat1,lon2,lat2|... OR lon1,lat1,lon2,lat2|lon1,lat1,lon2,lat2|...; no default value (one boundary parameter must be defined)', 'default': '8.67,49.39,8.71,49.42'}, 'bcircles': {'type': 'string', 'description': 'WGS84 coordinates + radius in meter in the following format: id1:lon,lat,r|id2:lon,lat,r|... OR lon,lat,r|lon,lat,r|...; no default value (one boundary parameter must be defined)'}, 'bpolys': {'type': 'string', 'description': 'WGS84 coordinates given as a list of coordinate pairs (as for bboxes) or GeoJSON FeatureCollection. The first point has to be the same as the last point and MultiPolygons are only supported in GeoJSON; no default value (one boundary parameter must be defined)'}, 'filter': {'type': 'string', 'description': 'Combines several attributive filters, e.g. OSM type, the geometry (simple feature) type, as well as the OSM tag; no default value', 'default': 'type:way and natural=*'}, 'format': {'type': 'string', 'description': 'Output format geojson (for /groupBy/boundary resources only), csv, or json; default: json', 'default': 'json'}, 'groupByKey': {'type': 'string', 'description': \"OSM key e.g.: 'highway', 'building'; no default value (one groupByKey parameter must be defined)\", 'default': 'building'}, 'groupByValues': {'type': 'string', 'description': \"OSM value(s) e.g.: 'primary', 'residential'; default: no value\"}, 'showMetadata': {'type': 'string', 'description': \"Boolean operator 'true' or 'false'; default: 'false'\"}, 'time': {'type': 'string', 'description': 'ISO-8601 conform timestring(s); default: latest timestamp within dataset', 'default': '2014-01-01/2017-01-01/P1Y'}, 'timeout': {'type': 'string', 'description': 'Custom timeout in seconds; no default value'}}}}}\n- Responses:\n{'200': {'description': 'OK', 'content': {'application/json': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}, 'text/csv': {'schema': {'title': 'GroupByResponse', 'required': ['apiVersion', 'attribution', 'features', 'groupByResult', 'type'], 'type': 'object', 'properties': {'apiVersion': {'type': 'string', 'description': 'Version of this api'}, 'attribution': {'title': 'Attribution', 'required': ['text', 'url'], 'type': 'object', 'properties': {'text': {'type': 'string', 'description': 'Copyright info about the used data'}, 'url': {'type': 'string', 'description': 'URL to the copyright and license info'}}}, 'features': {'type': 'array', 'description': 'GeoJSON Features', 'items': {'title': 'Feature', 'allOf': [{'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, {'title': 'Feature', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}, 'geometry': {'title': 'GeoJsonObject', 'type': 'object', 'properties': {'bbox': {'type': 'array', 'items': {'type': 'number', 'format': 'double'}}, 'crs': {'title': 'Crs', 'type': 'object', 'properties': {'properties': {'type': 'object', 'properties': {}}, 'type': {'type': 'string', 'enum': ['name', 'link']}}}}, 'discriminator': {'propertyName': 'type'}}, 'id': {'type': 'string'}, 'properties': {'type': 'object', 'properties': {}}}}]}}, 'groupByResult': {'type': 'array', 'description': 'GroupByResult array holding the respective objects with their timestamp-value pairs', 'items': {'title': 'GroupByResult', 'required': ['groupByObject', 'result'], 'type': 'object', 'properties': {'groupByObject': {'type': 'object', 'properties': {}, 'description': 'Object on which the results are grouped on'}, 'result': {'type': 'array', 'description': 'Result array holding timestamp-value pairs', 'items': {'title': 'Result', 'type': 'object', 'properties': {'value': {'type': 'number', 'format': 'double'}}}}}}}, 'metadata': {'title': 'Metadata', 'required': ['description', 'executionTime', 'requestUrl'], 'type': 'object', 'properties': {'description': {'type': 'string', 'description': 'Text describing the result in a sentence'}, 'executionTime': {'type': 'integer', 'description': 'Time the server needed to execute the request', 'format': 'int64'}, 'requestUrl': {'type': 'string', 'description': 'Request URL to which this whole output JSON was generated'}}}, 'type': {'type': 'string', 'description': 'Type of the GeoJSON'}}}}}}, '400': {'description': 'Bad request', 'content': {}}, '401': {'description': 'Unauthorized', 'content': {}}, '404': {'description': 'Not found', 'content': {}}, '405': {'description': 'Method not allowed', 'content': {}}, '413': {'description': 'Payload too large', 'content': {}}, '500': {'description': 'Internal server error', 'content': {}}, '501': {'description': 'Not implemented', 'content': {}}, '503': {'description': 'Service Unavailable', 'content': {}}}\n"
  ],
  "passed": false,
  "test_results": [
    {
      "request_name": "area",
      "request_id": "c3e1102d-f4bf-47ad-8110-e3a1f369fe23",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "13.375,52.515,13.405,52.525"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20natural%3D%2A"
            },
            {
              "key": "format",
              "value": "json"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2014-01-01/2017-01-01"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:04:48 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=100",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "result": [
            {
              "timestamp": "2014-01-01T00:00:00Z",
              "value": 152661.12
            },
            {
              "timestamp": "2017-01-01T00:00:00Z",
              "value": 291.23
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "areaGroupByBoundary",
      "request_id": "e3c44041-301a-4f54-8e0e-2324d625c3b5",
      "success": true,
      "is_server_error": false,
      "request_data": {
        "method": "GET",
        "url": {
          "path": [
            "elements",
            "area",
            "groupBy",
            "boundary"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [
            {
              "key": "bboxes",
              "value": "13.375,52.515,13.405,52.525"
            },
            {
              "key": "filter",
              "value": "type%3Away%20and%20natural%3D%2A"
            },
            {
              "key": "format",
              "value": "geojson"
            },
            {
              "key": "showMetadata",
              "value": "false"
            },
            {
              "key": "time",
              "value": "2014-01-01/2017-01-01"
            },
            {
              "key": "timeout",
              "value": "30"
            }
          ],
          "variable": []
        },
        "headers": [],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:04:48 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=99",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "type": "FeatureCollection",
          "features": [
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 152661.12,
                "timestamp": "2014-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      13.375,
                      52.515
                    ],
                    [
                      13.405,
                      52.515
                    ],
                    [
                      13.405,
                      52.525
                    ],
                    [
                      13.375,
                      52.525
                    ],
                    [
                      13.375,
                      52.515
                    ]
                  ]
                ]
              },
              "id": "boundary1@2014-01-01T00:00:00Z"
            },
            {
              "type": "Feature",
              "properties": {
                "groupByBoundaryId": "boundary1",
                "value": 291.23,
                "timestamp": "2017-01-01T00:00:00Z"
              },
              "geometry": {
                "type": "Polygon",
                "coordinates": [
                  [
                    [
                      13.375,
                      52.515
                    ],
                    [
                      13.405,
                      52.515
                    ],
                    [
                      13.405,
                      52.525
                    ],
                    [
                      13.375,
                      52.525
                    ],
                    [
                      13.375,
                      52.515
                    ]
                  ]
                ]
              },
              "id": "boundary1@2017-01-01T00:00:00Z"
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 2xx",
          "error": null
        }
      ]
    },
    {
      "request_name": "areaGroupByTag_1",
      "request_id": "3c0dbeb8-4aa1-4ff6-946f-c5eb2c2975b2",
      "success": false,
      "is_server_error": false,
      "request_data": {
        "method": "POST",
        "url": {
          "path": [
            "elements",
            "area",
            "groupBy",
            "tag"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "headers": [
          {
            "key": "Content-Type",
            "value": "application/x-www-form-urlencoded"
          }
        ],
        "body": ""
      },
      "response_data": {
        "headers": {
          "Date": "Mon, 18 Aug 2025 17:04:49 GMT",
          "Server": "Apache/2.4.58 (Ubuntu)",
          "Strict-Transport-Security": "max-age=63072000; includeSubdomains;",
          "Access-Control-Allow-Origin": "*",
          "Access-Control-Allow-Methods": "POST, GET",
          "Access-Control-Max-Age": "3600",
          "Access-Control-Allow-Credentials": "true",
          "Access-Control-Allow-Headers": "Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization",
          "Cache-Control": "no-transform, public, max-age=31556926",
          "vary": "accept-encoding",
          "Content-Encoding": "gzip",
          "Content-Type": "application/json",
          "Keep-Alive": "timeout=5, max=98",
          "Connection": "Keep-Alive",
          "Transfer-Encoding": "chunked"
        },
        "body": {
          "attribution": {
            "url": "https://ohsome.org/copyrights",
            "text": " OpenStreetMap contributors"
          },
          "apiVersion": "1.10.4",
          "groupByResult": [
            {
              "groupByObject": "remainder",
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 152661.12
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 291.23
                }
              ]
            },
            {
              "groupByObject": "created_by=",
              "result": [
                {
                  "timestamp": "2014-01-01T00:00:00Z",
                  "value": 0.0
                },
                {
                  "timestamp": "2017-01-01T00:00:00Z",
                  "value": 0.0
                }
              ]
            }
          ]
        }
      },
      "assertions": [
        {
          "assertion": "Response status code is 4xx",
          "error": {
            "name": "AssertionError",
            "index": 0,
            "test": "Response status code is 4xx",
            "message": "expected 200 to be within 400..499",
            "stack": "AssertionError: expected 200 to be within 400..499\n   at Object.eval sandbox-script.js:1:3)"
          }
        }
      ]
    }
  ]
}