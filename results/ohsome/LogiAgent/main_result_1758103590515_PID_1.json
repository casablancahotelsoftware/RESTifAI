{"all_cnt": 5, "all_request_sequence": [{"method": "GET", "api": "/elements/length/groupBy/key", "url": "https://api.ohsome.org/v1/elements/length/groupBy/key", "headers": {"Content-Type": "application/json"}, "params": {"key": "highway"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/length/groupBy/key' params={'key': 'highway'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T10:04:57.795963394\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/groupBy/key?key=highway\"}"}, {"method": "POST", "api": "/elements/length/groupBy/key", "url": "https://api.ohsome.org/v1/elements/length/groupBy/key", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"key": "highway"}, "payload_type": "application/x-www-form-urlencoded", "request_data": "method='POST' api='/elements/length/groupBy/key' params={} payload={'key': 'highway'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T10:05:12.255469289\",\"status\":400,\"message\":\"Unknown parameter 'key' for this resource. Did you mean 'keys' or 'groupByKeys'?\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/groupBy/key\"}"}, {"method": "POST", "api": "/elements/length/groupBy/key", "url": "https://api.ohsome.org/v1/elements/length/groupBy/key", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"keys": "highway"}, "payload_type": "application/x-www-form-urlencoded", "request_data": "method='POST' api='/elements/length/groupBy/key' params={} payload={'keys': 'highway'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T10:05:25.511088616\",\"status\":400,\"message\":\"You need to give one groupByKeys parameter, if you want to use groupBy/key.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/groupBy/key\"}"}, {"method": "POST", "api": "/elements/length/groupBy/key", "url": "https://api.ohsome.org/v1/elements/length/groupBy/key", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"groupByKeys": "highway"}, "payload_type": "application/x-www-form-urlencoded", "request_data": "method='POST' api='/elements/length/groupBy/key' params={} payload={'groupByKeys': 'highway'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T10:05:37.496305784\",\"status\":400,\"message\":\"You need to define one of the boundary parameters (bboxes, bcircles, bpolys).\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/groupBy/key\"}"}, {"method": "GET", "api": "/elements/length/groupBy/key", "url": "https://api.ohsome.org/v1/elements/length/groupBy/key", "headers": {"Content-Type": "application/json"}, "params": {"key": "nonexistentkey123"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/length/groupBy/key' params={'key': 'nonexistentkey123'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T10:06:26.712226493\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/groupBy/key?key=nonexistentkey123\"}"}], "right_results": [], "wrong_results": [{"request_info": "GET request to /elements/length/groupBy/key with query param key=highway", "oracle": "HTTP 200 OK with a JSON response containing multiple grouping entries where each group corresponds to a distinct value of the \"highway\" key (e.g., \"residential,\" \"primary,\" \"secondary\") along with the aggregated length data. The total length values should be numeric and consistent with OSM data constraints.", "judge_reason": "Response status 400 conflicts with expected 200. The API rejects the GET request for having an unsupported content-type, which is unexpected for a GET with query parameters. This is a significant deviation impacting functionality.", "response": "HTTP 400 with body indicating unsupported content-type header error"}, {"request_info": "POST request to /elements/length/groupBy/key with form data key=highway", "oracle": "HTTP 200 OK with a JSON response containing multiple grouping entries where each group corresponds to a distinct value of the \"highway\" key (e.g., \"residential,\" \"primary,\" \"secondary\") along with the aggregated length data. The total length values should be numeric and consistent with OSM data constraints.", "judge_reason": "Response 400 due to unknown parameter 'key'. This blocks fulfilling the test case expectation of valid grouping by 'highway'. The parameter name needs to be corrected to succeed.", "response": "HTTP 400 with message suggesting parameter names 'keys' or 'groupByKeys' instead of 'key'"}, {"request_info": "POST /elements/length/groupBy/key with form data keys=highway", "oracle": "HTTP 200 OK with a JSON response containing multiple grouping entries where each group corresponds to a distinct value of the \"highway\" key (e.g., \"residential,\" \"primary,\" \"secondary\") along with the aggregated length data. The total length values should be numeric and consistent with OSM data constraints.", "judge_reason": "The response indicates the required parameter should be 'groupByKeys', not 'keys' or 'key'. This parameter naming discrepancy causes request failure and blocks fulfilling the test case expectation.", "response": "HTTP 400 with message stating a 'groupByKeys' parameter is required"}, {"request_info": "POST /elements/length/groupBy/key with form data groupByKeys=highway (no boundary params)", "oracle": "HTTP 200 OK with a JSON response containing multiple grouping entries where each group corresponds to a distinct value of the \"highway\" key (e.g., \"residential,\" \"primary,\" \"secondary\") along with the aggregated length data. The total length values should be numeric and consistent with OSM data constraints.", "judge_reason": "The API requires boundary parameters (e.g., bboxes, bcircles, bpolys) that are omitted in the test request. This prevents successful response per the test scenario and points to incomplete test input specification.", "response": "HTTP 400 with message requiring boundary parameters"}], "test_scenario_response_message": "1. **Title:** Retrieve Length Grouped by Key for Valid Key\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=highway\n   - **Description:** This call requests the length of OSM elements grouped by the key \"highway,\" which is a commonly used tag in OSM data representing roads and paths.\n   - **Expected Response:** HTTP 200 OK with a JSON response containing multiple grouping entries where each group corresponds to a distinct value of the \"highway\" key (e.g., \"residential,\" \"primary,\" \"secondary\") along with the aggregated length data. The total length values should be numeric and consistent with OSM data constraints.\n\n2. **Title:** Retrieve Length Grouped by Key for Non-Existent Key\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=nonexistentkey123\n   - **Description:** This call attempts to retrieve length grouped by a key that does not exist in the OSM data.\n   - **Expected Response:** HTTP 200 OK with an empty array or an appropriate zero-length grouping response indicating no data exists for the provided key. The API should handle this gracefully without errors.\n\n3. **Title:** Retrieve Length Grouped by Key with URL Encoding Special Characters\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=addr%3Astreet\n   - **Description:** This tests retrieval where the key contains a colon (\":\") character, testing proper URL encoding and key parsing for tags such as \"addr:street.\"\n   - **Expected Response:** HTTP 200 OK with JSON showing length grouped by different street address tags. No errors should occur due to special character handling.\n\n4. **Title:** Consistency Check: Length Aggregation after Repeated Calls with Same Key\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=waterway (called twice consecutively)\n   - **Description:** Repeated requests with the same key to verify consistent aggregation results and ensure no state mutation or caching inconsistencies affect length data returned.\n   - **Expected Response:** Both calls return identical length values grouped by waterway types. There should be no divergence or unexpected differences between responses.\n\n5. **Title:** Inject Invalid Key Parameter (Empty String) to Validate Input Handling\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=\n   - **Description:** Request with an empty key parameter tests input validation robustness, ensuring the API rejects or handles invalid keys.\n   - **Expected Response:** Ideally, HTTP 400 Bad Request or HTTP 200 with empty results, accompanied by a clear error message or empty grouping. The API should not crash or return ambiguous errors.\n\n6. **Title:** Cross Key Consistency: Compare Length Grouped by \"railway\" and \"highway\"\n   - **API Endpoint:** GET /elements/length/groupBy/key?key=railway and then GET /elements/length/groupBy/key?key=highway\n   - **Description:** Sequential calls for different relevant transportation keys confirm that length aggregations differ logically and reflect the different data compositions behind these keys.\n   - **Expected Response:** Responses contain distinct grouped length values consistent with railway infrastructure versus road infrastructure. The aggregated lengths should not be identical, indicating correct key filtering.\n\n7. **Title:** Measure Impact of Concurrent Requests with Identical Keys\n   - **API Endpoint:** Concurrent GET /elements/length/groupBy/key?key=building (5 simultaneous requests)\n   - **Description:** Testing concurrency by firing multiple simultaneous identical requests to check for race conditions, performance degradation, or inconsistent results in the grouped length aggregation.\n   - **Expected Response:** All concurrent requests complete successfully with the same aggregated results. There should be no server errors or data inconsistency.\n\n8. **Title:** Boundary Influence via Implicit Dependent API Steps (Indirect Consistency)\n   - **API Endpoint:** (Hypothetically related, but only using GET /elements/length/groupBy/key) \u2014 Execute a manually pre-filtered request by limiting OSM data outside of real test system, then validate length grouped by key indirectly by logic.\n   - **Description:** While boundary filtering is not part of this API, testing with different keys representing elements commonly affected by boundaries (like waterways) may reveal inconsistencies if length sums are unexpectedly large or zero.\n   - **Expected Response:** Length data should align with spatial expectations based on real-world OSM datasets \u2014 e.g., waterways showing plausible totals in length.\n\n---\n\n**Summary:**  \nThis test scenario probes the GET /elements/length/groupBy/key endpoint through multiple meaningful interactions, including valid/invalid keys, special character handling, repeated calls to check consistency, concurrency stress, and cross-key comparison to detect data consistency or state management flaws. It checks robustness in input validation, concurrency handling, and the endpoint\u2019s ability to provide accurate, stable aggregate length data grouped by OSM keys.", "usage": {"total_tokens": 118704, "total_cost": 0.05313600000000001}, "unique_endpoints": {"200": [], "300": [], "400": ["GET /elements/length", "POST /elements/length"], "500": 0}, "total_true_result": 0, "total_false_result": 4}