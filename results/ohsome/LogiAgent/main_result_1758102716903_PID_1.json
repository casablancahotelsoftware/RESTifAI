{"all_cnt": 9, "all_request_sequence": [{"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {"tag": "highway"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'highway'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:50:33.24381862\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=highway\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {"tag": "highway"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'highway'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:50:43.229355562\",\"status\":400,\"message\":\"Unknown parameter 'tag' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=highway\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag/highway", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag/highway", "headers": {"Accept": "application/json", "Content-Type": "application/json"}, "params": {}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag/highway' params={} payload={}", "response_code": 404, "response_data": "{\"timestamp\":\"2025-09-17T09:50:52.299+00:00\",\"status\":404,\"error\":\"Not Found\",\"path\":\"/elements/perimeter/groupBy/tag/highway\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag/highway", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag/highway", "headers": {"Content-Type": "application/json"}, "params": {}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag/highway' params={} payload={}", "response_code": 404, "response_data": "{\"timestamp\":\"2025-09-17T09:51:00.251+00:00\",\"status\":404,\"error\":\"Not Found\",\"path\":\"/elements/perimeter/groupBy/tag/highway\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {"tag": "invalid_tag_123"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'invalid_tag_123'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:51:08.912189707\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=invalid_tag_123\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {"tag": "building"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'building'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:51:17.508804548\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=building\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {"tag": "building:yes"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'building:yes'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:51:17.580621378\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=building%3Ayes\"}"}, {"method": "GET", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {"tag": "landuse", "limit": "5"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/perimeter/groupBy/tag' params={'tag': 'landuse', 'limit': '5'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:51:32.311419532\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag?tag=landuse&limit=5\"}"}, {"method": "POST", "api": "/elements/perimeter/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/perimeter/groupBy/tag", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"tag": "highway"}, "payload_type": "application/x-www-form-urlencoded", "request_data": "method='POST' api='/elements/perimeter/groupBy/tag' params={} payload={'tag': 'highway'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:51:42.399609823\",\"status\":400,\"message\":\"Unknown parameter 'tag' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/perimeter/groupBy/tag\"}"}], "right_results": [], "wrong_results": [{"request_info": "GET /elements/perimeter/groupBy/tag?tag=highway", "oracle": "HTTP 200 OK with a JSON body containing perimeter summaries grouped by various highway tag values (e.g., \"residential\", \"primary\") with numerical perimeter values. The response should be well-structured, with no missing or null data fields.", "judge_reason": "The actual response returned a 400 Bad Request status with an error message about unsupported content-type header. This diverges significantly from the expected 200 OK success response for GET requests with query parameters. This prevents successful data retrieval and is a critical functional failure. The error message is explanatory but indicates a configuration or header issue that blocks proper API usage.", "response": "HTTP 400 with body indicating unsupported content-type header error"}, {"request_info": "GET /elements/perimeter/groupBy/tag?tag=highway with Content-Type: application/x-www-form-urlencoded", "oracle": "HTTP 200 OK with a JSON body containing perimeter summaries grouped by various highway tag values (e.g., \"residential\", \"primary\") with numerical perimeter values. The response should be well-structured, with no missing or null data fields.", "judge_reason": "The response returned HTTP 400 Bad Request status with a detailed message that the 'tag' parameter is unknown to the resource. This is a significant deviation from the expected 200 OK and data response. The API rejected the parameter entirely, resulting in failure to return any data as expected.", "response": "HTTP 400 with message 'Unknown parameter tag for this resource.'"}, {"request_info": "GET /elements/perimeter/groupBy/tag/highway with Accept: application/json", "oracle": "HTTP 200 OK with a JSON body containing perimeter summaries grouped by various highway tag values (e.g., \"residential\", \"primary\") with numerical perimeter values. The response should be well-structured, with no missing or null data fields.", "judge_reason": "The server returned 404 Not Found when attempting to access the endpoint including the tag in the path instead of as a query parameter. This is a significant divergence from the expected successful 200 OK response. The request URL is invalid, causing failure to retrieve any data.", "response": "HTTP 404 with Not Found error message."}, {"request_info": "GET /elements/perimeter/groupBy/tag/highway", "oracle": "HTTP 200 OK with a JSON body containing perimeter summaries grouped by various highway tag values (e.g., \"residential\", \"primary\") with numerical perimeter values. The response should be well-structured, with no missing or null data fields.", "judge_reason": "The repeated access to the endpoint with tag included in the path results in HTTP 404 Not Found. This is contrary to the expected 200 OK response and JSON data. The endpoint structure is not as anticipated, leading to the failure to retrieve data.", "response": "HTTP 404 with Not Found error message."}, {"request_info": "GET /elements/perimeter/groupBy/tag?tag=invalid_tag_123", "oracle": "HTTP 200 OK with an empty grouping result array or an explicit message indicating no data found. The API should not return an error status such as 400 or 500 for this scenario, but handle it gracefully.", "judge_reason": "The API returned HTTP 400 Bad Request with an error message about unsupported content-type header for a GET request with query parameters. This is a significant deviation from the expected 200 OK with empty data response. The request failed due to a header/content-type validation issue, preventing proper error handling for invalid tags.", "response": "HTTP 400 with unsupported content-type header error message"}, {"request_info": "GET /elements/perimeter/groupBy/tag?tag=building and GET /elements/perimeter/groupBy/tag?tag=building:yes", "oracle": "Both responses should be HTTP 200 OK. The first should show perimeter aggregated for all building-related elements, including various subtypes. The second should show perimeter only for elements explicitly tagged as \"building:yes\". Data values should logically correspond, with the subset being smaller or equal in total perimeter to the broad tag grouping.", "judge_reason": "Both requests returned HTTP 400 Bad Request due to unsupported content-type header, preventing successful retrieval of perimeter grouping data. This is a significant deviation from the expected 200 OK responses and blocks functional validation of hierarchical tag handling.", "response": "HTTP 400 responses with unsupported content-type header error messages for both requests."}, {"request_info": "GET /elements/perimeter/groupBy/tag?tag=building and GET /elements/perimeter/groupBy/tag?tag=building:yes", "oracle": "Both responses should be HTTP 200 OK. The first should show perimeter aggregated for all building-related elements, including various subtypes. The second should show perimeter only for elements explicitly tagged as \"building:yes\". Data values should logically correspond, with the subset being smaller or equal in total perimeter to the broad tag grouping.", "judge_reason": "Both requests returned HTTP 400 Bad Request due to unsupported content-type header, preventing successful retrieval of perimeter grouping data. This is a significant deviation from the expected 200 OK responses and blocks functional validation of hierarchical tag handling.", "response": "HTTP 400 responses with unsupported content-type header error messages for both requests."}, {"request_info": "GET /elements/perimeter/groupBy/tag?tag=landuse&limit=5", "oracle": "HTTP 200 OK with perimeter grouped results limited to 5 groups. The data must be correctly ordered or consistently selected subsets, ensuring no duplication or missing keys due to pagination logic.", "judge_reason": "The response returned HTTP 400 Bad Request with an unsupported content-type header error for a GET request using query parameters. This prevents successful retrieval and testing of pagination functionality, deviating significantly from the expected 200 OK success response.", "response": "HTTP 400 with unsupported content-type header error"}, {"request_info": "POST /elements/perimeter/groupBy/tag with body tag=highway", "oracle": "HTTP 405 Method Not Allowed with an error message specifying allowed methods (GET). The server should not process or accept the request body and maintain consistent response headers.", "judge_reason": "The response returned HTTP 400 Bad Request with 'Unknown parameter tag' message instead of the expected 405 Method Not Allowed. This suggests improper enforcement of method restrictions, leading to inadequate error handling for unsupported POST requests.", "response": "HTTP 400 Bad Request with unknown parameter 'tag' message"}], "test_scenario_response_message": "1. **Title:** Retrieve Perimeter Grouped by Tag with Valid Tag Filter\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=highway\n   - **Description:** Initiate a request to retrieve the perimeter of OSM elements grouped by the \"highway\" tag to verify correct grouping and aggregation of perimeter values based on the specified tag.\n   - **Expected Response:** HTTP 200 OK with a JSON body containing perimeter summaries grouped by various highway tag values (e.g., \"residential\", \"primary\") with numerical perimeter values. The response should be well-structured, with no missing or null data fields.\n\n2. **Title:** Fetch Perimeter Grouped by an Invalid Tag\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=invalid_tag_123\n   - **Description:** Request perimeter grouping using a deliberately invalid or nonexistent tag to evaluate how the API handles unknown tags and whether it returns empty groups or an error.\n   - **Expected Response:** HTTP 200 OK with an empty grouping result array or an explicit message indicating no data found. The API should not return an error status such as 400 or 500 for this scenario, but handle it gracefully.\n\n3. **Title:** Retrieve Perimeter Grouped by Multiple Tag Values via Repeated Calls and Compare Consistency\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=building, then GET /elements/perimeter/groupBy/tag?tag=building:yes\n   - **Description:** First request perimeter grouping by \"building\" tag to get a broad aggregation, then request perimeter grouping by a more specific tag variant \"building:yes\". This tests hierarchical tag handling and ensures the API differentiates between broad and specific tag queries properly.\n   - **Expected Response:** Both responses should be HTTP 200 OK. The first should show perimeter aggregated for all building-related elements, including various subtypes. The second should show perimeter only for elements explicitly tagged as \"building:yes\". Data values should logically correspond, with the subset being smaller or equal in total perimeter to the broad tag grouping.\n\n4. **Title:** Test Pagination and Limit Parameter on Perimeter GroupBy Tag Endpoint\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=landuse&limit=5\n   - **Description:** Request perimeter grouped by the \"landuse\" tag and limit the number of groups returned to 5 to verify correct implementation of pagination or limiting query parameters.\n   - **Expected Response:** HTTP 200 OK with perimeter grouped results limited to 5 groups. The data must be correctly ordered or consistently selected subsets, ensuring no duplication or missing keys due to pagination logic.\n\n5. **Title:** Attempt Unsupported HTTP Methods on the Endpoint to Verify Method Enforcement\n   - **API Endpoint:** POST /elements/perimeter/groupBy/tag\n   - **Description:** Attempt to use an unsupported HTTP method (POST) on the GET-only endpoint to verify that the server correctly rejects unsupported methods with proper status codes.\n   - **Expected Response:** HTTP 405 Method Not Allowed with an error message specifying allowed methods (GET). The server should not process or accept the request body and maintain consistent response headers.\n\n6. **Title:** Concurrent Requests to Retrieve Perimeter Grouped by Tag to Assess Concurrency Handling and Consistency\n   - **API Endpoint:** Concurrent GET /elements/perimeter/groupBy/tag?tag=natural executed 10 times simultaneously\n   - **Description:** Send multiple concurrent requests grouping by the \"natural\" tag to test the server\u2019s concurrency handling, caching behaviors, and to detect potential race conditions or inconsistent data across simultaneous calls.\n   - **Expected Response:** Each request receives HTTP 200 OK with consistent perimeter aggregation results across all concurrent responses. No request should timeout, fail, or return inconsistent data compared to others, ensuring thread safety and cache coherence.\n\n7. **Title:** Retrieve Perimeter Grouped by Tag with URL-Encoded Special Characters in Tag to Check Input Sanitization\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=addr%3Ahousenumber\n   - **Description:** Query the perimeter grouping by a tag containing special characters (colon \":\" encoded as %3A) like \"addr:housenumber\" to validate correct URL decoding, input sanitization and processing within the API.\n   - **Expected Response:** HTTP 200 OK with perimeter data grouped correctly under the \"addr:housenumber\" tag. The endpoint must handle the special character properly without error or misinterpretation.\n\n8. **Title:** Retrieve Perimeter Grouped by Tag with Non-ASCII Characters to Test Unicode Handling\n   - **API Endpoint:** GET /elements/perimeter/groupBy/tag?tag=name:ru\n   - **Description:** Request perimeter aggregation grouped by a tag that contains non-ASCII characters, specifically Cyrillic script (e.g., \"name:ru\"), to verify proper Unicode handling in parameters and responses.\n   - **Expected Response:** HTTP 200 OK with perimeter grouping based on \"name:ru\" tag groups if present. The response should correctly encode all character data without corruption or errors.\n\n**Summary:**  \nThis test scenario sequence exhaustively validates the GET /elements/perimeter/groupBy/tag endpoint across valid and invalid tag inputs, concurrency, unsupported methods, pagination, URL encoding, and Unicode handling. It focuses on uncovering defects related to parameter parsing, method enforcement, data consistency under concurrent load, input sanitization, and proper handling of complex and special tag formats, thereby ensuring robust, reliable, and correct perimeter aggregation grouping behavior by tag.", "usage": {"total_tokens": 263597, "total_cost": 0.11254760000000001}, "unique_endpoints": {"200": [], "300": [], "400": ["GET /elements/perimeter", "POST /elements/perimeter"], "500": 0}, "total_true_result": 0, "total_false_result": 9}