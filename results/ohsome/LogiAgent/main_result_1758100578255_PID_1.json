{"all_cnt": 4, "all_request_sequence": [{"method": "GET", "api": "/elements/length/ratio", "url": "https://api.ohsome.org/v1/elements/length/ratio", "headers": {"Content-Type": "application/json"}, "params": {"filter": "type=way and (highway=primary or highway=residential)", "filter2": "type=way and highway=primary"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/length/ratio' params={'filter': 'type=way and (highway=primary or highway=residential)', 'filter2': 'type=way and highway=primary'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:15:14.805687613\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"method": "GET", "api": "/elements/length/ratio", "url": "https://api.ohsome.org/v1/elements/length/ratio", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {"filter": "type=way and (highway=primary or highway=residential)", "filter2": "type=way and highway=primary"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/length/ratio' params={'filter': 'type=way and (highway=primary or highway=residential)', 'filter2': 'type=way and highway=primary'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:15:30.243019821\",\"status\":400,\"message\":\"You need to define one of the boundary parameters (bboxes, bcircles, bpolys).\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"method": "GET", "api": "/elements/length/ratio", "url": "https://api.ohsome.org/v1/elements/length/ratio", "headers": {"Content-Type": "application/json"}, "params": {"bboxes": "48.13,11.57,48.15,11.59", "filter": "type=way and (highway=primary or highway=residential)", "filter2": "type=way and highway=primary"}, "payload": {}, "payload_type": "application/json", "request_data": "method='GET' api='/elements/length/ratio' params={'bboxes': '48.13,11.57,48.15,11.59', 'filter': 'type=way and (highway=primary or highway=residential)', 'filter2': 'type=way and highway=primary'} payload={}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:15:43.216007595\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?bboxes=48.13%2C11.57%2C48.15%2C11.59&filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"method": "POST", "api": "/elements/length/ratio", "url": "https://api.ohsome.org/v1/elements/length/ratio", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"bboxes": "48.13,11.57,48.15,11.59", "filter": "type=way and (highway=primary or highway=residential)", "filter2": "type=way and highway=primary"}, "payload_type": "application/json", "request_data": "method='POST' api='/elements/length/ratio' params={} payload={'bboxes': '48.13,11.57,48.15,11.59', 'filter': 'type=way and (highway=primary or highway=residential)', 'filter2': 'type=way and highway=primary'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:15:58.927387956\",\"status\":400,\"message\":\"Unknown parameter '{\\\"bboxes\\\": \\\"48.13,11.57,48.15,11.59\\\", \\\"filter\\\": \\\"type' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio\"}"}], "right_results": [], "wrong_results": [{"request_info": "GET /elements/length/ratio with filters: filter='type=way and (highway=primary or highway=residential)', filter2='type=way and highway=primary'", "oracle": "HTTP 200 OK with JSON body containing a numeric ratio between 0 and 1. Proper error codes (4xx) for malformed or missing filter parameters.", "judge_reason": "The actual response returns a 400 Bad Request status code instead of 200 OK for a valid test case with properly specified filters. The error message indicates an unsupported content-type header was found, which is unexpected for a GET request with URL parameters. This prevents receiving the expected ratio numeric value and violates the documented normal successful behavior of the API. However, the API does provide a clear error message explaining the issue, which shows robustness in error handling but does not conform to the test scenario expectation.", "response": "Status Code: 400\nResponse Body: {\"timestamp\":\"2025-09-17T09:15:14.805687613\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"request_info": "GET /elements/length/ratio with filters: filter='type=way and (highway=primary or highway=residential)', filter2='type=way and highway=primary', no boundary parameter", "oracle": "HTTP 200 OK with JSON body containing a numeric ratio between 0 and 1. Proper error codes (4xx) for malformed or missing filter parameters.", "judge_reason": "The response returns a 400 Bad Request status with an explicit message that boundary parameters (bboxes, bcircles, bpolys) must be defined. This is a mandatory requirement to get a valid ratio response, which was not included in the test request. While this explains the invalid request, it contradicts the test expectation that filters alone suffice, indicating a documentation or scenario gap. Nevertheless, the error handling is precise and clear but does not align with the expected successful response.", "response": "Status Code: 400\nResponse Body: {\"timestamp\":\"2025-09-17T09:15:30.243019821\",\"status\":400,\"message\":\"You need to define one of the boundary parameters (bboxes, bcircles, bpolys).\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"request_info": "GET /elements/length/ratio with bboxes=48.13,11.57,48.15,11.59 and filters filter='type=way and (highway=primary or highway=residential)', filter2='type=way and highway=primary'", "oracle": "HTTP 200 OK with JSON body containing a numeric ratio between 0 and 1. Proper error codes (4xx) for malformed or missing filter parameters.", "judge_reason": "The API again returns a 400 Bad Request error for 'Unsupported content-type header' despite inclusion of valid boundary and filter parameters. This response indicates a requirement for a content-type header not typical for GET requests and not documented in the scenario or API docs. This prevents achieving the expected 200 OK response with valid ratio data, breaking the primary functional expectation.", "response": "Status Code: 400\nResponse Body: {\"timestamp\":\"2025-09-17T09:15:43.216007595\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio?bboxes=48.13%2C11.57%2C48.15%2C11.59&filter=type%3Dway+and+%28highway%3Dprimary+or+highway%3Dresidential%29&filter2=type%3Dway+and+highway%3Dprimary\"}"}, {"request_info": "POST /elements/length/ratio with form-urlencoded payload bboxes, filter, filter2", "oracle": "HTTP 200 OK with JSON body containing a numeric ratio between 0 and 1. Proper error codes (4xx) for malformed or missing filter parameters.", "judge_reason": "The API returned a 400 Bad Request error with a message about unknown parameter format when sending a POST request with form data. This indicates the server does not accept parameters in the request body in the given format and possibly expects GET with URL params instead. This inconsistency impedes achieving the expected successful 200 response with ratio data, deviating from the documented expected behavior.", "response": "Status Code: 400\nResponse Body: {\"timestamp\":\"2025-09-17T09:15:58.927387956\",\"status\":400,\"message\":\"Unknown parameter '{\\\"bboxes\\\": \\\"48.13,11.57,48.15,11.59\\\", \\\"filter\\\": \\\"type' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/length/ratio\"}"}], "test_scenario_response_message": "1. **Title:** Verify Length Ratio Calculation and Filter Dependency Consistency  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Initiate a request with a complex spatial filter (filter1) selecting a set of OSM elements and a secondary filter (filter2) targeting a subset of filter1 elements. The goal is to retrieve the ratio of the total length of elements satisfying filter2 within the elements selected by filter1.  \n   - **Expected Response:** HTTP 200 OK with a JSON body containing a numeric ratio between 0 and 1. The response should be logically consistent such that the ratio never exceeds 1. Proper error codes on malformed filters, missing parameters, or unsupported formats are expected as negative tests.\n\n2. **Title:** Validate Ratio Consistency on Repeated and Parameter-Modified Requests  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Repeat the initial request twice to confirm idempotency and caching effects. Then, modify filter2 slightly to include a broader set of elements, expecting an increase (or no decrease) in ratio value. Finally, use a filter2 value that excludes all elements from filter1 to confirm the ratio returns 0.  \n   - **Expected Response:** Consistent ratio values for identical repeated requests. For broader filter2, a ratio equal to or higher than the initial request. For no-overlap filter2, a ratio of 0. Proper error handling on empty or invalid filters.\n\n3. **Title:** Cross-Validate Length Ratio with Complementary Filters to Detect Data Inconsistency  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Submit one request using filter2 and another using its logical complement relative to filter1 (i.e., elements in filter1 but not in filter2). Sum of both ratios should approximate 1 within floating-point tolerance if the filters are mutually exclusive and exhaustive relative to filter1.  \n   - **Expected Response:** Two ratio values whose sum is close to 1. Significant deviation indicates potential defects in filter application or length calculation. Responses must be 200 OK with accurate ratio data.\n\n4. **Title:** Edge Case Testing with Empty filter1 or filter2 Parameters  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Test requests where filter1 is empty (selects no elements), filter2 is empty, and both filters are empty. Verify that the system handles these edge cases gracefully without exceptions or crashes.  \n   - **Expected Response:** For empty filter1, ratio should ideally be 0 or an appropriate error indicating no base elements. For empty filter2, ratio should be 0. For both empty, expect error or zero ratio depending on implementation. No server errors or timeouts allowed.\n\n5. **Title:** Stress Test with Large and Complex Filters for Performance and Stability  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Provide very large and computationally intensive spatial filter parameters for filter1 and filter2 (e.g., complex polygons covering large regions). Monitor server response time and correctness under load.  \n   - **Expected Response:** HTTP 200 OK with valid ratio results within reasonable time (e.g., under 10 seconds). Server should not timeout or crash. Responses with approximate or cached data are acceptable if documented. Errors for oversized filters or resource limits should be clear and informative.\n\n6. **Title:** Test Handling of Invalid and Malformed Filter Parameters  \n   - **API Endpoint:** GET /elements/length/ratio  \n   - **Description:** Send requests with invalid filter formats, non-JSON parameters, missing filter keys, or unsupported filter operations to verify robust input validation and error management.  \n   - **Expected Response:** HTTP 400 Bad Request with clear error messages describing invalid input. No server crashes or ambiguous failures.\n\n**Summary:**  \nThis scenario rigorously tests the GET /elements/length/ratio API by exercising complex filter dependencies, ratio consistency across related queries, edge condition handling, input validation rigor, and performance under large spatial datasets. The chain of logically connected steps ensures detection of subtle defects in length aggregation, filter application logic, server stability, caching, and error handling.", "usage": {"total_tokens": 76813, "total_cost": 0.0362536}, "unique_endpoints": {"200": [], "300": [], "400": ["GET /elements/length", "POST /elements/length"], "500": 0}, "total_true_result": 0, "total_false_result": 4}