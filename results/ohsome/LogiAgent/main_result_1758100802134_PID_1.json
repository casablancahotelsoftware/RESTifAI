{"all_cnt": 4, "all_request_sequence": [{"method": "POST", "api": "/elements/area/density/groupBy/boundary/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag", "headers": {"Content-Type": "application/json"}, "params": {}, "payload": {"bpolys": "{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}", "filter": "type=way and (highway=primary or building=residential)", "groupByKey": "highway,building", "groupByValues": "primary,residential", "format": "json"}, "payload_type": "application/json", "request_data": "method='POST' api='/elements/area/density/groupBy/boundary/groupBy/tag' params={} payload={'bpolys': '{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}', 'filter': 'type=way and (highway=primary or building=residential)', 'groupByKey': 'highway,building', 'groupByValues': 'primary,residential', 'format': 'json'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:18:31.815933956\",\"status\":400,\"message\":\"Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag\"}"}, {"method": "POST", "api": "/elements/area/density/groupBy/boundary/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"bpolys": "{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}", "filter": "type=way and (highway=primary or building=residential)", "groupByKey": "highway,building", "groupByValues": "primary,residential", "format": "json"}, "payload_type": "application/json", "request_data": "method='POST' api='/elements/area/density/groupBy/boundary/groupBy/tag' params={} payload={'bpolys': '{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}', 'filter': 'type=way and (highway=primary or building=residential)', 'groupByKey': 'highway,building', 'groupByValues': 'primary,residential', 'format': 'json'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:19:07.111938134\",\"status\":400,\"message\":\"Unknown parameter '{\\\"bpolys\\\": \\\"{\\\\\\\"type\\\\\\\":\\\\\\\"FeatureCollection\\\\\\\",\\\\\\\"features\\\\\\\":[{\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"polyA_uniqueX9tLpQr7\\\\\\\"},\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"Polygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}},{\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"multiPolyB_uniqueM7rXqLp\\\\\\\"},\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"MultiPolygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}\\\", \\\"filter\\\": \\\"type' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag\"}"}, {"method": "POST", "api": "/elements/area/density/groupBy/boundary/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"bpolys": "[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]],[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]}}]", "filter": "type=way and (highway=primary or building=residential)", "groupByKey": "highway,building", "groupByValues": "primary,residential", "format": "json"}, "payload_type": "application/json", "request_data": "method='POST' api='/elements/area/density/groupBy/boundary/groupBy/tag' params={} payload={'bpolys': '[{\"type\":\"Feature\",\"properties\":{\"id\":\"polyA_uniqueX9tLpQr7\"},\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]}},{\"type\":\"Feature\",\"properties\":{\"id\":\"multiPolyB_uniqueM7rXqLp\"},\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]],[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]}}]', 'filter': 'type=way and (highway=primary or building=residential)', 'groupByKey': 'highway,building', 'groupByValues': 'primary,residential', 'format': 'json'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:19:24.054199913\",\"status\":400,\"message\":\"Unknown parameter '{\\\"bpolys\\\": \\\"[{\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"polyA_uniqueX9tLpQr7\\\\\\\"},\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"Polygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]}},{\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"properties\\\\\\\":{\\\\\\\"id\\\\\\\":\\\\\\\"multiPolyB_uniqueM7rXqLp\\\\\\\"},\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"MultiPolygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]],[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]}}]\\\", \\\"filter\\\": \\\"type' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag\"}"}, {"method": "POST", "api": "/elements/area/density/groupBy/boundary/groupBy/tag", "url": "https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag", "headers": {"Content-Type": "application/x-www-form-urlencoded"}, "params": {}, "payload": {"bpolys": "{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"id\":\"polyA_uniqueX9tLpQr7\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}} , {\"type\":\"Feature\",\"id\":\"multiPolyB_uniqueM7rXqLp\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}", "filter": "type=way and (highway=primary or building=residential)", "groupByKey": "highway,building", "groupByValues": "primary,residential", "format": "json"}, "payload_type": "application/json", "request_data": "method='POST' api='/elements/area/density/groupBy/boundary/groupBy/tag' params={} payload={'bpolys': '{\"type\":\"FeatureCollection\",\"features\":[{\"type\":\"Feature\",\"id\":\"polyA_uniqueX9tLpQr7\",\"geometry\":{\"type\":\"Polygon\",\"coordinates\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}} , {\"type\":\"Feature\",\"id\":\"multiPolyB_uniqueM7rXqLp\",\"geometry\":{\"type\":\"MultiPolygon\",\"coordinates\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}', 'filter': 'type=way and (highway=primary or building=residential)', 'groupByKey': 'highway,building', 'groupByValues': 'primary,residential', 'format': 'json'}", "response_code": 400, "response_data": "{\"timestamp\":\"2025-09-17T09:19:44.483640063\",\"status\":400,\"message\":\"Unknown parameter '{\\\"bpolys\\\": \\\"{\\\\\\\"type\\\\\\\":\\\\\\\"FeatureCollection\\\\\\\",\\\\\\\"features\\\\\\\":[{\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"id\\\\\\\":\\\\\\\"polyA_uniqueX9tLpQr7\\\\\\\",\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"Polygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[[8.6754,49.4211],[8.6868,49.4211],[8.6868,49.4332],[8.6754,49.4332],[8.6754,49.4211]]]}} , {\\\\\\\"type\\\\\\\":\\\\\\\"Feature\\\\\\\",\\\\\\\"id\\\\\\\":\\\\\\\"multiPolyB_uniqueM7rXqLp\\\\\\\",\\\\\\\"geometry\\\\\\\":{\\\\\\\"type\\\\\\\":\\\\\\\"MultiPolygon\\\\\\\",\\\\\\\"coordinates\\\\\\\":[[[[8.6821,49.4191],[8.6889,49.4191],[8.6889,49.4271],[8.6821,49.4271],[8.6821,49.4191]]],[[[8.6801,49.4251],[8.6835,49.4251],[8.6835,49.4281],[8.6801,49.4281],[8.6801,49.4251]]]]}}]}\\\", \\\"filter\\\": \\\"type' for this resource.\",\"requestUrl\":\"https://api.ohsome.org/v1/elements/area/density/groupBy/boundary/groupBy/tag\"}"}], "right_results": [], "wrong_results": [{"request_info": "POST /elements/area/density/groupBy/boundary/groupBy/tag with valid polygon and multipolygon boundaries, filters for highway=primary and building=residential, groupByKeys 'highway' and 'building', and groupByValues 'primary' and 'residential'. Request body was sent as JSON rather than 'application/x-www-form-urlencoded'.", "oracle": "HTTP 200 OK with a JSON response containing density values keyed by each boundary-tag pair. Density values should be numeric and consistent with input boundaries and tags format. No missing or malformed grouping entries should be present.", "judge_reason": "The actual response status code is 400 Bad Request, caused by an unsupported content-type header. The request body was submitted as JSON instead of the required 'application/x-www-form-urlencoded' or 'multipart/form-data', resulting in the server rejecting the request before processing the valid data. This indicates a protocol usage error rather than a content validation failure. The expected outcome was a 200 OK with correct density computations; thus, the response does not align with the expected result.", "response": "HTTP 400 Bad Request with message: Unsupported content-type header found. Please make sure to use either 'multipart/form-data' or 'application/x-www-form-urlencoded'."}, {"request_info": "POST /elements/area/density/groupBy/boundary/groupBy/tag with parameters including 'bpolys' as serialized JSON string, 'filter', 'groupByKey', and 'groupByValues', sent as application/x-www-form-urlencoded but improperly encoded leading to unknown parameter error.", "oracle": "HTTP 200 OK with a JSON response containing density values keyed by each boundary-tag pair. Density values should be numeric and consistent with input boundaries and tags format. No missing or malformed grouping entries should be present.", "judge_reason": "The actual response is HTTP 400 Bad Request with the error message indicating an unknown parameter including the serialized 'bpolys' JSON string. This suggests that the request parameters were improperly formatted and sent incorrectly to the API. The API expects each parameter as a separate URL-encoded form field, but the client sent a JSON payload or nested parameter structure instead. This misalignment caused the request to be rejected before processing valid data. Thus, the response does not meet the expected outcome for this test case with valid inputs.", "response": "HTTP 400 Bad Request with message: Unknown parameter '{\"bpolys\": ...}' for this resource."}, {"request_info": "POST /elements/area/density/groupBy/boundary/groupBy/tag with 'bpolys' parameter supplied as a stringified JSON array of GeoJSON features (Polygon and MultiPolygon), 'filter', 'groupByKey', and 'groupByValues', content-type 'application/x-www-form-urlencoded'.", "oracle": "HTTP 200 OK with a JSON response containing density values keyed by each boundary-tag pair. Density values should be numeric and consistent with input boundaries and tags format. No missing or malformed grouping entries should be present.", "judge_reason": "The 400 Bad Request error persists with the message indicating an unknown parameter, now showing a stringified JSON array for 'bpolys'. This suggests the API does not accept GeoJSON or JSON string formats for the boundary parameter as submitted. Instead, the API requires boundaries formatted as per its documented 'pipe-sign' separated coordinate strings or specific non-JSON formats. The inconsistent parameter formatting leads to rejection of the request before any density computation, causing failure to meet the expected 200 OK response.", "response": "HTTP 400 Bad Request with message: Unknown parameter '{\"bpolys\": ...}' for this resource indicating parameter format mismatch."}, {"request_info": "POST /elements/area/density/groupBy/boundary/groupBy/tag with 'bpolys' parameter as JSON stringified GeoJSON, plus filtering and grouping parameters, content-type application/x-www-form-urlencoded.", "oracle": "HTTP 200 OK with a JSON response containing density values keyed by each boundary-tag pair. Density values should be numeric and consistent with input boundaries and tags format. No missing or malformed grouping entries should be present.", "judge_reason": "The server responded with HTTP 400 Bad Request indicating an unknown parameter including the 'bpolys' payload as a JSON string. Despite multiple attempts to send the boundary data as JSON strings in the 'bpolys' field, the API rejects this format, suggesting the parameter must be a raw GeoJSON string or a specially formatted coordinate string per API documentation. The error signals that the payload is not properly formatted or escaped for 'application/x-www-form-urlencoded' content type, leading to consistent rejections. Hence, the response does not align with the expected 200 OK and valid density data output.", "response": "HTTP 400 Bad Request with error message indicating unknown parameter including 'bpolys' field JSON string."}], "test_scenario_response_message": "1. **Title:** Initial Density Aggregation Grouped by Boundary and Tag\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Submit a complex request containing multiple distinct valid spatial boundary definitions (e.g., polygon and multipolygon) along with multiple valid OSM tags (e.g., {\"highway\": \"primary\"}, {\"building\": \"residential\"}) to retrieve the density of area covered by selected OSM elements grouped by each boundary and tag combination.\n   - **Expected Response:** HTTP 200 OK with a JSON response containing density values keyed by each boundary-tag pair. Density values should be numeric and consistent with input boundaries and tags format. No missing or malformed grouping entries should be present.\n\n2. **Title:** Retrieve Density for a Subset of Boundaries with Overlapping Spatial Coordinates\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Make a subsequent call with boundaries that partially overlap those from the initial request, using a subset of the original tags plus an additional new valid tag (e.g., {\"landuse\": \"forest\"}). This tests how overlapping geographical boundaries with mixed tag sets affect aggregation.\n   - **Expected Response:** HTTP 200 OK with density data consistent with the input. Specifically, density values for overlapping boundaries should reflect correct aggregation without double counting or omission. The newly introduced tag grouping should be present and return plausible density numbers.\n\n3. **Title:** Update Request with Invalid Boundary Geometry and Malformed Tag Structure\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Send a malformed request body containing invalid boundary polygons (e.g., self-intersecting polygons, missing coordinates) and improperly structured tags (e.g., tags as a string instead of an object, empty tag keys). This tests server validation robustness.\n   - **Expected Response:** HTTP 400 Bad Request with detailed error messages indicating invalid boundary geometry and improper tag format. No partial results or 200 OK responses should be returned.\n\n4. **Title:** Repeated Request with Valid Inputs to Validate Idempotency and Caching\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Resend the first valid request (from Step 1) multiple times in quick succession to examine idempotency, caching behavior, and consistency of density results.\n   - **Expected Response:** HTTP 200 OK with identical density values on each call, confirming stable aggregation and no side effects such as accumulation errors or response variance.\n\n5. **Title:** Request with Large-Scale Boundaries and Multiple Tags to Test Scalability and Performance\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Submit a request with very large geographic boundaries (e.g., entire metropolitan areas or multiple countries represented as multi-polygons) combined with a wide array of tags (e.g., highways, landuse, amenities). The goal is to evaluate the API\u2019s performance under heavy load and verify all groupings return comprehensive, accurate density calculations.\n   - **Expected Response:** HTTP 200 OK (or HTTP 202 Accepted if asynchronous processing is used, accompanied by a status check mechanism). The response should contain well-structured density data grouped as requested with no timeout errors, data truncation, or incomplete groupings.\n\n6. **Title:** Delete or Clean Up Resource Simulation by Sending Empty Boundary and Tag Lists\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** Simulate a cleanup or reset scenario by invoking the endpoint with empty arrays for boundaries and tags, testing how the server handles requests that logically request no aggregation.\n   - **Expected Response:** HTTP 200 OK with an empty result set or an explicit message indicating no boundaries or tags were provided. Importantly, the server should not crash, hang, or return errors like 500 Internal Server Error.\n\n7. **Title:** Boundary and Tag Mismatch Validation Across Consecutive Requests\n   - **API Endpoint:** POST /elements/area/density/groupBy/boundary/groupBy/tag\n   - **Description:** After successful runs, send a request where boundaries and tags do not logically match any OSM elements (e.g., boundaries in ocean areas and tags related to urban elements). Then query again with plausible matching boundaries and tags to verify that zero densities are correctly differentiated from missing or malformed results.\n   - **Expected Response:** The first request returns HTTP 200 OK with all zero densities reflecting absence of elements. The subsequent plausible request returns positive density values consistent with expected OSM data coverage, confirming API differentiation between \u201cno elements found\u201d and \u201cinvalid input\u201d.\n\nSummary:  \nThis integrated scenario exercises the POST /elements/area/density/groupBy/boundary/groupBy/tag endpoint through complex valid inputs, overlapping boundaries, input validation with malformed data, idempotency checks, large-scale performance stress, empty input handling simulating cleanup, and logical mismatch testing. The scenario reveals issues in aggregation correctness, input validation robustness, performance under stress, response consistency, and error management critical for the reliable operation of density computations grouped by spatial boundary and tags.", "usage": {"total_tokens": 100458, "total_cost": 0.0484608}, "unique_endpoints": {"200": [], "300": [], "400": ["POST /elements/area"], "500": 0}, "total_true_result": 0, "total_false_result": 4}